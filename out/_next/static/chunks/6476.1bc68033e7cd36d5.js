(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[6476],{73024:function(e,t,f){"use strict";f.r(t),f.d(t,{getClientSideQuoteResult:function(){return getClientSideQuoteResult}});var n,a,i,r,o,s,d,u,l,p,h,b,m,y,T,g,v,C,I=f(21076),E=f(40516),A=f(74001),w=f.n(A),S=f(95356);let NodeJSCache=class NodeJSCache{constructor(e){this.nodeCache=e}async get(e){return this.nodeCache.get(e)}async batchGet(e){let t=Array.from(e),f=await Promise.all(t.map(e=>this.get(e))),n={};return t.forEach((e,t)=>{n[e]=f[t]}),n}async set(e,t,f){return f?this.nodeCache.set(e,t,f):this.nodeCache.set(e,t)}async has(e){return this.nodeCache.has(e)}};let P=new class{constructor(){this.ERROR_MESSAGE='NullLogger does not support. Instantiate a valid logger using "setGlobalLogger"',this.src=!0}addStream(e){throw Error(this.ERROR_MESSAGE)}addSerializers(e){throw Error(this.ERROR_MESSAGE)}child(e,t){return this}reopenFileStreams(){throw Error(this.ERROR_MESSAGE)}level(e){}levels(e,t){}trace(...e){return!0}debug(...e){return!0}info(...e){return!0}warn(...e){return!0}error(...e){return!0}fatal(...e){return!0}addListener(e,t){throw Error(this.ERROR_MESSAGE)}on(e,t){throw Error(this.ERROR_MESSAGE)}once(e,t){throw Error(this.ERROR_MESSAGE)}removeListener(e,t){throw Error(this.ERROR_MESSAGE)}off(e,t){throw Error(this.ERROR_MESSAGE)}removeAllListeners(e){throw Error(this.ERROR_MESSAGE)}setMaxListeners(e){throw Error(this.ERROR_MESSAGE)}getMaxListeners(){throw Error(this.ERROR_MESSAGE)}listeners(e){throw Error(this.ERROR_MESSAGE)}rawListeners(e){throw Error(this.ERROR_MESSAGE)}emit(e,...t){throw Error(this.ERROR_MESSAGE)}listenerCount(e){throw Error(this.ERROR_MESSAGE)}prependListener(e,t){throw Error(this.ERROR_MESSAGE)}prependOnceListener(e,t){throw Error(this.ERROR_MESSAGE)}eventNames(){throw Error(this.ERROR_MESSAGE)}};let IGasPriceProvider=class IGasPriceProvider{};let CachingGasStationProvider=class CachingGasStationProvider extends IGasPriceProvider{constructor(e,t,f){super(),this.chainId=e,this.gasPriceProvider=t,this.cache=f,this.GAS_KEY=(e,t)=>`gasPrice-${e}-${t}`}async getGasPrice(e,t){let f=null!=t?t:e,n=await this.cache.get(this.GAS_KEY(this.chainId,f));if(n)return P.info({cachedGasPrice:n},`Got gas station price from local cache: ${n.gasPriceWei}.`),n;let a=await this.gasPriceProvider.getGasPrice(e,t);return await this.cache.set(this.GAS_KEY(this.chainId,f),a),a}};var O=f(29186),k=f.n(O);(n=p||(p={})).Seconds="Seconds",n.Microseconds="Microseconds",n.Milliseconds="Milliseconds",n.Bytes="Bytes",n.Kilobytes="Kilobytes",n.Megabytes="Megabytes",n.Gigabytes="Gigabytes",n.Terabytes="Terabytes",n.Bits="Bits",n.Kilobits="Kilobits",n.Megabits="Megabits",n.Gigabits="Gigabits",n.Terabits="Terabits",n.Percent="Percent",n.Count="Count",n.BytesPerSecond="Bytes/Second",n.KilobytesPerSecond="Kilobytes/Second",n.MegabytesPerSecond="Megabytes/Second",n.GigabytesPerSecond="Gigabytes/Second",n.TerabytesPerSecond="Terabytes/Second",n.BitsPerSecond="Bits/Second",n.KilobitsPerSecond="Kilobits/Second",n.MegabitsPerSecond="Megabits/Second",n.GigabitsPerSecond="Gigabits/Second",n.TerabitsPerSecond="Terabits/Second",n.CountPerSecond="Count/Second",n.None="None";let IMetric=class IMetric{};let R=new class extends IMetric{constructor(e){super(),this.log=P.child(e||{})}setProperty(e,t){this.log=this.log.child({[e]:t})}putDimensions(e){this.log=this.log.child(e)}putMetric(e,t,f){this.log.info({key:e,value:t,unit:f},`[Metric]: ${e}: ${t} | ${f||""}`)}};let CachingTokenListProvider=class CachingTokenListProvider{constructor(e,t,f){for(let n of(this.tokenCache=f,this.CACHE_KEY=e=>`token-list-token-${this.chainId}/${this.tokenList.name}/${this.tokenList.timestamp}/${this.tokenList.version}/${e.address.toLowerCase()}/${e.decimals}/${e.symbol}/${e.name}`,this.CHAIN_SYMBOL_KEY=(e,t)=>`${e.toString()}/${t}`,this.CHAIN_ADDRESS_KEY=(e,t)=>`${e.toString()}/${t.toLowerCase()}`,this.chainId=e,this.tokenList=t,this.chainToTokenInfos=new Map,this.chainSymbolToTokenInfo=new Map,this.chainAddressToTokenInfo=new Map,this.tokenList.tokens)){let e=n.chainId,t=e.toString(),f=n.symbol,a=n.address.toLowerCase();this.chainToTokenInfos.has(t)||this.chainToTokenInfos.set(t,[]),this.chainToTokenInfos.get(t).push(n),this.chainSymbolToTokenInfo.set(this.CHAIN_SYMBOL_KEY(e,f),n),this.chainAddressToTokenInfo.set(this.CHAIN_ADDRESS_KEY(e,a),n)}}static async fromTokenListURI(e,t,f){let n=Date.now(),a=await this.buildTokenList(t);return R.putMetric("TokenListLoad",Date.now()-n,p.Milliseconds),new CachingTokenListProvider(e,a,f)}static async buildTokenList(e){P.info(`Getting tokenList from ${e}.`);let t=await k().get(e);P.info(`Got tokenList from ${e}.`);let{data:f,status:n}=t;if(200!=n)throw P.error({response:t},`Unabled to get token list from ${e}.`),Error(`Unable to get token list from ${e}`);return f}static async fromTokenList(e,t,f){let n=Date.now(),a=new CachingTokenListProvider(e,t,f);return R.putMetric("TokenListLoad",Date.now()-n,p.Milliseconds),a}async getTokens(e){var t;let f=new Map,n=new Map,addToken=e=>{e&&(f.set(e.address.toLowerCase(),e),void 0!==e.symbol&&n.set(e.symbol.toLowerCase(),e))};if(e)for(let t of e){let e=await this.getTokenByAddress(t);addToken(e)}else{let e=null!==(t=this.chainToTokenInfos.get(this.chainId.toString()))&&void 0!==t?t:[];for(let t of e){let e=await this.buildToken(t);addToken(e)}}return{getTokenByAddress:e=>f.get(e.toLowerCase()),getTokenBySymbol:e=>n.get(e.toLowerCase()),getAllTokens:()=>Array.from(f.values())}}async hasTokenBySymbol(e){return this.chainSymbolToTokenInfo.has(this.CHAIN_SYMBOL_KEY(this.chainId,e))}async getTokenBySymbol(e){let t=e;"ETH"==e&&(t="WETH");let f=this.chainSymbolToTokenInfo.get(this.CHAIN_SYMBOL_KEY(this.chainId,t));if(!f)return;let n=await this.buildToken(f);return n}async hasTokenByAddress(e){return this.chainAddressToTokenInfo.has(this.CHAIN_ADDRESS_KEY(this.chainId,e))}async getTokenByAddress(e){let t=this.chainAddressToTokenInfo.get(this.CHAIN_ADDRESS_KEY(this.chainId,e));if(!t)return;let f=await this.buildToken(t);return f}async buildToken(e){let t=this.CACHE_KEY(e),f=await this.tokenCache.get(t);if(f)return f;let n=new S.Token(this.chainId,e.address,e.decimals,e.symbol,e.name);return await this.tokenCache.set(t,n),n}};var M=f(2890),x=f.n(M),B=f(74695);f(25566),S.ChainId.MAINNET,S.ChainId.OPTIMISM,S.ChainId.OPTIMISM_GOERLI,S.ChainId.ARBITRUM_ONE,S.ChainId.ARBITRUM_GOERLI,S.ChainId.POLYGON,S.ChainId.POLYGON_MUMBAI,S.ChainId.GOERLI,S.ChainId.SEPOLIA,S.ChainId.CELO_ALFAJORES,S.ChainId.CELO,S.ChainId.BNB,S.ChainId.AVALANCHE,S.ChainId.BASE;let D=[S.ChainId.MAINNET,S.ChainId.GOERLI,S.ChainId.SEPOLIA],N=[S.ChainId.OPTIMISM,S.ChainId.OPTIMISM_GOERLI,S.ChainId.ARBITRUM_ONE,S.ChainId.ARBITRUM_GOERLI,S.ChainId.BASE,S.ChainId.BASE_GOERLI],L=[S.ChainId.MAINNET,S.ChainId.GOERLI,S.ChainId.OPTIMISM,S.ChainId.ARBITRUM_ONE,S.ChainId.POLYGON,S.ChainId.POLYGON_MUMBAI],ID_TO_CHAIN_ID=e=>{switch(e){case 1:return S.ChainId.MAINNET;case 5:return S.ChainId.GOERLI;case 11155111:return S.ChainId.SEPOLIA;case 56:return S.ChainId.BNB;case 10:return S.ChainId.OPTIMISM;case 420:return S.ChainId.OPTIMISM_GOERLI;case 42161:return S.ChainId.ARBITRUM_ONE;case 421613:return S.ChainId.ARBITRUM_GOERLI;case 137:return S.ChainId.POLYGON;case 80001:return S.ChainId.POLYGON_MUMBAI;case 42220:return S.ChainId.CELO;case 44787:return S.ChainId.CELO_ALFAJORES;case 100:return S.ChainId.GNOSIS;case 1284:return S.ChainId.MOONBEAM;case 43114:return S.ChainId.AVALANCHE;case 8453:return S.ChainId.BASE;case 84531:return S.ChainId.BASE_GOERLI;default:throw Error(`Unknown chain id: ${e}`)}};(a=h||(h={})).MAINNET="mainnet",a.GOERLI="goerli",a.SEPOLIA="sepolia",a.OPTIMISM="optimism-mainnet",a.OPTIMISM_GOERLI="optimism-goerli",a.ARBITRUM_ONE="arbitrum-mainnet",a.ARBITRUM_GOERLI="arbitrum-goerli",a.POLYGON="polygon-mainnet",a.POLYGON_MUMBAI="polygon-mumbai",a.CELO="celo-mainnet",a.CELO_ALFAJORES="celo-alfajores",a.GNOSIS="gnosis-mainnet",a.MOONBEAM="moonbeam-mainnet",a.BNB="bnb-mainnet",a.AVALANCHE="avalanche-mainnet",a.BASE="base-mainnet",a.BASE_GOERLI="base-goerli",(i=b||(b={})).ETHER="ETH",i.MATIC="MATIC",i.CELO="CELO",i.GNOSIS="XDAI",i.MOONBEAM="GLMR",i.BNB="BNB",i.AVALANCHE="AVAX",S.ChainId.MAINNET,S.ChainId.GOERLI,S.ChainId.SEPOLIA,S.ChainId.OPTIMISM,S.ChainId.OPTIMISM_GOERLI,S.ChainId.ARBITRUM_ONE,S.ChainId.ARBITRUM_GOERLI,S.ChainId.POLYGON,S.ChainId.POLYGON_MUMBAI,S.ChainId.CELO,S.ChainId.CELO_ALFAJORES,S.ChainId.GNOSIS,S.ChainId.MOONBEAM,S.ChainId.BNB,S.ChainId.AVALANCHE,S.ChainId.BASE,S.ChainId.MAINNET,b.ETHER,S.ChainId.GOERLI,b.ETHER,S.ChainId.SEPOLIA,b.ETHER,S.ChainId.OPTIMISM,b.ETHER,S.ChainId.OPTIMISM_GOERLI,b.ETHER,S.ChainId.ARBITRUM_ONE,b.ETHER,S.ChainId.ARBITRUM_GOERLI,b.ETHER,S.ChainId.POLYGON,b.MATIC,S.ChainId.POLYGON_MUMBAI,b.MATIC,S.ChainId.CELO,b.CELO,S.ChainId.CELO_ALFAJORES,b.CELO,S.ChainId.GNOSIS,b.GNOSIS,S.ChainId.MOONBEAM,b.MOONBEAM,S.ChainId.BNB,b.BNB,S.ChainId.AVALANCHE,b.AVALANCHE,S.ChainId.BASE,b.ETHER;let ID_TO_NETWORK_NAME=e=>{switch(e){case 1:return h.MAINNET;case 5:return h.GOERLI;case 11155111:return h.SEPOLIA;case 56:return h.BNB;case 10:return h.OPTIMISM;case 420:return h.OPTIMISM_GOERLI;case 42161:return h.ARBITRUM_ONE;case 421613:return h.ARBITRUM_GOERLI;case 137:return h.POLYGON;case 80001:return h.POLYGON_MUMBAI;case 42220:return h.CELO;case 44787:return h.CELO_ALFAJORES;case 100:return h.GNOSIS;case 1284:return h.MOONBEAM;case 43114:return h.AVALANCHE;case 8453:return h.BASE;case 84531:return h.BASE_GOERLI;default:throw Error(`Unknown chain id: ${e}`)}};Object.values(S.ChainId).map(e=>e.toString());let U={[S.ChainId.MAINNET]:new S.Token(1,"0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2",18,"WETH","Wrapped Ether"),[S.ChainId.GOERLI]:new S.Token(5,"0xB4FBF271143F4FBf7B91A5ded31805e42b2208d6",18,"WETH","Wrapped Ether"),[S.ChainId.SEPOLIA]:new S.Token(11155111,"0xfFf9976782d46CC05630D1f6eBAb18b2324d6B14",18,"WETH","Wrapped Ether"),[S.ChainId.BNB]:new S.Token(56,"0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c",18,"WBNB","Wrapped BNB"),[S.ChainId.OPTIMISM]:new S.Token(S.ChainId.OPTIMISM,"0x4200000000000000000000000000000000000006",18,"WETH","Wrapped Ether"),[S.ChainId.OPTIMISM_GOERLI]:new S.Token(S.ChainId.OPTIMISM_GOERLI,"0x4200000000000000000000000000000000000006",18,"WETH","Wrapped Ether"),[S.ChainId.ARBITRUM_ONE]:new S.Token(S.ChainId.ARBITRUM_ONE,"0x82aF49447D8a07e3bd95BD0d56f35241523fBab1",18,"WETH","Wrapped Ether"),[S.ChainId.ARBITRUM_GOERLI]:new S.Token(S.ChainId.ARBITRUM_GOERLI,"0xe39Ab88f8A4777030A534146A9Ca3B52bd5D43A3",18,"WETH","Wrapped Ether"),[S.ChainId.POLYGON]:new S.Token(S.ChainId.POLYGON,"0x0d500B1d8E8eF31E21C99d1Db9A6444d3ADf1270",18,"WMATIC","Wrapped MATIC"),[S.ChainId.POLYGON_MUMBAI]:new S.Token(S.ChainId.POLYGON_MUMBAI,"0x9c3C9283D3e44854697Cd22D3Faa240Cfb032889",18,"WMATIC","Wrapped MATIC"),[S.ChainId.CELO]:new S.Token(S.ChainId.CELO,"0x471EcE3750Da237f93B8E339c536989b8978a438",18,"CELO","Celo native asset"),[S.ChainId.CELO_ALFAJORES]:new S.Token(S.ChainId.CELO_ALFAJORES,"0xF194afDf50B03e69Bd7D057c1Aa9e10c9954E4C9",18,"CELO","Celo native asset"),[S.ChainId.GNOSIS]:new S.Token(S.ChainId.GNOSIS,"0xe91d153e0b41518a2ce8dd3d7944fa863463a97d",18,"WXDAI","Wrapped XDAI on Gnosis"),[S.ChainId.MOONBEAM]:new S.Token(S.ChainId.MOONBEAM,"0xAcc15dC74880C9944775448304B263D191c6077F",18,"WGLMR","Wrapped GLMR"),[S.ChainId.AVALANCHE]:new S.Token(S.ChainId.AVALANCHE,"0xB31f66AA3C1e785363F0875A1B74E27b85FD66c7",18,"WAVAX","Wrapped AVAX"),[S.ChainId.BASE]:new S.Token(S.ChainId.BASE,"0x4200000000000000000000000000000000000006",18,"WETH","Wrapped Ether"),[S.ChainId.BASE_GOERLI]:new S.Token(S.ChainId.BASE_GOERLI,"0x4200000000000000000000000000000000000006",18,"WETH","Wrapped Ether")};let ExtendedEther=class ExtendedEther extends S.Ether{get wrapped(){if(this.chainId in U)return U[this.chainId];throw Error("Unsupported chain ID")}static onChain(e){var t;return null!==(t=this._cachedExtendedEther[e])&&void 0!==t?t:this._cachedExtendedEther[e]=new ExtendedEther(e)}};ExtendedEther._cachedExtendedEther={},S.CHAIN_TO_ADDRESSES_MAP[S.ChainId.BNB].tickLensAddress,S.CHAIN_TO_ADDRESSES_MAP[S.ChainId.BNB].nonfungiblePositionManagerAddress;let G=S.CHAIN_TO_ADDRESSES_MAP[S.ChainId.BNB].swapRouter02Address;S.CHAIN_TO_ADDRESSES_MAP[S.ChainId.BNB].v3MigratorAddress;let V={...constructSameAddressMap(B.FACTORY_ADDRESS),[S.ChainId.CELO]:S.CHAIN_TO_ADDRESSES_MAP[S.ChainId.CELO].v3CoreFactoryAddress,[S.ChainId.CELO_ALFAJORES]:S.CHAIN_TO_ADDRESSES_MAP[S.ChainId.CELO_ALFAJORES].v3CoreFactoryAddress,[S.ChainId.OPTIMISM_GOERLI]:S.CHAIN_TO_ADDRESSES_MAP[S.ChainId.OPTIMISM_GOERLI].v3CoreFactoryAddress,[S.ChainId.SEPOLIA]:S.CHAIN_TO_ADDRESSES_MAP[S.ChainId.SEPOLIA].v3CoreFactoryAddress,[S.ChainId.ARBITRUM_GOERLI]:S.CHAIN_TO_ADDRESSES_MAP[S.ChainId.ARBITRUM_GOERLI].v3CoreFactoryAddress,[S.ChainId.BNB]:S.CHAIN_TO_ADDRESSES_MAP[S.ChainId.BNB].v3CoreFactoryAddress,[S.ChainId.AVALANCHE]:S.CHAIN_TO_ADDRESSES_MAP[S.ChainId.AVALANCHE].v3CoreFactoryAddress,[S.ChainId.BASE_GOERLI]:S.CHAIN_TO_ADDRESSES_MAP[S.ChainId.BASE_GOERLI].v3CoreFactoryAddress,[S.ChainId.BASE]:S.CHAIN_TO_ADDRESSES_MAP[S.ChainId.BASE].v3CoreFactoryAddress},q={...constructSameAddressMap("0x61fFE014bA17989E743c5F6cB21bF9697530B21e"),[S.ChainId.CELO]:S.CHAIN_TO_ADDRESSES_MAP[S.ChainId.CELO].quoterAddress,[S.ChainId.CELO_ALFAJORES]:S.CHAIN_TO_ADDRESSES_MAP[S.ChainId.CELO_ALFAJORES].quoterAddress,[S.ChainId.OPTIMISM_GOERLI]:S.CHAIN_TO_ADDRESSES_MAP[S.ChainId.OPTIMISM_GOERLI].quoterAddress,[S.ChainId.SEPOLIA]:S.CHAIN_TO_ADDRESSES_MAP[S.ChainId.SEPOLIA].quoterAddress,[S.ChainId.ARBITRUM_GOERLI]:S.CHAIN_TO_ADDRESSES_MAP[S.ChainId.ARBITRUM_GOERLI].quoterAddress,[S.ChainId.BNB]:S.CHAIN_TO_ADDRESSES_MAP[S.ChainId.BNB].quoterAddress,[S.ChainId.AVALANCHE]:S.CHAIN_TO_ADDRESSES_MAP[S.ChainId.AVALANCHE].quoterAddress,[S.ChainId.BASE_GOERLI]:S.CHAIN_TO_ADDRESSES_MAP[S.ChainId.BASE_GOERLI].quoterAddress,[S.ChainId.BASE]:S.CHAIN_TO_ADDRESSES_MAP[S.ChainId.BASE].quoterAddress},H={[S.ChainId.MAINNET]:S.CHAIN_TO_ADDRESSES_MAP[S.ChainId.MAINNET].v1MixedRouteQuoterAddress,[S.ChainId.GOERLI]:S.CHAIN_TO_ADDRESSES_MAP[S.ChainId.GOERLI].v1MixedRouteQuoterAddress},W={...constructSameAddressMap("0x1F98415757620B543A52E61c46B32eB19261F984"),[S.ChainId.CELO]:S.CHAIN_TO_ADDRESSES_MAP[S.ChainId.CELO].multicallAddress,[S.ChainId.CELO_ALFAJORES]:S.CHAIN_TO_ADDRESSES_MAP[S.ChainId.CELO_ALFAJORES].multicallAddress,[S.ChainId.OPTIMISM_GOERLI]:S.CHAIN_TO_ADDRESSES_MAP[S.ChainId.OPTIMISM_GOERLI].multicallAddress,[S.ChainId.SEPOLIA]:S.CHAIN_TO_ADDRESSES_MAP[S.ChainId.SEPOLIA].multicallAddress,[S.ChainId.ARBITRUM_GOERLI]:S.CHAIN_TO_ADDRESSES_MAP[S.ChainId.ARBITRUM_GOERLI].multicallAddress,[S.ChainId.BNB]:S.CHAIN_TO_ADDRESSES_MAP[S.ChainId.BNB].multicallAddress,[S.ChainId.AVALANCHE]:S.CHAIN_TO_ADDRESSES_MAP[S.ChainId.AVALANCHE].multicallAddress,[S.ChainId.BASE_GOERLI]:S.CHAIN_TO_ADDRESSES_MAP[S.ChainId.BASE_GOERLI].multicallAddress,[S.ChainId.BASE]:S.CHAIN_TO_ADDRESSES_MAP[S.ChainId.BASE].multicallAddress},addresses_SWAP_ROUTER_02_ADDRESSES=e=>e==S.ChainId.BNB?G:"0x68b3465833fb72A70ecDF485E0e4C7bD8665Fc45";function constructSameAddressMap(e,t=[]){return L.concat(t).reduce((t,f)=>(t[f]=e,t),{})}S.CHAIN_TO_ADDRESSES_MAP[S.ChainId.ARBITRUM_ONE].tickLensAddress,S.CHAIN_TO_ADDRESSES_MAP[S.ChainId.MAINNET].nonfungiblePositionManagerAddress,S.CHAIN_TO_ADDRESSES_MAP[S.ChainId.MAINNET].v3MigratorAddress,S.ChainId.MAINNET,new S.Token(S.ChainId.MAINNET,"0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2",18,"WETH","Wrapped Ether"),S.ChainId.GOERLI,new S.Token(S.ChainId.GOERLI,"0xB4FBF271143F4FBf7B91A5ded31805e42b2208d6",18,"WETH","Wrapped Ether"),S.ChainId.SEPOLIA,new S.Token(S.ChainId.SEPOLIA,"0xfFf9976782d46CC05630D1f6eBAb18b2324d6B14",18,"WETH","Wrapped Ether"),S.ChainId.OPTIMISM,new S.Token(S.ChainId.OPTIMISM,"0x4200000000000000000000000000000000000006",18,"WETH","Wrapped Ether"),S.ChainId.OPTIMISM_GOERLI,new S.Token(S.ChainId.OPTIMISM_GOERLI,"0x4200000000000000000000000000000000000006",18,"WETH","Wrapped Ether"),S.ChainId.ARBITRUM_ONE,new S.Token(S.ChainId.ARBITRUM_ONE,"0x82aF49447D8a07e3bd95BD0d56f35241523fBab1",18,"WETH","Wrapped Ether"),S.ChainId.ARBITRUM_GOERLI,new S.Token(S.ChainId.ARBITRUM_GOERLI,"0xe39Ab88f8A4777030A534146A9Ca3B52bd5D43A3",18,"WETH","Wrapped Ether"),S.ChainId.BASE_GOERLI,new S.Token(S.ChainId.BASE_GOERLI,"0x4200000000000000000000000000000000000006",18,"WETH","Wrapped Ether"),S.ChainId.BASE,new S.Token(S.ChainId.BASE,"0x4200000000000000000000000000000000000006",18,"WETH","Wrapped Ether");var j=f(94e3),_=f.n(j);let amounts_CurrencyAmount=class amounts_CurrencyAmount extends S.CurrencyAmount{};function parseFeeAmount(e){switch(e){case"10000":return B.FeeAmount.HIGH;case"3000":return B.FeeAmount.MEDIUM;case"500":return B.FeeAmount.LOW;case"100":return B.FeeAmount.LOWEST;default:throw Error(`Fee amount ${e} not supported.`)}}function unparseFeeAmount(e){switch(e){case B.FeeAmount.HIGH:return"10000";case B.FeeAmount.MEDIUM:return"3000";case B.FeeAmount.LOW:return"500";case B.FeeAmount.LOWEST:return"100";default:throw Error(`Fee amount ${e} not supported.`)}}var Q=f(716),Y=f(71008);let routes_routeToString=e=>{let t=[],f=e.protocol===Q.Protocol.V3?e.tokenPath:e.path,n=x().map(f,e=>`${e.symbol}`),a=e.protocol===Q.Protocol.V3||e.protocol===Q.Protocol.MIXED?e.pools:e.pairs,i=x().map(a,e=>`${e instanceof B.Pool?` -- ${e.fee/1e4}% [${B.Pool.getAddress(e.token0,e.token1,e.fee,void 0,V[e.chainId])}]`:` -- [${Y.sO.getAddress(e.token0,e.token1)}]`} --> `);for(let e=0;e<n.length;e++)t.push(n[e]),e<i.length&&t.push(i[e]);return t.join("")},routeAmountsToString=e=>{let t=x().reduce(e,(e,t)=>e.add(t.amount),amounts_CurrencyAmount.fromRawAmount(e[0].amount.currency,0)),f=x().map(e,({protocol:e,route:f,amount:n})=>{let a=n.divide(t),i=new S.Percent(a.numerator,a.denominator);return`[${e==Q.Protocol.MIXED?"V2 + V3":e}] ${i.toFixed(2)}% = ${routes_routeToString(f)}`});return x().join(f,", ")},poolToString=e=>`${e.token0.symbol}/${e.token1.symbol}${e instanceof B.Pool?`/${e.fee/1e4}%`:""}`;var X=f(98291),K=f(94287),z=f(28410);let J=[{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"spender",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Approval",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Transfer",type:"event"},{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"spender",type:"address"}],name:"allowance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"approve",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"decimals",outputs:[{internalType:"uint8",name:"",type:"uint8"}],stateMutability:"view",type:"function"},{inputs:[],name:"name",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[],name:"symbol",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[],name:"totalSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transfer",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transferFrom",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"}];let IERC20Metadata__factory=class IERC20Metadata__factory{static createInterface(){return new X.vU(J)}static connect(e,t){return new z.Contract(e,J,t)}};IERC20Metadata__factory.abi=J;let Z=new S.Token(S.ChainId.MAINNET,"0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48",6,"USDC","USD//C"),$=new S.Token(S.ChainId.MAINNET,"0xdAC17F958D2ee523a2206206994597C13D831ec7",6,"USDT","Tether USD"),ee=new S.Token(S.ChainId.MAINNET,"0x2260FAC5E5542a773Aa44fBCfeDf7C193bc2C599",8,"WBTC","Wrapped BTC"),et=new S.Token(S.ChainId.MAINNET,"0x6B175474E89094C44Da98b954EedeAC495271d0F",18,"DAI","Dai Stablecoin"),ef=new S.Token(S.ChainId.MAINNET,"0x956F47F50A910163D8BF957Cf5846D573E7f87CA",18,"FEI","Fei USD");new S.Token(S.ChainId.MAINNET,"0x1f9840a85d5af5bf1d1762f925bdaddc4201f984",18,"UNI","Uniswap");let en=new S.Token(S.ChainId.MAINNET,"0x7Fc66500c84A76Ad7e9c93437bFc5Ac33E2DDaE9",18,"AAVE","Aave Token"),ea=new S.Token(S.ChainId.MAINNET,"0x5A98FcBEA516Cf06857215779Fd812CA3beF1B32",18,"LDO","Lido DAO Token"),ei=new S.Token(S.ChainId.SEPOLIA,"0x6f14C02Fc1F78322cFd7d707aB90f18baD3B54f5",18,"USDC","USDC Token"),er=new S.Token(S.ChainId.SEPOLIA,"0x7AF17A48a6336F7dc1beF9D485139f7B6f4FB5C8",18,"DAI","DAI Token"),eo=new S.Token(S.ChainId.GOERLI,"0x07865c6e87b9f70255377e024ace6630c1eaa37f",6,"USDC","USD//C"),es=new S.Token(S.ChainId.GOERLI,"0xe583769738b6dd4e7caf8451050d1948be717679",18,"USDT","Tether USD"),ed=new S.Token(S.ChainId.GOERLI,"0xa0a5ad2296b38bd3e3eb59aaeaf1589e8d9a29a9",8,"WBTC","Wrapped BTC"),eu=new S.Token(S.ChainId.GOERLI,"0x11fe4b6ae13d2a6055c8d9cf65c55bac32b5d844",18,"DAI","Dai Stablecoin");new S.Token(S.ChainId.GOERLI,"0x1f9840a85d5aF5bf1D1762F925BDADdC4201F984",18,"UNI","Uni token");let el=new S.Token(S.ChainId.OPTIMISM,"0x7F5c764cBc14f9669B88837ca1490cCa17c31607",6,"USDC","USD//C"),ec=new S.Token(S.ChainId.OPTIMISM,"0x94b008aA00579c1307B0EF2c499aD98a8ce58e58",6,"USDT","Tether USD"),ep=new S.Token(S.ChainId.OPTIMISM,"0x68f180fcCe6836688e9084f035309E29Bf0A2095",8,"WBTC","Wrapped BTC"),eh=new S.Token(S.ChainId.OPTIMISM,"0xDA10009cBd5D07dd0CeCc66161FC93D7c9000da1",18,"DAI","Dai Stablecoin"),eb=new S.Token(S.ChainId.OPTIMISM,"0x4200000000000000000000000000000000000042",18,"OP","Optimism"),em=new S.Token(S.ChainId.OPTIMISM_GOERLI,"0x7E07E15D2a87A24492740D16f5bdF58c16db0c4E",6,"USDC","USD//C"),ey=new S.Token(S.ChainId.OPTIMISM_GOERLI,"0x853eb4bA5D0Ba2B77a0A5329Fd2110d5CE149ECE",6,"USDT","Tether USD"),eT=new S.Token(S.ChainId.OPTIMISM_GOERLI,"0xe0a592353e81a94Db6E3226fD4A99F881751776a",8,"WBTC","Wrapped BTC"),eg=new S.Token(S.ChainId.OPTIMISM_GOERLI,"0xDA10009cBd5D07dd0CeCc66161FC93D7c9000da1",18,"DAI","Dai Stablecoin"),ev=new S.Token(S.ChainId.ARBITRUM_ONE,"0xFF970A61A04b1cA14834A43f5dE4533eBDDB5CC8",6,"USDC","USD//C"),eC=new S.Token(S.ChainId.ARBITRUM_ONE,"0xFd086bC7CD5C481DCC9C85ebE478A1C0b69FCbb9",6,"USDT","Tether USD"),eI=new S.Token(S.ChainId.ARBITRUM_ONE,"0x2f2a2543B76A4166549F7aaB2e75Bef0aefC5B0f",8,"WBTC","Wrapped BTC"),eE=new S.Token(S.ChainId.ARBITRUM_ONE,"0xDA10009cBd5D07dd0CeCc66161FC93D7c9000da1",18,"DAI","Dai Stablecoin"),eA=new S.Token(S.ChainId.ARBITRUM_ONE,"0x912CE59144191C1204E64559FE8253a0e49E6548",18,"ARB","Arbitrum");new S.Token(S.ChainId.ARBITRUM_GOERLI,"0x0000000000000000000000000000000000000000",18,"DAI","Dai Stablecoin");let ew=new S.Token(S.ChainId.ARBITRUM_GOERLI,"0x8FB1E3fC51F3b789dED7557E680551d93Ea9d892",6,"USDC","USD//C"),eS=new S.Token(S.ChainId.POLYGON,"0x0d500B1d8E8eF31E21C99d1Db9A6444d3ADf1270",18,"WMATIC","Wrapped MATIC"),eP=new S.Token(S.ChainId.POLYGON,"0x7ceb23fd6bc0add59e62ac25578270cff1b9f619",18,"WETH","Wrapped Ether"),eO=new S.Token(S.ChainId.POLYGON,"0x2791bca1f2de4661ed88a30c99a7a9449aa84174",6,"USDC","USD//C");new S.Token(S.ChainId.POLYGON,"0x8f3Cf7ad23Cd3CaDbD9735AFf958023239c6A063",18,"DAI","Dai Stablecoin");let ek=new S.Token(S.ChainId.POLYGON_MUMBAI,"0x9c3C9283D3e44854697Cd22D3Faa240Cfb032889",18,"WMATIC","Wrapped MATIC");new S.Token(S.ChainId.POLYGON_MUMBAI,"0xe11a86849d99f524cac3e7a0ec1241828e332c62",6,"USDC","USD//C");let eR=new S.Token(S.ChainId.POLYGON_MUMBAI,"0x001b3b4d0f3714ca98ba10f6042daebf0b1b7b6f",18,"DAI","Dai Stablecoin");new S.Token(S.ChainId.POLYGON_MUMBAI,"0xa6fa4fb5f76172d178d61b04b0ecd319c5d1c0aa",18,"WETH","Wrapped Ether");let eM=new S.Token(S.ChainId.BNB,"0x7130d2A12B9BCbFAe4f2634d864A1Ee1Ce3Ead9c",18,"BTCB","Binance BTC"),ex=new S.Token(S.ChainId.BNB,"0xe9e7CEA3DedcA5984780Bafc599bD69ADd087D56",18,"BUSD","BUSD"),eB=new S.Token(S.ChainId.BNB,"0x1AF3F329e8BE154074D8769D1FFa4eE058B1DBc3",18,"DAI","DAI"),eD=new S.Token(S.ChainId.BNB,"0x2170Ed0880ac9A755fd29B2688956BD959F933F8",18,"ETH","ETH"),eN=new S.Token(S.ChainId.BNB,"0x8AC76a51cc950d9822D68b83fE1Ad97B32Cd580d",18,"USDC","USDC"),eL=new S.Token(S.ChainId.BNB,"0x55d398326f99059fF775485246999027B3197955",18,"USDT","USDT"),eF=new S.Token(S.ChainId.CELO,"0x471EcE3750Da237f93B8E339c536989b8978a438",18,"CELO","Celo native asset"),eU=new S.Token(S.ChainId.CELO,"0xE4fE50cdD716522A56204352f00AA110F731932d",18,"DAI","Dai Stablecoin"),eG=new S.Token(S.ChainId.CELO,"0x765DE816845861e75A25fCA122bb6898B8B1282a",18,"CUSD","Celo Dollar Stablecoin"),eV=new S.Token(S.ChainId.CELO,"0xD8763CBa276a3738E6DE85b4b3bF5FDed6D6cA73",18,"CEUR","Celo Euro Stablecoin"),eq=new S.Token(S.ChainId.CELO_ALFAJORES,"0xF194afDf50B03e69Bd7D057c1Aa9e10c9954E4C9",18,"CELO","Celo native asset"),eH=new S.Token(S.ChainId.CELO_ALFAJORES,"0x7d91E51C8F218f7140188A155f5C75388630B6a8",18,"DAI","Dai Stablecoin"),eW=new S.Token(S.ChainId.CELO_ALFAJORES,"0x874069Fa1Eb16D44d622F2e0Ca25eeA172369bC1",18,"CUSD","Celo Dollar Stablecoin"),ej=new S.Token(S.ChainId.CELO_ALFAJORES,"0x10c892A6EC43a53E45D0B916B4b7D383B1b78C0F",18,"CEUR","Celo Euro Stablecoin"),e_=new S.Token(S.ChainId.AVALANCHE,"0xd586E7F844cEa2F87f50152665BCbc2C279D8d70",18,"DAI.e","DAI.e Token"),eQ=new S.Token(S.ChainId.AVALANCHE,"0xB97EF9Ef8734C71904D8002F8b6Bc66Dd9c48a6E",6,"USDC","USDC Token"),eY=new S.Token(S.ChainId.BASE,"0xd9aAEc86B65D86f6A7B5B1b0c42FFA531710b6CA",6,"USDbC","USD Base Coin");new S.Token(S.ChainId.BASE_GOERLI,"0x853154e2A5604E5C74a2546E2871Ad44932eB92C",6,"USDbC","USD Base Coin");let eX=new S.Token(S.ChainId.GNOSIS,"0xddafbb505ad214d7b80b1f830fccc89b60fb7a83",6,"USDC","USDC from Ethereum on Gnosis"),eK=new S.Token(S.ChainId.GNOSIS,"0xe91d153e0b41518a2ce8dd3d7944fa863463a97d",18,"WXDAI","Wrapped XDAI on Gnosis"),ez=new S.Token(S.ChainId.GNOSIS,"0x8e5bbbb09ed1ebde8674cda39a0c169401db4252",8,"WBTC","Wrapped BTC from Ethereum on Gnosis"),eJ=new S.Token(S.ChainId.MOONBEAM,"0x818ec0A7Fe18Ff94269904fCED6AE3DaE6d6dC0b",6,"USDC","USD Coin bridged using Multichain"),eZ=new S.Token(S.ChainId.MOONBEAM,"0xAcc15dC74880C9944775448304B263D191c6077F",18,"WGLMR","Wrapped GLMR"),e$=new S.Token(S.ChainId.MOONBEAM,"0x818ec0A7Fe18Ff94269904fCED6AE3DaE6d6dC0b",6,"DAI","Dai on moonbeam bridged using Multichain"),e0=new S.Token(S.ChainId.MOONBEAM,"0x922D641a426DcFFaeF11680e5358F34d97d112E1",8,"WBTC","Wrapped BTC bridged using Multichain");let TokenProvider=class TokenProvider{constructor(e,t){this.chainId=e,this.multicall2Provider=t}async getTokenSymbol(e,t){let f;let n=!1;try{f=await this.multicall2Provider.callSameFunctionOnMultipleContracts({addresses:e,contractInterface:IERC20Metadata__factory.createInterface(),functionName:"symbol",providerConfig:t})}catch(i){P.error({addresses:e},`TokenProvider.getTokenSymbol[string] failed with error ${i}. Trying with bytes32.`);let a=new X.vU([{inputs:[],name:"symbol",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"}]);try{f=await this.multicall2Provider.callSameFunctionOnMultipleContracts({addresses:e,contractInterface:a,functionName:"symbol",providerConfig:t}),n=!0}catch(t){throw P.fatal({addresses:e},`TokenProvider.getTokenSymbol[bytes32] failed with error ${t}.`),Error("[TokenProvider.getTokenSymbol] Impossible to fetch token symbol.")}}return{result:f,isBytes32:n}}async getTokenDecimals(e,t){return this.multicall2Provider.callSameFunctionOnMultipleContracts({addresses:e,contractInterface:IERC20Metadata__factory.createInterface(),functionName:"decimals",providerConfig:t})}async getTokens(e,t){let f={},n={},a=x()(e).map(e=>e.toLowerCase()).uniq().value();if(a.length>0){let[e,i]=await Promise.all([this.getTokenSymbol(a,t),this.getTokenDecimals(a,t)]),r=e.isBytes32,{results:o}=e.result,{results:s}=i;for(let e=0;e<a.length;e++){let t=a[e],i=o[e],d=s[e];if(!(null==i?void 0:i.success)||!(null==d?void 0:d.success)){P.info({symbolResult:i,decimalResult:d},`Dropping token with address ${t} as symbol or decimal are invalid`);continue}let u=r?(0,K.F)(i.result[0]):i.result[0],l=d.result[0];f[t.toLowerCase()]=new S.Token(this.chainId,t,l,u),n[u.toLowerCase()]=f[t.toLowerCase()]}P.info(`Got token symbol and decimals for ${Object.values(f).length} out of ${a.length} tokens on-chain ${t?`as of: ${null==t?void 0:t.blockNumber}`:""}`)}return{getTokenByAddress:e=>f[e.toLowerCase()],getTokenBySymbol:e=>n[e.toLowerCase()],getAllTokens:()=>Object.values(f)}}};let e1={[S.ChainId.MAINNET]:{WETH:U[S.ChainId.MAINNET],USDC:Z,USDT:$,WBTC:ee,DAI:et,RING:new S.Token(S.ChainId.MAINNET,"0x9469D013805bFfB7D3DEBe5E7839237e535ec483",18,"RING","RING")},[S.ChainId.SEPOLIA]:{USDC:ei},[S.ChainId.OPTIMISM]:{USDC:el,USDT:ec,WBTC:ep,DAI:eh},[S.ChainId.OPTIMISM_GOERLI]:{USDC:em,USDT:ey,WBTC:eT,DAI:eg},[S.ChainId.ARBITRUM_ONE]:{USDC:ev,USDT:eC,WBTC:eI,DAI:eE},[S.ChainId.ARBITRUM_GOERLI]:{USDC:ew},[S.ChainId.POLYGON]:{WMATIC:eS,USDC:eO},[S.ChainId.POLYGON_MUMBAI]:{WMATIC:ek,DAI:eR},[S.ChainId.CELO]:{CELO:eF,CUSD:eG,CEUR:eV,DAI:eU},[S.ChainId.CELO_ALFAJORES]:{CELO:eq,CUSD:eW,CEUR:eW,DAI:eH},[S.ChainId.GNOSIS]:{WXDAI:U[S.ChainId.GNOSIS],USDC_ETHEREUM_GNOSIS:eX},[S.ChainId.MOONBEAM]:{USDC:eJ,DAI:e$,WBTC:e0,WGLMR:U[S.ChainId.MOONBEAM]},[S.ChainId.BNB]:{USDC:eN,USDT:eL,BUSD:ex,ETH:eD,DAI:eB,BTC:eM,WBNB:U[S.ChainId.BNB]},[S.ChainId.AVALANCHE]:{USDC:eQ,DAI:e_,WAVAX:U[S.ChainId.AVALANCHE]},[S.ChainId.BASE]:{USDC:eY,WETH:U[S.ChainId.BASE]}};let CachingTokenProviderWithFallback=class CachingTokenProviderWithFallback{constructor(e,t,f,n){this.chainId=e,this.tokenCache=t,this.primaryTokenProvider=f,this.fallbackTokenProvider=n,this.CACHE_KEY=(e,t)=>`token-${e}-${t}`}async getTokens(e){let t=e1[this.chainId];if(t)for(let e of Object.values(t))await this.tokenCache.set(this.CACHE_KEY(this.chainId,e.address.toLowerCase()),e);let f={},n={},a=x()(e).map(e=>e.toLowerCase()).uniq().value(),i=[],r=[];for(let e of a)await this.tokenCache.has(this.CACHE_KEY(this.chainId,e))?(f[e.toLowerCase()]=await this.tokenCache.get(this.CACHE_KEY(this.chainId,e)),n[f[e].symbol]=await this.tokenCache.get(this.CACHE_KEY(this.chainId,e))):i.push(e);if(P.info({addressesToFindInPrimary:i},`Found ${a.length-i.length} out of ${a.length} tokens in local cache. ${i.length>0?`Checking primary token provider for ${i.length} tokens`:""}
      `),i.length>0){let e=await this.primaryTokenProvider.getTokens(i);for(let t of i){let a=e.getTokenByAddress(t);a?(f[t.toLowerCase()]=a,n[f[t].symbol]=a,await this.tokenCache.set(this.CACHE_KEY(this.chainId,t.toLowerCase()),f[t])):r.push(t)}P.info({addressesToFindInSecondary:r},`Found ${i.length-r.length} tokens in primary. ${this.fallbackTokenProvider?`Checking secondary token provider for ${r.length} tokens`:"No fallback token provider specified. About to return."}`)}if(this.fallbackTokenProvider&&r.length>0){let e=await this.fallbackTokenProvider.getTokens(r);for(let t of r){let a=e.getTokenByAddress(t);a&&(f[t.toLowerCase()]=a,n[f[t].symbol]=a,await this.tokenCache.set(this.CACHE_KEY(this.chainId,t.toLowerCase()),f[t]))}}return{getTokenByAddress:e=>f[e.toLowerCase()],getTokenBySymbol:e=>n[e.toLowerCase()],getAllTokens:()=>Object.values(f)}}};(r=m||(m={})).Livemode="livemode",r.Darkmode="darkmode",r.Tapcompare="tapcompare";let CachedRoute=class CachedRoute{constructor({route:e,percent:t}){this.hashCode=e=>[...e].reduce((e,t)=>Math.imul(31,e)+t.charCodeAt(0)|0,0),this.route=e,this.percent=t}get protocol(){return this.route.protocol}get tokenIn(){return this.route.input}get tokenOut(){return this.route.output}get routePath(){if(this.protocol==Q.Protocol.V3){let e=this.route;return e.pools.map(e=>`[V3]${e.token0.address}/${e.token1.address}/${e.fee}`).join("->")}if(this.protocol==Q.Protocol.V2){let e=this.route;return e.pairs.map(e=>`[V2]${e.token0.address}/${e.token1.address}`).join("->")}{let e=this.route;return e.pools.map(e=>e instanceof B.Pool?`[V3]${e.token0.address}/${e.token1.address}/${e.fee}`:`[V2]${e.token0.address}/${e.token1.address}`).join("->")}}get routeId(){return this.hashCode(this.routePath)}};let CachedRoutes=class CachedRoutes{constructor({routes:e,chainId:t,tokenIn:f,tokenOut:n,protocolsCovered:a,blockNumber:i,tradeType:r,originalAmount:o,blocksToLive:s=0}){this.routes=e,this.chainId=t,this.tokenIn=f,this.tokenOut=n,this.protocolsCovered=a,this.blockNumber=i,this.tradeType=r,this.originalAmount=o,this.blocksToLive=s}static fromRoutesWithValidQuotes(e,t,f,n,a,i,r,o){if(0==e.length)return;let s=x().map(e,e=>new CachedRoute({route:e.route,percent:e.percent}));return new CachedRoutes({routes:s,chainId:t,tokenIn:f,tokenOut:n,protocolsCovered:a,blockNumber:i,tradeType:r,originalAmount:o})}notExpired(e,t=!1){let f=t?this.blocksToLive:0,n=e-this.blockNumber;return n<=f}};var e5=f(92598);let EIP1559GasPriceProvider=class EIP1559GasPriceProvider extends IGasPriceProvider{constructor(e,t=50,f=4){super(),this.provider=e,this.priorityFeePercentile=t,this.blocksToConsider=f}async getGasPrice(e,t){let f=await this.provider.send("eth_feeHistory",[e5.O$.from(this.blocksToConsider).toHexString().replace("0x0","0x"),t?e5.O$.from(t).toHexString().replace("0x0","0x"):"latest",[this.priorityFeePercentile]]),n={baseFeePerGas:x().map(f.baseFeePerGas,e=>e5.O$.from(e)),gasUsedRatio:f.gasUsedRatio,oldestBlock:e5.O$.from(f.oldestBlock),reward:x().map(f.reward,e=>e5.O$.from(e[0]))},a=n.baseFeePerGas[n.baseFeePerGas.length-1],i=x().reduce(n.reward,(e,t)=>e.add(t),e5.O$.from(0)).div(n.reward.length);P.info({feeHistory:n,feeHistoryReadable:{baseFeePerGas:x().map(n.baseFeePerGas,e=>e.toString()),oldestBlock:n.oldestBlock.toString(),reward:x().map(n.reward,e=>e.toString())},nextBlockBaseFeePerGas:a.toString(),averagePriorityFeePerGas:i.toString()},"Got fee history from provider and computed gas estimate");let r=a.add(i),o=n.oldestBlock.add(this.blocksToConsider);return P.info(`Estimated gas price in wei: ${r} as of block ${o.toString()}`),{gasPriceWei:r}}};var e6=f(46795),e8=f(59691),e2=f(38148),e3=f.n(e2),e4=f(31199),e9=f.n(e4);let PortionProvider=class PortionProvider{getPortionAmount(e,t,f){if((null==f?void 0:f.type)===g.UNIVERSAL_ROUTER)switch(t){case S.TradeType.EXACT_INPUT:if(f.fee&&f.fee.fee.greaterThan(Q.ZERO))return e.multiply(f.fee.fee);return;case S.TradeType.EXACT_OUTPUT:if(f.flatFee&&f.flatFee.amount>e5.O$.from(0))return amounts_CurrencyAmount.fromRawAmount(e.currency,f.flatFee.amount.toString());return;default:throw Error(`Unknown trade type ${t}`)}}getPortionQuoteAmount(e,t,f,n){if(!n||e!==S.TradeType.EXACT_OUTPUT)return;let a=new S.Fraction(n.quotient,f.quotient);return amounts_CurrencyAmount.fromRawAmount(t.currency,a.multiply(t).quotient)}getRouteWithQuotePortionAdjusted(e,t,f){return e!==S.TradeType.EXACT_INPUT||(null==f?void 0:f.type)!==g.UNIVERSAL_ROUTER?t:t.map(t=>{let n=this.getPortionAmount(t.quote,e,f);return n&&(t.quote=t.quote.subtract(n)),t})}getQuote(e,t,f){switch(e){case S.TradeType.EXACT_INPUT:return t;case S.TradeType.EXACT_OUTPUT:return f?t.subtract(f):t;default:throw Error(`Unknown trade type ${e}`)}}getQuoteGasAdjusted(e,t,f){switch(e){case S.TradeType.EXACT_INPUT:return t;case S.TradeType.EXACT_OUTPUT:return f?t.subtract(f):t;default:throw Error(`Unknown trade type ${e}`)}}getQuoteGasAndPortionAdjusted(e,t,f){if(f)switch(e){case S.TradeType.EXACT_INPUT:return t.subtract(f);case S.TradeType.EXACT_OUTPUT:return t;default:throw Error(`Unknown trade type ${e}`)}}};let e7=[{inputs:[{internalType:"address",name:"_factoryV2",type:"address"}],stateMutability:"nonpayable",type:"constructor"},{inputs:[],name:"PairLookupFailed",type:"error"},{inputs:[],name:"SameToken",type:"error"},{inputs:[{internalType:"address[]",name:"tokens",type:"address[]"},{internalType:"address",name:"baseToken",type:"address"},{internalType:"uint256",name:"amountToBorrow",type:"uint256"}],name:"batchValidate",outputs:[{components:[{internalType:"uint256",name:"buyFeeBps",type:"uint256"},{internalType:"uint256",name:"sellFeeBps",type:"uint256"}],internalType:"struct TokenFees[]",name:"fotResults",type:"tuple[]"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"",type:"address"},{internalType:"uint256",name:"amount0",type:"uint256"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"bytes",name:"data",type:"bytes"}],name:"uniswapV2Call",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"token",type:"address"},{internalType:"address",name:"baseToken",type:"address"},{internalType:"uint256",name:"amountToBorrow",type:"uint256"}],name:"validate",outputs:[{components:[{internalType:"uint256",name:"buyFeeBps",type:"uint256"},{internalType:"uint256",name:"sellFeeBps",type:"uint256"}],internalType:"struct TokenFees",name:"fotResult",type:"tuple"}],stateMutability:"nonpayable",type:"function"}];let TokenFeeDetector__factory=class TokenFeeDetector__factory{static createInterface(){return new X.vU(e7)}static connect(e,t){return new z.Contract(e,e7,t)}};TokenFeeDetector__factory.abi=e7,e5.O$.from(0),e5.O$.from(0);let FEE_DETECTOR_ADDRESS=e=>(S.ChainId.MAINNET,"0x19C97dc2a25845C7f9d1d519c8C2d4809c58b43f");let OnChainTokenFeeFetcher=class OnChainTokenFeeFetcher{constructor(e,t,f=FEE_DETECTOR_ADDRESS(e),n=1e6,a="100000"){var i;this.chainId=e,this.tokenFeeAddress=f,this.gasLimitPerCall=n,this.amountToFlashBorrow=a,this.BASE_TOKEN=null===(i=U[this.chainId])||void 0===i?void 0:i.address,this.contract=TokenFeeDetector__factory.connect(this.tokenFeeAddress,t)}async fetchFees(e,t){let f={},n=e.filter(e=>e.toLowerCase()!==this.BASE_TOKEN.toLowerCase()),a=n.map(e=>[e,this.BASE_TOKEN,this.amountToFlashBorrow]),i=await Promise.all(a.map(async([e,f,n])=>{try{let a=await this.contract.callStatic.validate(e,f,n,{gasLimit:this.gasLimitPerCall,blockTag:null==t?void 0:t.blockNumber});return R.putMetric("TokenFeeFetcherFetchFeesSuccess",1,p.Count),{address:e,...a}}catch(t){return P.error({err:t},`Error calling validate on-chain for token ${e}`),R.putMetric("TokenFeeFetcherFetchFeesFailure",1,p.Count),{address:e,buyFeeBps:void 0,sellFeeBps:void 0}}}));return i.forEach(({address:e,buyFeeBps:t,sellFeeBps:n})=>{(t||n)&&(f[e]={buyFeeBps:t,sellFeeBps:n})}),f}};let te=[{inputs:[{internalType:"address[]",name:"tokens",type:"address[]"},{internalType:"address[]",name:"baseTokens",type:"address[]"},{internalType:"uint256",name:"amountToBorrow",type:"uint256"}],name:"batchValidate",outputs:[{internalType:"enum ITokenValidator.Status[]",name:"",type:"uint8[]"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"token",type:"address"},{internalType:"address[]",name:"baseTokens",type:"address[]"},{internalType:"uint256",name:"amountToBorrow",type:"uint256"}],name:"validate",outputs:[{internalType:"enum ITokenValidator.Status",name:"",type:"uint8"}],stateMutability:"nonpayable",type:"function"}];let ITokenValidator__factory=class ITokenValidator__factory{static createInterface(){return new X.vU(te)}static connect(e,t){return new z.Contract(e,te,t)}};ITokenValidator__factory.abi=te;let tt=new Set(["0x777e2ae845272a2f540ebf6a3d03734a5a8f618e"]);(o=y||(y={}))[o.UNKN=0]="UNKN",o[o.FOT=1]="FOT",o[o.STF=2]="STF";let TokenValidatorProvider=class TokenValidatorProvider{constructor(e,t,f,n="0xb5ee1690b7dcc7859771148d0889be838fe108e0",a=1e6,i="1000",r=tt){this.chainId=e,this.multicall2Provider=t,this.tokenValidationCache=f,this.tokenValidatorAddress=n,this.gasLimitPerCall=a,this.amountToFlashBorrow=i,this.allowList=r,this.CACHE_KEY=(e,t)=>`token-${e}-${t}`,this.BASES=[U[this.chainId].address]}async validateTokens(e,t){let f=x().keyBy(e,"address"),n=x()(e).map(e=>e.address).uniq().value(),a=[],i={};for(let e of n)await this.tokenValidationCache.has(this.CACHE_KEY(this.chainId,e))?(i[e.toLowerCase()]=await this.tokenValidationCache.get(this.CACHE_KEY(this.chainId,e)),R.putMetric(`TokenValidatorProviderValidateCacheHitResult${i[e.toLowerCase()]}`,1,p.Count)):a.push(e);P.info(`Got token validation results for ${n.length-a.length} tokens from cache. Getting ${a.length} on-chain.`);let r=x()(a).map(e=>[e,this.BASES,this.amountToFlashBorrow]).value(),o=await this.multicall2Provider.callSameFunctionOnContractWithMultipleParams({address:this.tokenValidatorAddress,contractInterface:ITokenValidator__factory.createInterface(),functionName:"validate",functionParams:r,providerConfig:t,additionalConfig:{gasLimitPerCallOverride:this.gasLimitPerCall}});for(let e=0;e<o.results.length;e++){let t=o.results[e],n=a[e],r=f[n];if(this.allowList.has(r.address.toLowerCase())){i[r.address.toLowerCase()]=y.UNKN,await this.tokenValidationCache.set(this.CACHE_KEY(this.chainId,r.address.toLowerCase()),i[r.address.toLowerCase()]);continue}if(!t.success){R.putMetric("TokenValidatorProviderValidateFailed",1,p.Count),P.error({result:t},`Failed to validate token ${r.symbol}`);continue}R.putMetric("TokenValidatorProviderValidateSuccess",1,p.Count);let s=t.result[0];i[r.address.toLowerCase()]=s,await this.tokenValidationCache.set(this.CACHE_KEY(this.chainId,r.address.toLowerCase()),i[r.address.toLowerCase()]),R.putMetric(`TokenValidatorProviderValidateCacheMissResult${s}`,1,p.Count)}return{getValidationByToken:e=>i[e.address.toLowerCase()]}}};let tf=[{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"spender",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Approval",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"sender",type:"address"},{indexed:!1,internalType:"uint256",name:"amount0",type:"uint256"},{indexed:!1,internalType:"uint256",name:"amount1",type:"uint256"},{indexed:!0,internalType:"address",name:"to",type:"address"}],name:"Burn",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"sender",type:"address"},{indexed:!1,internalType:"uint256",name:"amount0",type:"uint256"},{indexed:!1,internalType:"uint256",name:"amount1",type:"uint256"}],name:"Mint",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"sender",type:"address"},{indexed:!1,internalType:"uint256",name:"amount0In",type:"uint256"},{indexed:!1,internalType:"uint256",name:"amount1In",type:"uint256"},{indexed:!1,internalType:"uint256",name:"amount0Out",type:"uint256"},{indexed:!1,internalType:"uint256",name:"amount1Out",type:"uint256"},{indexed:!0,internalType:"address",name:"to",type:"address"}],name:"Swap",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint112",name:"reserve0",type:"uint112"},{indexed:!1,internalType:"uint112",name:"reserve1",type:"uint112"}],name:"Sync",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Transfer",type:"event"},{inputs:[],name:"DOMAIN_SEPARATOR",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"MINIMUM_LIQUIDITY",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"pure",type:"function"},{inputs:[],name:"PERMIT_TYPEHASH",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"pure",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"spender",type:"address"}],name:"allowance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"value",type:"uint256"}],name:"approve",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"to",type:"address"}],name:"burn",outputs:[{internalType:"uint256",name:"amount0",type:"uint256"},{internalType:"uint256",name:"amount1",type:"uint256"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"decimals",outputs:[{internalType:"uint8",name:"",type:"uint8"}],stateMutability:"pure",type:"function"},{inputs:[],name:"factory",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getReserves",outputs:[{internalType:"uint112",name:"reserve0",type:"uint112"},{internalType:"uint112",name:"reserve1",type:"uint112"},{internalType:"uint32",name:"blockTimestampLast",type:"uint32"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"",type:"address"},{internalType:"address",name:"",type:"address"}],name:"initialize",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"kLast",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"to",type:"address"}],name:"mint",outputs:[{internalType:"uint256",name:"liquidity",type:"uint256"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"name",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"pure",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"}],name:"nonces",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"uint256",name:"deadline",type:"uint256"},{internalType:"uint8",name:"v",type:"uint8"},{internalType:"bytes32",name:"r",type:"bytes32"},{internalType:"bytes32",name:"s",type:"bytes32"}],name:"permit",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"price0CumulativeLast",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"price1CumulativeLast",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"to",type:"address"}],name:"skim",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"amount0Out",type:"uint256"},{internalType:"uint256",name:"amount1Out",type:"uint256"},{internalType:"address",name:"to",type:"address"},{internalType:"bytes",name:"data",type:"bytes"}],name:"swap",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"symbol",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"pure",type:"function"},{inputs:[],name:"sync",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"token0",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"token1",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"totalSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"value",type:"uint256"}],name:"transfer",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"value",type:"uint256"}],name:"transferFrom",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"}];let IUniswapV2Pair__factory=class IUniswapV2Pair__factory{static createInterface(){return new X.vU(tf)}static connect(e,t){return new z.Contract(e,tf,t)}};IUniswapV2Pair__factory.abi=tf;let V2PoolProvider=class V2PoolProvider{constructor(e,t,f,n={retries:2,minTimeout:50,maxTimeout:500}){this.chainId=e,this.multicall2Provider=t,this.tokenPropertiesProvider=f,this.retryOptions=n,this.POOL_ADDRESS_CACHE={}}async getPools(e,t){var f,n,a,i,r,o,s,d,u,l;let h=new Set,b=[],m=[];for(let t of e){let[e,f]=t,{poolAddress:n,token0:a,token1:i}=this.getPoolAddress(e,f);h.has(n)||(h.add(n),b.push([a,i]),m.push(n))}P.debug(`getPools called with ${e.length} token pairs. Deduped down to ${h.size}`),R.putMetric("V2_RPC_POOL_RPC_CALL",1,p.None),R.putMetric("V2GetReservesBatchSize",m.length,p.Count),R.putMetric(`V2GetReservesBatchSize_${ID_TO_NETWORK_NAME(this.chainId)}`,m.length,p.Count);let[T,g]=await Promise.all([this.getPoolsData(m,"getReserves",t),this.tokenPropertiesProvider.getTokensProperties(this.flatten(e),t)]);P.info(`Got reserves for ${h.size} pools ${(null==t?void 0:t.blockNumber)?`as of block: ${await (null==t?void 0:t.blockNumber)}.`:""}`);let v={},C=[];for(let e=0;e<m.length;e++){let t=T[e];if(!(null==t?void 0:t.success)){let[t,f]=b[e];C.push([t,f]);continue}let[p,h]=b[e];(null===(f=g[p.address.toLowerCase()])||void 0===f?void 0:f.tokenValidationResult)===y.FOT&&(p=new S.Token(p.chainId,p.address,p.decimals,p.symbol,p.name,!0,null===(a=null===(n=g[p.address.toLowerCase()])||void 0===n?void 0:n.tokenFeeResult)||void 0===a?void 0:a.buyFeeBps,null===(r=null===(i=g[p.address.toLowerCase()])||void 0===i?void 0:i.tokenFeeResult)||void 0===r?void 0:r.sellFeeBps)),(null===(o=g[h.address.toLowerCase()])||void 0===o?void 0:o.tokenValidationResult)===y.FOT&&(h=new S.Token(h.chainId,h.address,h.decimals,h.symbol,h.name,!0,null===(d=null===(s=g[h.address.toLowerCase()])||void 0===s?void 0:s.tokenFeeResult)||void 0===d?void 0:d.buyFeeBps,null===(l=null===(u=g[h.address.toLowerCase()])||void 0===u?void 0:u.tokenFeeResult)||void 0===l?void 0:l.sellFeeBps));let{reserve0:I,reserve1:E}=t.result,A=new Y.sO(amounts_CurrencyAmount.fromRawAmount(p,I.toString()),amounts_CurrencyAmount.fromRawAmount(h,E.toString())),w=m[e];v[w]=A}C.length>0&&P.info({invalidPools:x().map(C,([e,t])=>`${e.symbol}/${t.symbol}`)},`${C.length} pools invalid after checking their slot0 and liquidity results. Dropping.`);let I=x().map(Object.values(v),poolToString);return P.debug({poolStrs:I},`Found ${I.length} valid pools`),{getPool:(e,t)=>{let{poolAddress:f}=this.getPoolAddress(e,t);return v[f]},getPoolByAddress:e=>v[e],getAllPools:()=>Object.values(v)}}getPoolAddress(e,t){let[f,n]=e.sortsBefore(t)?[e,t]:[t,e],a=`${this.chainId}/${f.address}/${n.address}`,i=this.POOL_ADDRESS_CACHE[a];if(i)return{poolAddress:i,token0:f,token1:n};let r=Y.sO.getAddress(f,n);return this.POOL_ADDRESS_CACHE[a]=r,{poolAddress:r,token0:f,token1:n}}async getPoolsData(e,t,f){let{results:n,blockNumber:a}=await e3()(async()=>this.multicall2Provider.callSameFunctionOnMultipleContracts({addresses:e,contractInterface:IUniswapV2Pair__factory.createInterface(),functionName:t,providerConfig:f}),this.retryOptions);return P.debug(`Pool data fetched as of block ${a}`),n}flatten(e){let t=[];for(let[f,n]of e)t.push(f),t.push(n);return t}};let tn=[{inputs:[],name:"getPricesInWei",outputs:[{internalType:"uint256",name:"",type:"uint256"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"}];let GasDataArbitrum__factory=class GasDataArbitrum__factory{static createInterface(){return new X.vU(tn)}static connect(e,t){return new z.Contract(e,tn,t)}};GasDataArbitrum__factory.abi=tn;let ta=[{inputs:[{internalType:"address",name:"_owner",type:"address"}],stateMutability:"nonpayable",type:"constructor"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"",type:"uint256"}],name:"DecimalsUpdated",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"",type:"uint256"}],name:"GasPriceUpdated",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"",type:"uint256"}],name:"L1BaseFeeUpdated",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"",type:"uint256"}],name:"OverheadUpdated",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"",type:"uint256"}],name:"ScalarUpdated",type:"event"},{inputs:[],name:"decimals",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"gasPrice",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes",name:"_data",type:"bytes"}],name:"getL1Fee",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes",name:"_data",type:"bytes"}],name:"getL1GasUsed",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"l1BaseFee",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"overhead",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"renounceOwnership",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"scalar",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"_decimals",type:"uint256"}],name:"setDecimals",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"_gasPrice",type:"uint256"}],name:"setGasPrice",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"_baseFee",type:"uint256"}],name:"setL1BaseFee",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"_overhead",type:"uint256"}],name:"setOverhead",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"_scalar",type:"uint256"}],name:"setScalar",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],stateMutability:"nonpayable",type:"function"}];let GasPriceOracle__factory=class GasPriceOracle__factory{static createInterface(){return new X.vU(ta)}static connect(e,t){return new z.Contract(e,ta,t)}};GasPriceOracle__factory.abi=ta;let OptimismGasDataProvider=class OptimismGasDataProvider{constructor(e,t,f){if(this.chainId=e,this.multicall2Provider=t,e!==S.ChainId.OPTIMISM&&e!==S.ChainId.BASE)throw Error("This data provider is used only on optimism networks.");this.gasOracleAddress=null!=f?f:"0x420000000000000000000000000000000000000F"}async getGasData(e){var t,f,n,a;let i=await this.multicall2Provider.callMultipleFunctionsOnSameContract({address:this.gasOracleAddress,contractInterface:GasPriceOracle__factory.createInterface(),functionNames:["l1BaseFee","scalar","decimals","overhead"],providerConfig:e});if(!(null===(t=i.results[0])||void 0===t?void 0:t.success)||!(null===(f=i.results[1])||void 0===f?void 0:f.success)||!(null===(n=i.results[2])||void 0===n?void 0:n.success)||!(null===(a=i.results[3])||void 0===a?void 0:a.success))throw P.info({results:i.results},"Failed to get gas constants data from the optimism gas oracle"),Error("Failed to get gas constants data from the optimism gas oracle");let{result:r}=i.results[0],{result:o}=i.results[1],{result:s}=i.results[2],{result:d}=i.results[3];return{l1BaseFee:r[0],scalar:o[0],decimals:s[0],overhead:d[0]}}};let ArbitrumGasDataProvider=class ArbitrumGasDataProvider{constructor(e,t,f){this.chainId=e,this.provider=t,this.gasFeesAddress=f||"0x000000000000000000000000000000000000006C"}async getGasData(e){let t=GasDataArbitrum__factory.connect(this.gasFeesAddress,this.provider),f=await t.getPricesInWei({blockTag:null==e?void 0:e.blockNumber}),n=f[1];return{perL2TxFee:f[0],perL1CalldataFee:n.div(16),perArbGasTotal:f[5]}}};let ti=[{inputs:[],name:"feeGrowthGlobal0X128",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"feeGrowthGlobal1X128",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"liquidity",outputs:[{internalType:"uint128",name:"",type:"uint128"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"index",type:"uint256"}],name:"observations",outputs:[{internalType:"uint32",name:"blockTimestamp",type:"uint32"},{internalType:"int56",name:"tickCumulative",type:"int56"},{internalType:"uint160",name:"secondsPerLiquidityCumulativeX128",type:"uint160"},{internalType:"bool",name:"initialized",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"key",type:"bytes32"}],name:"positions",outputs:[{internalType:"uint128",name:"_liquidity",type:"uint128"},{internalType:"uint256",name:"feeGrowthInside0LastX128",type:"uint256"},{internalType:"uint256",name:"feeGrowthInside1LastX128",type:"uint256"},{internalType:"uint128",name:"tokensOwed0",type:"uint128"},{internalType:"uint128",name:"tokensOwed1",type:"uint128"}],stateMutability:"view",type:"function"},{inputs:[],name:"protocolFees",outputs:[{internalType:"uint128",name:"token0",type:"uint128"},{internalType:"uint128",name:"token1",type:"uint128"}],stateMutability:"view",type:"function"},{inputs:[],name:"slot0",outputs:[{internalType:"uint160",name:"sqrtPriceX96",type:"uint160"},{internalType:"int24",name:"tick",type:"int24"},{internalType:"uint16",name:"observationIndex",type:"uint16"},{internalType:"uint16",name:"observationCardinality",type:"uint16"},{internalType:"uint16",name:"observationCardinalityNext",type:"uint16"},{internalType:"uint8",name:"feeProtocol",type:"uint8"},{internalType:"bool",name:"unlocked",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"int16",name:"wordPosition",type:"int16"}],name:"tickBitmap",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"int24",name:"tick",type:"int24"}],name:"ticks",outputs:[{internalType:"uint128",name:"liquidityGross",type:"uint128"},{internalType:"int128",name:"liquidityNet",type:"int128"},{internalType:"uint256",name:"feeGrowthOutside0X128",type:"uint256"},{internalType:"uint256",name:"feeGrowthOutside1X128",type:"uint256"},{internalType:"int56",name:"tickCumulativeOutside",type:"int56"},{internalType:"uint160",name:"secondsPerLiquidityOutsideX128",type:"uint160"},{internalType:"uint32",name:"secondsOutside",type:"uint32"},{internalType:"bool",name:"initialized",type:"bool"}],stateMutability:"view",type:"function"}];let IUniswapV3PoolState__factory=class IUniswapV3PoolState__factory{static createInterface(){return new X.vU(ti)}static connect(e,t){return new z.Contract(e,ti,t)}};IUniswapV3PoolState__factory.abi=ti;let V3PoolProvider=class V3PoolProvider{constructor(e,t,f={retries:2,minTimeout:50,maxTimeout:500}){this.chainId=e,this.multicall2Provider=t,this.retryOptions=f,this.POOL_ADDRESS_CACHE={}}async getPools(e,t){let f=new Set,n=[],a=[];for(let t of e){let[e,i,r]=t,{poolAddress:o,token0:s,token1:d}=this.getPoolAddress(e,i,r);f.has(o)||(f.add(o),n.push([s,d,r]),a.push(o))}P.debug(`getPools called with ${e.length} token pairs. Deduped down to ${f.size}`);let[i,r]=await Promise.all([this.getPoolsData(a,"slot0",t),this.getPoolsData(a,"liquidity",t)]);P.info(`Got liquidity and slot0s for ${f.size} pools ${(null==t?void 0:t.blockNumber)?`as of block: ${null==t?void 0:t.blockNumber}.`:""}`);let o={},s=[];for(let e=0;e<a.length;e++){let t=i[e],f=r[e];if(!(null==t?void 0:t.success)||!(null==f?void 0:f.success)||t.result.sqrtPriceX96.eq(0)){let[t,f,a]=n[e];s.push([t,f,a]);continue}let[d,u,l]=n[e],p=t.result,h=f.result[0],b=new B.Pool(d,u,l,p.sqrtPriceX96.toString(),h.toString(),p.tick),m=a[e];o[m]=b}s.length>0&&P.info({invalidPools:x().map(s,([e,t,f])=>`${e.symbol}/${t.symbol}/${f/1e4}%`)},`${s.length} pools invalid after checking their slot0 and liquidity results. Dropping.`);let d=x().map(Object.values(o),poolToString);return P.debug({poolStrs:d},`Found ${d.length} valid pools`),{getPool:(e,t,f)=>{let{poolAddress:n}=this.getPoolAddress(e,t,f);return o[n]},getPoolByAddress:e=>o[e],getAllPools:()=>Object.values(o)}}getPoolAddress(e,t,f){let[n,a]=e.sortsBefore(t)?[e,t]:[t,e],i=`${this.chainId}/${n.address}/${a.address}/${f}`,r=this.POOL_ADDRESS_CACHE[i];if(r)return{poolAddress:r,token0:n,token1:a};let o=(0,B.computePoolAddress)({factoryAddress:V[this.chainId],tokenA:n,tokenB:a,fee:f});return this.POOL_ADDRESS_CACHE[i]=o,{poolAddress:o,token0:n,token1:a}}async getPoolsData(e,t,f){let{results:n,blockNumber:a}=await e3()(async()=>this.multicall2Provider.callSameFunctionOnMultipleContracts({addresses:e,contractInterface:IUniswapV3PoolState__factory.createInterface(),functionName:t,providerConfig:f}),this.retryOptions);return P.debug(`Pool data fetched as of block ${a}`),n}};let tr=[{constant:!0,inputs:[],name:"name",outputs:[{name:"",type:"string"}],payable:!1,stateMutability:"view",type:"function"},{constant:!1,inputs:[{name:"_spender",type:"address"},{name:"_value",type:"uint256"}],name:"approve",outputs:[{name:"",type:"bool"}],payable:!1,stateMutability:"nonpayable",type:"function"},{constant:!0,inputs:[],name:"totalSupply",outputs:[{name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},{constant:!1,inputs:[{name:"_from",type:"address"},{name:"_to",type:"address"},{name:"_value",type:"uint256"}],name:"transferFrom",outputs:[{name:"",type:"bool"}],payable:!1,stateMutability:"nonpayable",type:"function"},{constant:!0,inputs:[],name:"decimals",outputs:[{name:"",type:"uint8"}],payable:!1,stateMutability:"view",type:"function"},{constant:!0,inputs:[{name:"_owner",type:"address"}],name:"balanceOf",outputs:[{name:"balance",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},{constant:!0,inputs:[],name:"symbol",outputs:[{name:"",type:"string"}],payable:!1,stateMutability:"view",type:"function"},{constant:!1,inputs:[{name:"_to",type:"address"},{name:"_value",type:"uint256"}],name:"transfer",outputs:[{name:"",type:"bool"}],payable:!1,stateMutability:"nonpayable",type:"function"},{constant:!0,inputs:[{name:"_owner",type:"address"},{name:"_spender",type:"address"}],name:"allowance",outputs:[{name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},{payable:!0,stateMutability:"payable",type:"fallback"},{anonymous:!1,inputs:[{indexed:!0,name:"owner",type:"address"},{indexed:!0,name:"spender",type:"address"},{indexed:!1,name:"value",type:"uint256"}],name:"Approval",type:"event"},{anonymous:!1,inputs:[{indexed:!0,name:"from",type:"address"},{indexed:!0,name:"to",type:"address"},{indexed:!1,name:"value",type:"uint256"}],name:"Transfer",type:"event"}];let Erc20_factory_Erc20_factory=class Erc20_factory_Erc20_factory{static createInterface(){return new X.vU(tr)}static connect(e,t){return new z.Contract(e,tr,t)}};Erc20_factory_Erc20_factory.abi=tr;var to=f(16690),ts=f(1633);function methodParameters_buildTrade(e,t,f,n){let a=x().filter(n,e=>e.protocol===Q.Protocol.V3),i=x().filter(n,e=>e.protocol===Q.Protocol.V2),r=x().filter(n,e=>e.protocol===Q.Protocol.MIXED),o=x().map(a,n=>{let{route:a,amount:i,quote:r}=n;if(f==S.TradeType.EXACT_INPUT){let f=amounts_CurrencyAmount.fromFractionalAmount(e,i.numerator,i.denominator),n=amounts_CurrencyAmount.fromFractionalAmount(t,r.numerator,r.denominator),o=new B.Route(a.pools,f.currency,n.currency);return{routev3:o,inputAmount:f,outputAmount:n}}{let f=amounts_CurrencyAmount.fromFractionalAmount(e,r.numerator,r.denominator),n=amounts_CurrencyAmount.fromFractionalAmount(t,i.numerator,i.denominator),o=new B.Route(a.pools,f.currency,n.currency);return{routev3:o,inputAmount:f,outputAmount:n}}}),s=x().map(i,n=>{let{route:a,amount:i,quote:r}=n;if(f==S.TradeType.EXACT_INPUT){let f=amounts_CurrencyAmount.fromFractionalAmount(e,i.numerator,i.denominator),n=amounts_CurrencyAmount.fromFractionalAmount(t,r.numerator,r.denominator),o=new Y.AW(a.pairs,f.currency,n.currency);return{routev2:o,inputAmount:f,outputAmount:n}}{let f=amounts_CurrencyAmount.fromFractionalAmount(e,r.numerator,r.denominator),n=amounts_CurrencyAmount.fromFractionalAmount(t,i.numerator,i.denominator),o=new Y.AW(a.pairs,f.currency,n.currency);return{routev2:o,inputAmount:f,outputAmount:n}}}),d=x().map(r,n=>{let{route:a,amount:i,quote:r}=n;if(f!=S.TradeType.EXACT_INPUT)throw Error("Mixed routes are only supported for exact input trades");let o=amounts_CurrencyAmount.fromFractionalAmount(e,i.numerator,i.denominator),s=amounts_CurrencyAmount.fromFractionalAmount(t,r.numerator,r.denominator),d=new Q.MixedRouteSDK(a.pools,o.currency,s.currency);return{mixedRoute:d,inputAmount:o,outputAmount:s}}),u=new Q.Trade({v2Routes:s,v3Routes:o,mixedRoutes:d,tradeType:f});return u}function buildSwapMethodParameters(e,t,f){if(t.type==g.UNIVERSAL_ROUTER)return{...ts.SwapRouter.swapERC20CallParameters(e,t),to:(0,ts.UNIVERSAL_ROUTER_ADDRESS)(f)};if(t.type==g.SWAP_ROUTER_02){let{recipient:n,slippageTolerance:a,deadline:i,inputTokenPermit:r}=t;return{...Q.SwapRouter.swapCallParameters(e,{recipient:n,slippageTolerance:a,deadlineOrPreviousBlockhash:i,inputTokenPermit:r}),to:addresses_SWAP_ROUTER_02_ADDRESSES(f)}}throw Error(`Unsupported swap type ${t}`)}var td=f(67133).Buffer;async function getV2NativePool(e,t,f){let n=e.chainId,a=U[n],i=await t.getPools([[a,e]],f),r=i.getPool(a,e);return!r||r.reserve0.equalTo(0)||r.reserve1.equalTo(0)?(P.error({weth:a,token:e,reserve0:null==r?void 0:r.reserve0.toExact(),reserve1:null==r?void 0:r.reserve1.toExact()},`Could not find a valid WETH V2 pool with ${e.symbol} for computing gas costs.`),null):r}async function getHighestLiquidityV3NativePool(e,t,f){let n=U[e.chainId],a=x()([B.FeeAmount.HIGH,B.FeeAmount.MEDIUM,B.FeeAmount.LOW,B.FeeAmount.LOWEST]).map(t=>[n,e,t]).value(),i=await t.getPools(a,f),r=x()([B.FeeAmount.HIGH,B.FeeAmount.MEDIUM,B.FeeAmount.LOW,B.FeeAmount.LOWEST]).map(t=>i.getPool(n,e,t)).compact().value();if(0==r.length)return P.error({pools:r},`Could not find a ${n.symbol} pool with ${e.symbol} for computing gas costs.`),null;let o=r.reduce((e,t)=>_().greaterThan(e.liquidity,t.liquidity)?e:t);return o}async function getHighestLiquidityV3USDPool(e,t,f){let n=tb[e],a=U[e];if(!n)throw Error(`Could not find a USD token for computing gas costs on ${e}`);let i=x()([B.FeeAmount.HIGH,B.FeeAmount.MEDIUM,B.FeeAmount.LOW,B.FeeAmount.LOWEST]).flatMap(e=>x().map(n,t=>[a,t,e])).value(),r=await t.getPools(i,f),o=x()([B.FeeAmount.HIGH,B.FeeAmount.MEDIUM,B.FeeAmount.LOW,B.FeeAmount.LOWEST]).flatMap(e=>{let t=[];for(let f of n){let n=r.getPool(a,f,e);n&&t.push(n)}return t}).compact().value();if(0==o.length){let e=`Could not find a USD/${a.symbol} pool for computing gas costs.`;throw P.error({pools:o},e),Error(e)}let s=o.reduce((e,t)=>_().greaterThan(e.liquidity,t.liquidity)?e:t);return s}function getL2ToL1GasUsed(e,t,f){switch(f){case S.ChainId.ARBITRUM_ONE:case S.ChainId.ARBITRUM_GOERLI:{let t=function(e){if(""==e)return e5.O$.from(0);let t=to.compress(td.from(e.replace("0x",""),"hex"),{mode:0,quality:1,lgwin:22});return e5.O$.from(t.length).mul(120).div(100)}(e);return t.mul(16)}case S.ChainId.OPTIMISM:case S.ChainId.OPTIMISM_GOERLI:case S.ChainId.BASE:case S.ChainId.BASE_GOERLI:{let f=e.slice(2).match(/.{1,2}/g),n=f.length,a=0;for(let e=0;e<n;e+=1){let t=parseInt(f[e],16);0==t?a+=4:a+=16}let i=t.add(a);return i.add(1088)}default:return e5.O$.from(0)}}let tu={name:"Unsupported Token List",timestamp:"2021-01-05T20:47:02.923Z",version:{major:1,minor:0,patch:0},tags:{},logoURI:"ipfs://QmNa8mQkrNKp1WEEeGjFezDmDeodkWRevGFN8JCV7b4Xir",keywords:["uniswap","unsupported","broken"],tokens:[{name:"USD Token",address:"0xd233d1f6fd11640081abb8db125f722b5dc729dc",symbol:"USD",decimals:9,chainId:1,logoURI:""},{name:"UNI HODL",address:"0x4bf5dc91E2555449293D7824028Eb8Fe5879B689",symbol:"UniH",decimals:18,chainId:1,logoURI:""},{name:"Gold Tether",address:"0x4922a015c4407F87432B179bb209e125432E4a2A",symbol:"XAUt",decimals:6,chainId:1,logoURI:"https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0x4922a015c4407F87432B179bb209e125432E4a2A/logo.png"},{name:"Grump Cat",address:"0x93B2FfF814FCaEFFB01406e80B4Ecd89Ca6A021b",symbol:"GRUMPY",decimals:9,chainId:1,logoURI:"https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0x4922a015c4407F87432B179bb209e125432E4a2A/logo.png"},{name:"apeUSD-UMA Synthetic USD (Dec 2021)",address:"0xfA5e27893aee4805283D86e4283Da64F8c72dd56",symbol:"apeUSD-UMA-DEC21",decimals:18,chainId:1,logoURI:""},{chainId:1,address:"0xc6b11850241c5127eab73af4b6c68bc267cbbff4",name:"oWETHp Put 360 DEC2520",symbol:"oWETH-360P-12/25/20",decimals:7},{chainId:1,name:"oYFIp Put 25000 OCT0220",address:"0x452b421be5b30f0c6ad8c3f03c06bdaab4f5c56c",symbol:"oYFI-25000P-10/02/20",decimals:7},{chainId:1,name:"oWETHp Put 360 OCT3020",address:"0x0578779e746d7186253a36cf651ea786acfcf087",symbol:"oWETH-360P-10/30/20",decimals:7},{chainId:1,name:"ETHc Call 500 OCT3020",address:"0xf9aba2e43fb19184408ea3b572a0fd672946f87b",symbol:"oETH-500C-10/30/20",decimals:6},{chainId:1,name:"oBALp Put 22 OCT0220",address:"0xdb0991dfc7e828b5a2837dc82d68e16490562c8d",symbol:"oBAL-22P-10/02/20",decimals:7},{chainId:1,name:"oCOMPp Put 150 SEP2520",address:"0xe951ebe6b4420ab3f4844cf36dedd263d095b416",symbol:"oCOMP-150P-09/25/20",decimals:7},{chainId:1,name:"oCRVp Put 3 SEP252020",address:"0x9215bd49b59748419eac6bad9dbe247df06ebdb9",symbol:"oCRV-3P-09/25/20",decimals:7},{chainId:1,name:"oETHp Put 180 SEP2520",address:"0xE3A2c34Fa2F59ffa95C4ACd1E5663633d45Bc3AD",symbol:"oETH-180P-09/25/20",decimals:7},{chainId:1,name:"oETHc Call 400 SEP2520",address:"0x05977EBC26825C0CD6097E0Ad7204721516711Eb",symbol:"oETH-400C-09/25/20",decimals:7},{chainId:1,name:"oWETHp Put 380 SEP1820",address:"0x31f88266301b08631f9f0e33fd5c43c2a5d1e5b2",symbol:"oWETH-380P-09/18/20",decimals:7},{chainId:1,name:"oYFIp Put 8500 SEP1820",address:"0xd1cec2f67fdc4c60e0963515dfc3343f31e32e47",symbol:"oYFI-8500P-09/18/20",decimals:7},{chainId:1,name:"oWETHp Put 370 SEP1120",address:"0x15844029b2c2bf24506e9937739a9a912f1e4354",symbol:"oWETH-370P-09/11/20",decimals:7},{chainId:1,name:"oWETHp Put 400 SEP0420",address:"0x5562c33c383f6386be4f6dcdbd35a3a99bbcfde6",symbol:"oWETH-400P-09/04/20",decimals:7},{chainId:1,name:"oETHp Put 200 AUG2820",address:"0x3CBFC1397deF0602c2d211c70A1c0c38CEDB5448",symbol:"oWETH-400P-09/04/20",decimals:7},{chainId:1,name:"Opyn cDai Insurance",symbol:"ocDai",address:"0x98cc3bd6af1880fcfda17ac477b2f612980e5e33",decimals:8},{chainId:1,name:"Opyn cUSDC Insurance",symbol:"ocUSDC",address:"0x8ED9f862363fFdFD3a07546e618214b6D59F03d4",decimals:8},{chainId:1,address:"0x176C674Ee533C6139B0dc8b458D72A93dCB3e705",symbol:"iAAVE",name:"Synth Inverse Aave",decimals:18,logoURI:"https://raw.githubusercontent.com/Synthetixio/synthetix-assets/v2.0.10/synths/iAAVE.svg",tags:["inverse","synth"]},{chainId:1,address:"0x8A8079c7149B8A1611e5C5d978DCA3bE16545F83",symbol:"iADA",name:"Synth Inverse Cardano",decimals:18,logoURI:"https://raw.githubusercontent.com/Synthetixio/synthetix-assets/v2.0.10/synths/iADA.svg",tags:["inverse","synth"]},{chainId:1,address:"0xAFD870F32CE54EfdBF677466B612bf8ad164454B",symbol:"iBNB",name:"Synth Inverse Binance Coin",decimals:18,logoURI:"https://raw.githubusercontent.com/Synthetixio/synthetix-assets/v2.0.10/synths/iBNB.svg",tags:["inverse","synth"]},{chainId:1,address:"0xD6014EA05BDe904448B743833dDF07c3C7837481",symbol:"iBTC",name:"Synth Inverse Bitcoin",decimals:18,logoURI:"https://raw.githubusercontent.com/Synthetixio/synthetix-assets/v2.0.10/synths/iBTC.svg",tags:["inverse","synth"]},{chainId:1,address:"0x336213e1DDFC69f4701Fc3F86F4ef4A160c1159d",symbol:"iCEX",name:"Synth Inverse Centralised Exchange Index",decimals:18,logoURI:"https://raw.githubusercontent.com/Synthetixio/synthetix-assets/v2.0.10/synths/iCEX.svg",tags:["index","inverse","synth"]},{chainId:1,address:"0x6345728B1ccE16E6f8C509950b5c84FFF88530d9",symbol:"iCOMP",name:"Synth Inverse Compound",decimals:18,logoURI:"https://raw.githubusercontent.com/Synthetixio/synthetix-assets/v2.0.10/synths/iCOMP.svg",tags:["inverse","synth"]},{chainId:1,address:"0xCB98f42221b2C251A4E74A1609722eE09f0cc08E",symbol:"iDASH",name:"Synth Inverse Dash",decimals:18,logoURI:"https://raw.githubusercontent.com/Synthetixio/synthetix-assets/v2.0.10/synths/iDASH.svg",tags:["inverse","synth"]},{chainId:1,address:"0x14d10003807AC60d07BB0ba82cAeaC8d2087c157",symbol:"iDEFI",name:"Synth Inverse DeFi Index",decimals:18,logoURI:"https://raw.githubusercontent.com/Synthetixio/synthetix-assets/v2.0.10/synths/iDEFI.svg",tags:["index","inverse","synth"]},{chainId:1,address:"0x46a97629C9C1F58De6EC18C7F536e7E6d6A6ecDe",symbol:"iDOT",name:"Synth Inverse Polkadot",decimals:18,logoURI:"https://raw.githubusercontent.com/Synthetixio/synthetix-assets/v2.0.10/synths/iDOT.svg",tags:["inverse","synth"]},{chainId:1,address:"0xF4EebDD0704021eF2a6Bbe993fdf93030Cd784b4",symbol:"iEOS",name:"Synth Inverse EOS",decimals:18,logoURI:"https://raw.githubusercontent.com/Synthetixio/synthetix-assets/v2.0.10/synths/iEOS.svg",tags:["inverse","synth"]},{chainId:1,address:"0xd50c1746D835d2770dDA3703B69187bFfeB14126",symbol:"iETC",name:"Synth Inverse Ethereum Classic",decimals:18,logoURI:"https://raw.githubusercontent.com/Synthetixio/synthetix-assets/v2.0.10/synths/iETC.svg",tags:["inverse","synth"]},{chainId:1,address:"0xA9859874e1743A32409f75bB11549892138BBA1E",symbol:"iETH",name:"Synth Inverse Ether",decimals:18,logoURI:"https://raw.githubusercontent.com/Synthetixio/synthetix-assets/v2.0.10/synths/iETH.svg",tags:["inverse","synth"]},{chainId:1,address:"0x2d7aC061fc3db53c39fe1607fB8cec1B2C162B01",symbol:"iLINK",name:"Synth Inverse Chainlink",decimals:18,logoURI:"https://raw.githubusercontent.com/Synthetixio/synthetix-assets/v2.0.10/synths/iLINK.svg",tags:["inverse","synth"]},{chainId:1,address:"0x79da1431150C9b82D2E5dfc1C68B33216846851e",symbol:"iLTC",name:"Synth Inverse Litecoin",decimals:18,logoURI:"https://raw.githubusercontent.com/Synthetixio/synthetix-assets/v2.0.10/synths/iLTC.svg",tags:["inverse","synth"]},{chainId:1,address:"0xA5a5DF41883Cdc00c4cCC6E8097130535399d9a3",symbol:"iOIL",name:"Synth Inverse Perpetual Oil Futures",decimals:18,logoURI:"https://raw.githubusercontent.com/Synthetixio/synthetix-assets/v2.0.10/synths/iOIL.svg",tags:["inverse","synth"]},{chainId:1,address:"0x0fEd38108bdb8e62ef7b5680E8E0726E2F29e0De",symbol:"iREN",name:"Synth Inverse Ren",decimals:18,logoURI:"https://raw.githubusercontent.com/Synthetixio/synthetix-assets/v2.0.10/synths/iREN.svg",tags:["inverse","synth"]},{chainId:1,address:"0xC5807183a9661A533CB08CbC297594a0B864dc12",symbol:"iTRX",name:"Synth Inverse TRON",decimals:18,logoURI:"https://raw.githubusercontent.com/Synthetixio/synthetix-assets/v2.0.10/synths/iTRX.svg",tags:["inverse","synth"]},{chainId:1,address:"0x36A00FF9072570eF4B9292117850B8FE08d96cce",symbol:"iUNI",name:"Synth Inverse Uniswap",decimals:18,logoURI:"https://raw.githubusercontent.com/Synthetixio/synthetix-assets/v2.0.10/synths/iUNI.svg",tags:["inverse","synth"]},{chainId:1,address:"0x4AdF728E2Df4945082cDD6053869f51278fae196",symbol:"iXMR",name:"Synth Inverse Monero",decimals:18,logoURI:"https://raw.githubusercontent.com/Synthetixio/synthetix-assets/v2.0.10/synths/iXMR.svg",tags:["inverse","synth"]},{chainId:1,address:"0x27269b3e45A4D3E79A3D6BFeE0C8fB13d0D711A6",symbol:"iXRP",name:"Synth Inverse Ripple",decimals:18,logoURI:"https://raw.githubusercontent.com/Synthetixio/synthetix-assets/v2.0.10/synths/iXRP.svg",tags:["inverse","synth"]},{chainId:1,address:"0x8deef89058090ac5655A99EEB451a4f9183D1678",symbol:"iXTZ",name:"Synth Inverse Tezos",decimals:18,logoURI:"https://raw.githubusercontent.com/Synthetixio/synthetix-assets/v2.0.10/synths/iXTZ.svg",tags:["inverse","synth"]},{chainId:1,address:"0x592244301CeA952d6daB2fdC1fE6bd9E53917306",symbol:"iYFI",name:"Synth Inverse yearn.finance",decimals:18,logoURI:"https://raw.githubusercontent.com/Synthetixio/synthetix-assets/v2.0.10/synths/iYFI.svg",tags:["inverse","synth"]},{chainId:1,address:"0xcD39b5434a0A92cf47D1F567a7dF84bE356814F0",symbol:"s1INCH",name:"Synth 1inch",decimals:18,logoURI:"https://raw.githubusercontent.com/Synthetixio/synthetix-assets/v2.0.10/synths/s1INCH.svg",tags:["synth"]},{chainId:1,address:"0x7537AAe01f3B218DAE75e10d952473823F961B87",symbol:"sAAPL",name:"Synth Apple",decimals:18,logoURI:"https://raw.githubusercontent.com/Synthetixio/synthetix-assets/v2.0.10/synths/sAAPL.svg",tags:["synth"]},{chainId:1,address:"0xd2dF355C19471c8bd7D8A3aa27Ff4e26A21b4076",symbol:"sAAVE",name:"Synth Aave",decimals:18,logoURI:"https://raw.githubusercontent.com/Synthetixio/synthetix-assets/v2.0.10/synths/sAAVE.svg",tags:["synth"]},{chainId:1,address:"0xe36E2D3c7c34281FA3bC737950a68571736880A1",symbol:"sADA",name:"Synth Cardano",decimals:18,logoURI:"https://raw.githubusercontent.com/Synthetixio/synthetix-assets/v2.0.10/synths/sADA.svg",tags:["synth"]},{chainId:1,address:"0x9CF7E61853ea30A41b02169391b393B901eac457",symbol:"sAMZN",name:"Synth Amazon",decimals:18,logoURI:"https://raw.githubusercontent.com/Synthetixio/synthetix-assets/v2.0.10/synths/sAMZN.svg",tags:["synth"]},{chainId:1,address:"0xF48e200EAF9906362BB1442fca31e0835773b8B4",symbol:"sAUD",name:"Synth Australian Dollars",decimals:18,logoURI:"https://raw.githubusercontent.com/Synthetixio/synthetix-assets/v2.0.10/synths/sAUD.svg",tags:["synth"]},{chainId:1,address:"0x617aeCB6137B5108D1E7D4918e3725C8cEbdB848",symbol:"sBNB",name:"Synth Binance Coin",decimals:18,logoURI:"https://raw.githubusercontent.com/Synthetixio/synthetix-assets/v2.0.10/synths/sBNB.svg",tags:["synth"]},{chainId:1,address:"0xfE18be6b3Bd88A2D2A7f928d00292E7a9963CfC6",symbol:"sBTC",name:"Synth Bitcoin",decimals:18,logoURI:"https://raw.githubusercontent.com/Synthetixio/synthetix-assets/v2.0.10/synths/sBTC.svg",tags:["synth"]},{chainId:1,address:"0xeABACD844A196D7Faf3CE596edeBF9900341B420",symbol:"sCEX",name:"Synth Centralised Exchange Index",decimals:18,logoURI:"https://raw.githubusercontent.com/Synthetixio/synthetix-assets/v2.0.10/synths/sCEX.svg",tags:["index","synth"]},{chainId:1,address:"0x0F83287FF768D1c1e17a42F44d644D7F22e8ee1d",symbol:"sCHF",name:"Synth Swiss Franc",decimals:18,logoURI:"https://raw.githubusercontent.com/Synthetixio/synthetix-assets/v2.0.10/synths/sCHF.svg",tags:["synth"]},{chainId:1,address:"0x9EeF4CA7aB9fa8bc0650127341C2d3F707a40f8A",symbol:"sCOIN",name:"Synth Coinbase",decimals:18,logoURI:"https://raw.githubusercontent.com/Synthetixio/synthetix-assets/v2.0.10/synths/sCOIN.svg",tags:["synth"]},{chainId:1,address:"0xEb029507d3e043DD6C87F2917C4E82B902c35618",symbol:"sCOMP",name:"Synth Compound",decimals:18,logoURI:"https://raw.githubusercontent.com/Synthetixio/synthetix-assets/v2.0.10/synths/sCOMP.svg",tags:["synth"]},{chainId:1,address:"0xD38aEb759891882e78E957c80656572503D8c1B1",symbol:"sCRV",name:"Synth Curve DAO Token",decimals:18,logoURI:"https://raw.githubusercontent.com/Synthetixio/synthetix-assets/v2.0.10/synths/sCRV.svg",tags:["synth"]},{chainId:1,address:"0xfE33ae95A9f0DA8A845aF33516EDc240DCD711d6",symbol:"sDASH",name:"Synth Dash",decimals:18,logoURI:"https://raw.githubusercontent.com/Synthetixio/synthetix-assets/v2.0.10/synths/sDASH.svg",tags:["synth"]},{chainId:1,address:"0xe1aFe1Fd76Fd88f78cBf599ea1846231B8bA3B6B",symbol:"sDEFI",name:"Synth DeFi Index",decimals:18,logoURI:"https://raw.githubusercontent.com/Synthetixio/synthetix-assets/v2.0.10/synths/sDEFI.svg",tags:["index","synth"]},{chainId:1,address:"0x1715AC0743102BF5Cd58EfBB6Cf2dC2685d967b6",symbol:"sDOT",name:"Synth Polkadot",decimals:18,logoURI:"https://raw.githubusercontent.com/Synthetixio/synthetix-assets/v2.0.10/synths/sDOT.svg",tags:["synth"]},{chainId:1,address:"0x88C8Cf3A212c0369698D13FE98Fcb76620389841",symbol:"sEOS",name:"Synth EOS",decimals:18,logoURI:"https://raw.githubusercontent.com/Synthetixio/synthetix-assets/v2.0.10/synths/sEOS.svg",tags:["synth"]},{chainId:1,address:"0x22602469d704BfFb0936c7A7cfcD18f7aA269375",symbol:"sETC",name:"Synth Ethereum Classic",decimals:18,logoURI:"https://raw.githubusercontent.com/Synthetixio/synthetix-assets/v2.0.10/synths/sETC.svg",tags:["synth"]},{chainId:1,address:"0x5e74C9036fb86BD7eCdcb084a0673EFc32eA31cb",symbol:"sETH",name:"Synth Ether",decimals:18,logoURI:"https://raw.githubusercontent.com/Synthetixio/synthetix-assets/v2.0.10/synths/sETH.svg",tags:["synth"]},{chainId:1,address:"0xD71eCFF9342A5Ced620049e616c5035F1dB98620",symbol:"sEUR",name:"Synth Euros",decimals:18,logoURI:"https://raw.githubusercontent.com/Synthetixio/synthetix-assets/v2.0.10/synths/sEUR.svg",tags:["synth"]},{chainId:1,address:"0xf50B5e535F62a56A9BD2d8e2434204E726c027Fa",symbol:"sFB",name:"Synth Facebook",decimals:18,logoURI:"https://raw.githubusercontent.com/Synthetixio/synthetix-assets/v2.0.10/synths/sFB.svg",tags:["synth"]},{chainId:1,address:"0x23348160D7f5aca21195dF2b70f28Fce2B0be9fC",symbol:"sFTSE",name:"Synth FTSE 100 Index",decimals:18,logoURI:"https://raw.githubusercontent.com/Synthetixio/synthetix-assets/v2.0.10/synths/sFTSE.svg",tags:["synth"]},{chainId:1,address:"0x97fe22E7341a0Cd8Db6F6C021A24Dc8f4DAD855F",symbol:"sGBP",name:"Synth Pound Sterling",decimals:18,logoURI:"https://raw.githubusercontent.com/Synthetixio/synthetix-assets/v2.0.10/synths/sGBP.svg",tags:["synth"]},{chainId:1,address:"0xC63B8ECCE56aB9C46184eC6aB85e4771fEa4c8AD",symbol:"sGOOG",name:"Synth Alphabet",decimals:18,logoURI:"https://raw.githubusercontent.com/Synthetixio/synthetix-assets/v2.0.10/synths/sGOOG.svg",tags:["synth"]},{chainId:1,address:"0xF6b1C627e95BFc3c1b4c9B825a032Ff0fBf3e07d",symbol:"sJPY",name:"Synth Japanese Yen",decimals:18,logoURI:"https://raw.githubusercontent.com/Synthetixio/synthetix-assets/v2.0.10/synths/sJPY.svg",tags:["synth"]},{chainId:1,address:"0x269895a3dF4D73b077Fc823dD6dA1B95f72Aaf9B",symbol:"sKRW",name:"Synth South Korean Won",decimals:18,logoURI:"https://raw.githubusercontent.com/Synthetixio/synthetix-assets/v2.0.10/synths/sKRW.svg",tags:["synth"]},{chainId:1,address:"0xbBC455cb4F1B9e4bFC4B73970d360c8f032EfEE6",symbol:"sLINK",name:"Synth Chainlink",decimals:18,logoURI:"https://raw.githubusercontent.com/Synthetixio/synthetix-assets/v2.0.10/synths/sLINK.svg",tags:["synth"]},{chainId:1,address:"0xC14103C2141E842e228FBaC594579e798616ce7A",symbol:"sLTC",name:"Synth Litecoin",decimals:18,logoURI:"https://raw.githubusercontent.com/Synthetixio/synthetix-assets/v2.0.10/synths/sLTC.svg",tags:["synth"]},{chainId:1,address:"0x745a824D6aBBD236AA794b5530062778A6Ad7523",symbol:"sMSFT",name:"Synth Microsoft",decimals:18,logoURI:"https://raw.githubusercontent.com/Synthetixio/synthetix-assets/v2.0.10/synths/sMSFT.svg",tags:["synth"]},{chainId:1,address:"0x5A7E3c07604EB515C16b36cd51906a65f021F609",symbol:"sNFLX",name:"Synth Netflix",decimals:18,logoURI:"https://raw.githubusercontent.com/Synthetixio/synthetix-assets/v2.0.10/synths/sNFLX.svg",tags:["synth"]},{chainId:1,address:"0x757de3ac6B830a931eF178C6634c5C551773155c",symbol:"sNIKKEI",name:"Synth Nikkei 225 Index",decimals:18,logoURI:"https://raw.githubusercontent.com/Synthetixio/synthetix-assets/v2.0.10/synths/sNIKKEI.svg",tags:["synth"]},{chainId:1,address:"0x6d16cF3EC5F763d4d99cB0B0b110eefD93B11B56",symbol:"sOIL",name:"Synth Perpetual Oil Futures",decimals:18,logoURI:"https://raw.githubusercontent.com/Synthetixio/synthetix-assets/v2.0.10/synths/sOIL.svg",tags:["synth"]},{chainId:1,address:"0xD31533E8d0f3DF62060e94B3F1318137bB6E3525",symbol:"sREN",name:"Synth Ren",decimals:18,logoURI:"https://raw.githubusercontent.com/Synthetixio/synthetix-assets/v2.0.10/synths/sREN.svg",tags:["synth"]},{chainId:1,address:"0x0352557B007A4Aae1511C114409b932F06F9E2f4",symbol:"sRUNE",name:"Synth THORChain",decimals:18,logoURI:"https://raw.githubusercontent.com/Synthetixio/synthetix-assets/v2.0.10/synths/sRUNE.svg",tags:["synth"]},{chainId:1,address:"0xf2E08356588EC5cd9E437552Da87C0076b4970B0",symbol:"sTRX",name:"Synth TRON",decimals:18,logoURI:"https://raw.githubusercontent.com/Synthetixio/synthetix-assets/v2.0.10/synths/sTRX.svg",tags:["synth"]},{chainId:1,address:"0x918dA91Ccbc32B7a6A0cc4eCd5987bbab6E31e6D",symbol:"sTSLA",name:"Synth Tesla",decimals:18,logoURI:"https://raw.githubusercontent.com/Synthetixio/synthetix-assets/v2.0.10/synths/sTSLA.svg",tags:["synth"]},{chainId:1,address:"0x30635297E450b930f8693297eBa160D9e6c8eBcf",symbol:"sUNI",name:"Synth Uniswap",decimals:18,logoURI:"https://raw.githubusercontent.com/Synthetixio/synthetix-assets/v2.0.10/synths/sUNI.svg",tags:["synth"]},{chainId:1,address:"0x6A22e5e94388464181578Aa7A6B869e00fE27846",symbol:"sXAG",name:"Synth Silver Ounce",decimals:18,logoURI:"https://raw.githubusercontent.com/Synthetixio/synthetix-assets/v2.0.10/synths/sXAG.svg",tags:["synth"]},{chainId:1,address:"0x261EfCdD24CeA98652B9700800a13DfBca4103fF",symbol:"sXAU",name:"Synth Gold Ounce",decimals:18,logoURI:"https://raw.githubusercontent.com/Synthetixio/synthetix-assets/v2.0.10/synths/sXAU.svg",tags:["synth"]},{chainId:1,address:"0x5299d6F7472DCc137D7f3C4BcfBBB514BaBF341A",symbol:"sXMR",name:"Synth Monero",decimals:18,logoURI:"https://raw.githubusercontent.com/Synthetixio/synthetix-assets/v2.0.10/synths/sXMR.svg",tags:["synth"]},{chainId:1,address:"0xa2B0fDe6D710e201d0d608e924A484d1A5fEd57c",symbol:"sXRP",name:"Synth Ripple",decimals:18,logoURI:"https://raw.githubusercontent.com/Synthetixio/synthetix-assets/v2.0.10/synths/sXRP.svg",tags:["synth"]},{chainId:1,address:"0x2e59005c5c0f0a4D77CcA82653d48b46322EE5Cd",symbol:"sXTZ",name:"Synth Tezos",decimals:18,logoURI:"https://raw.githubusercontent.com/Synthetixio/synthetix-assets/v2.0.10/synths/sXTZ.svg",tags:["synth"]},{chainId:1,address:"0x992058B7DB08F9734d84485bfbC243C4ee6954A7",symbol:"sYFI",name:"Synth yearn.finance",decimals:18,logoURI:"https://raw.githubusercontent.com/Synthetixio/synthetix-assets/v2.0.10/synths/sYFI.svg",tags:["synth"]},{chainId:1,address:"0x81ab848898b5ffD3354dbbEfb333D5D183eEDcB5",name:"yUSD Synthetic Expiring 1 September 2020",symbol:"yUSDSEP20",decimals:18},{chainId:1,address:"0xB2FdD60AD80ca7bA89B9BAb3b5336c2601C020b4",name:"yUSD Synthetic Expiring 1 October 2020",symbol:"yUSDOCT20",decimals:18},{chainId:1,address:"0x208d174775dc39fe18b1b374972f77ddec6c0f73",name:"uUSDrBTC Synthetic Expiring 1 Oct 2020",symbol:"uUSDrBTC-OCT",decimals:18},{chainId:1,address:"0xf06ddacf71e2992e2122a1a0168c6967afdf63ce",name:"uUSDrBTC Synthetic Expiring 31 Dec 2020",symbol:"uUSDrBTC-DEC",decimals:18},{chainId:1,address:"0xd16c79c8a39d44b2f3eb45d2019cd6a42b03e2a9",name:"uUSDwETH Synthetic Expiring 31 Dec 2020",symbol:"uUSDwETH-DEC",decimals:18},{chainId:1,address:"0x3d995510f8d82c2ea341845932b5ddde0bead9a3",name:"uGAS-JAN21 Token Expiring 31 Jan 2021",symbol:"uGAS-JAN21",decimals:18},{chainId:1,address:"0x90f802c7e8fb5d40b0de583e34c065a3bd2020d8",name:"YD-ETH-MAR21 Token Expiring 31 Mar 2021",symbol:"YD-ETH-MAR21",decimals:18},{chainId:1,address:"0x002f0b1a71c5730cf2f4da1970a889207bdb6d0d",name:"YD-BTC-MAR21 Token Expiring 31 Mar 2021",symbol:"YD-BTC-MAR21",decimals:18},{chainId:1,address:"0x1062ad0e59fa67fa0b27369113098cc941dd0d5f",name:"UMA 35 Call Expirying 30 Apr 2021",symbol:"UMAc35-0421",decimals:18},{chainId:1,address:"0xf93340b1a3adf7eedcaec25fae8171d4b736e89f",name:"pxUSD Synthetic USD Expiring 1 April 2021",symbol:"pxUSD_MAR2021",decimals:18},{chainId:1,address:"0x84bd083b1c8bf929f39c98bc17cf518f40154f58",name:"Mario Cash Synthetic Token Expiring 15 January 2021",symbol:"Mario Cash-JAN-2021",decimals:18},{chainId:1,address:"0x81fab276aec924fbde190cf379783526d413cf70",name:"uGAS-FEB21 Token Expiring 28 Feb 2021",symbol:"uGAS-FEB21",decimals:18},{chainId:1,address:"0x4e110603e70b0b5f1c403ee543b37e1f1244cf28",name:"uGAS-MAR21 Token Expiring 31 Mar 2021",symbol:"uGAS-MAR21",decimals:18},{chainId:1,address:"0xcf55a7f92d5e0c6683debbc1fc20c0a6e056df13",name:"Zelda Elastic Cash",symbol:"Zelda Elastic Cash",decimals:18},{chainId:1,address:"0x654eebac62240e6c56bab5f6adf7cfa74a894510",name:"Zelda Spring Nuts Cash",symbol:"Zelda Spring Nuts Cash",decimals:18},{chainId:1,address:"0xa48920cc1ad85d8ea13af5d7be180c0338c306dd",name:"Zelda Summer Nuts Cash",symbol:"Zelda Summer Nuts Cash",decimals:18},{chainId:1,address:"0x249a198d59b57fda5dda90630febc86fd8c7594c",name:"Zelda Whirlwind Cash",symbol:"Zelda Whirlwind Cash",decimals:18},{chainId:1,address:"0x5ed1406873c9eb91f6f9a67ac4e152387c1132e7",name:"Zelda Reinforced Cash",symbol:"Zelda Reinforced Cash",decimals:18},{chainId:1,address:"0x8104c9f13118320eefe5fbea8a44d600b85981ef",name:"Mini Mario Summer Cash",symbol:"Mini Mario Summer Cash",decimals:18},{chainId:1,address:"0x69746c719e59674b147df25f50e7cfa0673cb625",name:"Mini Mario Spring Cash",symbol:"Mini Mario Spring Cash",decimals:18},{chainId:1,address:"0x6b1257641d18791141f025eab36fb567c4b564ff",name:"Bitcoin Dominance Token 31 March 2021",symbol:"BTCDOM-MAR2021",decimals:18},{chainId:1,address:"0x4e83b6287588a96321b2661c5e041845ff7814af",name:"Altcoin Dominance Token 31 March 2021",symbol:"ALTDOM-MAR2021",decimals:18},{chainId:1,address:"0x59fec83ec709c893aedd1a144cf1828eb04127cd",name:"pxGOLD Synthetic GOLD Expiring 31 May 2021",symbol:"pxGOLD_MAY2021",decimals:18},{chainId:1,address:"0x89337BFb7938804c3776C9FB921EccAf5ab76758",name:"Compound Annualized Rate Future Expiring 28 March 2021",symbol:"CAR-USDC-MAR21",decimals:18},{chainId:1,address:"0xec58d3aefc9aaa2e0036fa65f70d569f49d9d1ed",name:"uSTONKS Index Token April 2021",symbol:"uSTONKS_APR21",decimals:6},{chainId:1,address:"0xa6B9d7E3d76cF23549293Fb22c488E0Ea591A44e",name:"uGAS-JUN21 Token Expiring 30 Jun 2021",symbol:"uGAS-JUN21",decimals:18},{chainId:1,address:"0xe813b65da6c38a04591aed3f082d32db7d53c382",name:"Yield Dollar [WETH Dec 2021]",symbol:"YD-ETH-DEC21",decimals:18},{chainId:1,address:"0x4b606e9eb2228c70f44453afe5a73e1fea258ce1",name:"pxUSD Synthetic USD Expiring 31 Mar 2022",symbol:"pxUSD_MAR2022",decimals:18},{chainId:1,address:"0x5247c0db4044fb6f97f32c7e1b48758019a5a912",name:"pxGOLD Synthetic Gold Expiring 31 Mar 2022",symbol:"pxGOLD_MAR2022",decimals:18},{chainId:1,address:"0x56fb1acaff95c0b6ebcd17c8361a63d98b1a5a11",name:"uForex CNYUSD Synthetic Token April 2021",symbol:"uCNYUSD-APR",decimals:6},{chainId:1,address:"0xd49fa405dce086c65d66ca1ca41f8e98583812b4",name:"uForex EURUSD Synthetic Token April 2021",symbol:"uEURUSD-APR",decimals:6},{chainId:1,address:"0x29dddacba3b231ee8d673dd0f0fa759ea145561b",name:"DEFI_PULSE_TOTAL_TVL Synthetic Token Expiring 15 April 2021",symbol:"TVL_ALL_APRIL15",decimals:6},{chainId:1,address:"0xcbe430927370e95b4b10cfc702c6017ec7abefc3",name:"Yield Dollar [WETH Jun 2021]",symbol:"YD-ETH-JUN21",decimals:18},{chainId:1,address:"0x4b7fb448df91c8ed973494f8c8c4f12daf3a8521",name:"Yield Dollar [renBTC Jun 2021]",symbol:"YD-BTC-JUN21",decimals:8},{chainId:1,address:"0x3108c33b6fb38efedaefd8b5f7ca01d5f5c7372d",name:"Yield Dollar UMA 21",symbol:"yUMA21",decimals:18},{chainId:1,address:"0x0cae9e4d663793c2a2A0b211c1Cf4bBca2B9cAa7",name:"Mirrored Amazon",symbol:"MAMZN",decimals:18},{chainId:1,address:"0x31c63146a635EB7465e5853020b39713AC356991",name:"M US Oil",symbol:"MUSO",decimals:18},{chainId:1,address:"0x59A921Db27Dd6d4d974745B7FfC5c33932653442",name:"M Google",symbol:"MGOOGL",decimals:18},{chainId:1,address:"0xf72FCd9DCF0190923Fadd44811E240Ef4533fc86",name:"Mirrored ProShares",symbol:"MVIXY",decimals:18},{chainId:1,address:"0x56aA298a19C93c6801FDde870fA63EF75Cc0aF72",name:"Mirrored Alibaba",symbol:"MBABA",decimals:18},{chainId:1,address:"0x0e99cC0535BB6251F6679Fa6E65d6d3b430e840B",name:"Mirrored Facebook",symbol:"MFB",decimals:18},{chainId:1,address:"0x13B02c8dE71680e71F0820c996E4bE43c2F57d15",name:"Mirrored Invesco QQ",symbol:"MQQQ",decimals:18},{chainId:1,address:"0x41BbEDd7286dAab5910a1f15d12CBda839852BD7",name:"Mirrored Microsoft",symbol:"MMSFT",decimals:18},{chainId:1,address:"0x9d1555d8cB3C846Bb4f7D5B1B1080872c3166676",name:"Mirrored iShares Si",symbol:"MSLV",decimals:18},{chainId:1,address:"0x21cA39943E91d704678F5D00b6616650F066fD63",name:"Mirrored Tesla",symbol:"MTSLA",decimals:18},{chainId:1,address:"0xe82bbB62fA81d0701643d1675FB50ec52fD3Df92",name:"DYDX Token",symbol:"DYDX",decimals:18},{chainId:10,address:"0xE405de8F52ba7559f9df3C368500B6E6ae6Cee49",name:"sETH",symbol:"Synth Ether",decimals:18},{chainId:10,address:"0x298B9B95708152ff6968aafd889c6586e9169f1D",name:"sBTC",symbol:"Synth Bitcoin",decimals:18},{chainId:10,address:"0xc5Db22719A06418028A40A9B5E9A7c02959D0d08",name:"sLINK",symbol:"Synth Link",decimals:18},{chainId:1,address:"0x6B60eE11b73230045cF9095E6e43AE9Ea638e172",name:"Shatner",symbol:"SHAT",decimals:18},{chainId:1,address:"0x7277a44D1325D81Ac58893002a1B40a41bea43fe",name:"FAANG Index",symbol:"FAANG",decimals:18},{chainId:1,address:"0x76175599887730786bdA1545D0D7AcE8737fEBB1",name:"ENS DAO",symbol:"ENS",decimals:18}]};let router_V3Route=class router_V3Route extends B.Route{constructor(){super(...arguments),this.protocol=Q.Protocol.V3}};let V2Route=class V2Route extends Y.AW{constructor(){super(...arguments),this.protocol=Q.Protocol.V2}};let MixedRoute=class MixedRoute extends Q.MixedRouteSDK{constructor(){super(...arguments),this.protocol=Q.Protocol.MIXED}};(s=T||(T={}))[s.SUCCESS=1]="SUCCESS",s[s.NO_ROUTE_FOUND=2]="NO_ROUTE_FOUND",s[s.NO_SWAP_NEEDED=3]="NO_SWAP_NEEDED",(d=g||(g={}))[d.UNIVERSAL_ROUTER=0]="UNIVERSAL_ROUTER",d[d.SWAP_ROUTER_02=1]="SWAP_ROUTER_02";let DEFAULT_ROUTING_CONFIG_BY_CHAIN=e=>{switch(e){case S.ChainId.OPTIMISM:case S.ChainId.OPTIMISM_GOERLI:case S.ChainId.BASE:case S.ChainId.BASE_GOERLI:return{v2PoolSelection:{topN:3,topNDirectSwaps:1,topNTokenInOut:5,topNSecondHop:2,topNWithEachBaseToken:2,topNWithBaseToken:6},v3PoolSelection:{topN:2,topNDirectSwaps:2,topNTokenInOut:2,topNSecondHop:1,topNWithEachBaseToken:3,topNWithBaseToken:3},maxSwapsPerPath:3,minSplits:1,maxSplits:7,distributionPercent:10,forceCrossProtocol:!1};case S.ChainId.ARBITRUM_ONE:case S.ChainId.ARBITRUM_GOERLI:case S.ChainId.CELO:case S.ChainId.CELO_ALFAJORES:return{v2PoolSelection:{topN:3,topNDirectSwaps:1,topNTokenInOut:5,topNSecondHop:2,topNWithEachBaseToken:2,topNWithBaseToken:6},v3PoolSelection:{topN:2,topNDirectSwaps:2,topNTokenInOut:2,topNSecondHop:1,topNWithEachBaseToken:3,topNWithBaseToken:2},maxSwapsPerPath:2,minSplits:1,maxSplits:7,distributionPercent:25,forceCrossProtocol:!1};default:return{v2PoolSelection:{topN:3,topNDirectSwaps:1,topNTokenInOut:5,topNSecondHop:2,tokensToAvoidOnSecondHops:new LowerCaseStringArray("0xd46ba6d942050d489dbd938a2c909a5d5039a161"),topNWithEachBaseToken:2,topNWithBaseToken:6},v3PoolSelection:{topN:2,topNDirectSwaps:2,topNTokenInOut:3,topNSecondHop:1,topNWithEachBaseToken:3,topNWithBaseToken:5},maxSwapsPerPath:3,minSplits:1,maxSplits:7,distributionPercent:5,forceCrossProtocol:!1}}};var tl=f(88178),tc=f.n(tl),tp=f(64116),th=f.n(tp);let tb={[S.ChainId.MAINNET]:[et,Z,$],[S.ChainId.ARBITRUM_ONE]:[eE,ev,eC],[S.ChainId.OPTIMISM]:[eh,el,ec],[S.ChainId.OPTIMISM_GOERLI]:[eg,em,ey],[S.ChainId.ARBITRUM_GOERLI]:[ew],[S.ChainId.GOERLI]:[eu,eo,es,ed],[S.ChainId.SEPOLIA]:[ei,er],[S.ChainId.POLYGON]:[eO],[S.ChainId.POLYGON_MUMBAI]:[eR],[S.ChainId.CELO]:[eG],[S.ChainId.CELO_ALFAJORES]:[eW],[S.ChainId.GNOSIS]:[eX],[S.ChainId.MOONBEAM]:[eJ],[S.ChainId.BNB]:[eL,eN,eB],[S.ChainId.AVALANCHE]:[e_,eQ],[S.ChainId.BASE]:[eY]};let IV2GasModelFactory=class IV2GasModelFactory{};let IOnChainGasModelFactory=class IOnChainGasModelFactory{};let gas_model_getQuoteThroughNativePool=(e,t,f)=>{let n=U[e],a=f.token0.equals(n),i=a?f.token0Price:f.token1Price;return i.quote(t)},tm=e5.O$.from(0),BASE_SWAP_COST=e=>{switch(e){case S.ChainId.MAINNET:case S.ChainId.GOERLI:case S.ChainId.SEPOLIA:case S.ChainId.OPTIMISM:case S.ChainId.OPTIMISM_GOERLI:case S.ChainId.BNB:case S.ChainId.AVALANCHE:case S.ChainId.BASE:case S.ChainId.BASE_GOERLI:return e5.O$.from(2e3);case S.ChainId.ARBITRUM_ONE:case S.ChainId.ARBITRUM_GOERLI:return e5.O$.from(5e3);case S.ChainId.POLYGON:case S.ChainId.POLYGON_MUMBAI:case S.ChainId.CELO:case S.ChainId.CELO_ALFAJORES:case S.ChainId.GNOSIS:case S.ChainId.MOONBEAM:return e5.O$.from(2e3)}},COST_PER_INIT_TICK=e=>{switch(e){case S.ChainId.MAINNET:case S.ChainId.GOERLI:case S.ChainId.SEPOLIA:case S.ChainId.BNB:case S.ChainId.AVALANCHE:case S.ChainId.OPTIMISM:case S.ChainId.OPTIMISM_GOERLI:case S.ChainId.BASE:case S.ChainId.BASE_GOERLI:case S.ChainId.ARBITRUM_ONE:case S.ChainId.ARBITRUM_GOERLI:case S.ChainId.POLYGON:case S.ChainId.POLYGON_MUMBAI:case S.ChainId.CELO:case S.ChainId.CELO_ALFAJORES:case S.ChainId.GNOSIS:case S.ChainId.MOONBEAM:return e5.O$.from(31e3)}},COST_PER_HOP=e=>{switch(e){case S.ChainId.MAINNET:case S.ChainId.GOERLI:case S.ChainId.SEPOLIA:case S.ChainId.BNB:case S.ChainId.OPTIMISM:case S.ChainId.OPTIMISM_GOERLI:case S.ChainId.AVALANCHE:case S.ChainId.BASE:case S.ChainId.BASE_GOERLI:case S.ChainId.ARBITRUM_ONE:case S.ChainId.ARBITRUM_GOERLI:case S.ChainId.POLYGON:case S.ChainId.POLYGON_MUMBAI:case S.ChainId.CELO:case S.ChainId.CELO_ALFAJORES:case S.ChainId.GNOSIS:case S.ChainId.MOONBEAM:return e5.O$.from(8e4)}},SINGLE_HOP_OVERHEAD=e=>e5.O$.from(15e3),TOKEN_OVERHEAD=(e,t)=>{let f=t.tokenPath,n=e5.O$.from(0);return e==S.ChainId.MAINNET&&(f.some(e=>e.equals(en))&&(n=n.add(15e4)),f.some(e=>e.equals(ea))&&(n=n.add(15e4))),n},NATIVE_WRAP_OVERHEAD=e=>e5.O$.from(27938),NATIVE_UNWRAP_OVERHEAD=e=>e5.O$.from(36e3),NATIVE_OVERHEAD=(e,t,f)=>t.isNative?NATIVE_WRAP_OVERHEAD(e):f.isNative?NATIVE_UNWRAP_OVERHEAD(e):e5.O$.from(0);let V3HeuristicGasModelFactory=class V3HeuristicGasModelFactory extends IOnChainGasModelFactory{constructor(){super()}async buildGasModel({chainId:e,gasPriceWei:t,pools:f,amountToken:n,quoteToken:a,l2GasDataProvider:i,providerConfig:r}){let o=i?await i.getGasData(r):void 0,s=f.usdPool,calculateL1GasFees=async t=>{let n={type:g.UNIVERSAL_ROUTER,recipient:"0x0000000000000000000000000000000000000001",deadlineOrPreviousBlockhash:100,slippageTolerance:new S.Percent(5,1e4)},i=e5.O$.from(0),r=e5.O$.from(0),d=e5.O$.from(0),u=[S.ChainId.OPTIMISM,S.ChainId.OPTIMISM_GOERLI,S.ChainId.BASE,S.ChainId.BASE_GOERLI];u.includes(e)?[i,r]=this.calculateOptimismToL1SecurityFee(t,n,o,e):(e==S.ChainId.ARBITRUM_ONE||e==S.ChainId.ARBITRUM_GOERLI)&&([i,r,d]=this.calculateArbitrumToL1SecurityFee(t,n,o,e));let l=U[e],p=amounts_CurrencyAmount.fromRawAmount(l,r.toString()),h=s.token0.address==l.address?s.token0Price:s.token1Price,b=h.quote(p),m=p;if(!a.equals(l)){let e=f.nativeAndQuoteTokenV3Pool;if(e){let t=e.token0.address==l.address?e.token0Price:e.token1Price;m=t.quote(p)}else P.info("Could not find a pool to convert the cost into the quote token"),m=amounts_CurrencyAmount.fromRawAmount(a,0)}return{gasUsedL1:i,gasUsedL1OnL2:d,gasCostL1USD:b,gasCostL1QuoteToken:m}},d=U[e],u=null;n.equals(d)||(u=f.nativeAndAmountTokenV3Pool);let l=s.token0.equals(d)?s.token1:s.token0;return{estimateGasCost:(i=>{var o;let p;let{totalGasCostNativeCurrency:h,baseGasUse:b}=this.estimateGas(i,t,e,r),m=gas_model_getQuoteThroughNativePool(e,h,s),y=f.nativeAndSpecifiedGasTokenV3Pool;if(y?p=gas_model_getQuoteThroughNativePool(e,h,y):(null===(o=null==r?void 0:r.gasToken)||void 0===o?void 0:o.equals(d))&&(p=h),a.equals(d))return{gasEstimate:b,gasCostInToken:h,gasCostInUSD:m,gasCostInGasToken:p};let T=f.nativeAndQuoteTokenV3Pool,g=null;if(T?g=gas_model_getQuoteThroughNativePool(e,h,T):P.info(`Unable to find ${d.symbol} pool with the quote token, ${a.symbol} to produce gas adjusted costs. Using amountToken to calculate gas costs.`),u){let e=new S.Price(i.amount.currency,i.quote.currency,i.amount.quotient,i.quote.quotient),t=u.token0.address==d.address,f=t?u.token0Price:u.token1Price,n=f.quote(h),a=e.quote(n);(null===g||a.lessThan(g.asFraction))&&(P.info({nativeAndAmountTokenPrice:f.toSignificant(6),gasCostInTermsOfQuoteToken:g?g.toExact():0,gasCostInTermsOfAmountToken:n.toExact(),executionPrice:e.toSignificant(6),syntheticGasCostInTermsOfQuoteToken:a.toSignificant(6)},"New gasCostInTermsOfQuoteToken calculated with synthetic quote token price is less than original"),g=a)}return null===g?(P.info(`Unable to find ${d.symbol} pool with the quote token, ${a.symbol}, or amount Token, ${n.symbol} to produce gas adjusted costs. Route will not account for gas.`),{gasEstimate:b,gasCostInToken:amounts_CurrencyAmount.fromRawAmount(a,0),gasCostInUSD:amounts_CurrencyAmount.fromRawAmount(l,0)}):{gasEstimate:b,gasCostInToken:g,gasCostInUSD:m,gasCostInGasToken:p}}).bind(this),calculateL1GasFees}}estimateGas(e,t,f,n){var a;let i=e5.O$.from(Math.max(1,x().sum(e.initializedTicksCrossedList))),r=e5.O$.from(e.route.pools.length),o=COST_PER_HOP(f).mul(r);r.eq(1)&&(o=o.add(SINGLE_HOP_OVERHEAD(f)));let s=TOKEN_OVERHEAD(f,e.route),d=COST_PER_INIT_TICK(f).mul(i),u=tm.mul(0),l=BASE_SWAP_COST(f).add(o).add(s).add(d).add(u).add(null!==(a=null==n?void 0:n.additionalGasOverhead)&&void 0!==a?a:e5.O$.from(0)),p=t.mul(l),h=U[f],b=amounts_CurrencyAmount.fromRawAmount(h,p.toString());return{totalGasCostNativeCurrency:b,totalInitializedTicksCrossed:i,baseGasUse:l}}calculateOptimismToL1SecurityFee(e,t,f,n){let{l1BaseFee:a,scalar:i,decimals:r,overhead:o}=f,s=e[0],d=s.tradeType==S.TradeType.EXACT_INPUT?s.amount.currency:s.quote.currency,u=s.tradeType==S.TradeType.EXACT_INPUT?s.quote.currency:s.amount.currency,l=methodParameters_buildTrade(d,u,s.tradeType,e),p=buildSwapMethodParameters(l,t,S.ChainId.OPTIMISM).calldata,h=getL2ToL1GasUsed(p,o,n),b=h.mul(a),m=b.mul(i),y=e5.O$.from(10).pow(r),T=m.div(y);return[h,T]}calculateArbitrumToL1SecurityFee(e,t,f,n){let a=e[0],i=a.tradeType==S.TradeType.EXACT_INPUT?a.amount.currency:a.quote.currency,r=a.tradeType==S.TradeType.EXACT_INPUT?a.quote.currency:a.amount.currency,o=methodParameters_buildTrade(i,r,a.tradeType,e),s=buildSwapMethodParameters(o,t,S.ChainId.ARBITRUM_ONE).calldata;return function(e,t,f){let{perL2TxFee:n,perL1CalldataFee:a,perArbGasTotal:i}=t,r=getL2ToL1GasUsed(e,e5.O$.from(0),f),o=r.mul(a).add(n),s=o.div(i);return[r,o,s]}(s,f,n)}};async function getBestSwapRoute(e,t,f,n,a,i,r,o,s){let d=Date.now(),{forceMixedRoutes:u}=i;if(u&&(P.info({forceMixedRoutes:u},"Forcing mixed routes by filtering out other route types"),!(f=x().filter(f,e=>e.protocol===Q.Protocol.MIXED))))return null;let l={};for(let e of f)l[e.percent]||(l[e.percent]=[]),l[e.percent].push(e);R.putMetric("BuildRouteWithValidQuoteObjects",Date.now()-d,p.Milliseconds);let h=await getBestSwapRouteBy(n,l,t,a,e=>e.quoteAdjustedForGas,i,r,o,s);if(!h)return null;let{routes:b}=h,m=x().reduce(b,(e,t)=>e.add(t.amount),amounts_CurrencyAmount.fromRawAmount(b[0].amount.currency,0)),y=e.subtract(m);return y.greaterThan(0)&&(P.info({missingAmount:y.quotient.toString()},"Optimal route's amounts did not equal exactIn/exactOut total. Adding missing amount to last route in array."),b[b.length-1].amount=b[b.length-1].amount.add(y)),P.info({routes:routeAmountsToString(b),numSplits:b.length,amount:e.toExact(),quote:h.quote.toExact(),quoteGasAdjusted:h.quoteGasAdjusted.toFixed(Math.min(h.quoteGasAdjusted.currency.decimals,2)),estimatedGasUSD:h.estimatedGasUsedUSD.toFixed(Math.min(h.estimatedGasUsedUSD.currency.decimals,2)),estimatedGasToken:h.estimatedGasUsedQuoteToken.toFixed(Math.min(h.estimatedGasUsedQuoteToken.currency.decimals,2))},`Found best swap route. ${b.length} split.`),h}async function getBestSwapRouteBy(e,t,f,n,a,i,r,o,s){var d;let u,l,h;let b=x().mapValues(t,t=>t.sort((t,f)=>e==S.TradeType.EXACT_INPUT?a(t).greaterThan(a(f))?-1:1:a(t).lessThan(a(f))?-1:1)),m=e==S.TradeType.EXACT_INPUT?(e,t)=>e.greaterThan(t):(e,t)=>e.lessThan(t),sumFn=e=>{let t=e[0];for(let f=1;f<e.length;f++)t=t.add(e[f]);return t},y=new(tc())(Array,(e,t)=>m(e.quote,t.quote)?-1:1,3),{minSplits:T,maxSplits:g,forceCrossProtocol:v}=i;if(!b[100]||T>1||v)P.info({percentToSortedQuotes:x().mapValues(b,e=>e.length)},"Did not find a valid route without any splits. Continuing search anyway.");else for(let e of(u=a(b[100][0]),l=[b[100][0]],b[100].slice(0,5)))y.push({quote:a(e),routes:[e]});let C=new(th());for(let e=f.length;e>=0;e--){let t=f[e];b[t]&&(C.enqueue({curRoutes:[b[t][0]],percentIndex:e,remainingPercent:100-t,special:!1}),b[t]&&b[t][1]&&C.enqueue({curRoutes:[b[t][1]],percentIndex:e,remainingPercent:100-t,special:!0}))}let I=1,E=Date.now();for(;C.size>0;){R.putMetric(`Split${I}Done`,Date.now()-E,p.Milliseconds),E=Date.now(),P.info({top5:x().map(Array.from(y.consume()),e=>`${e.quote.toExact()} (${x()(e.routes).map(e=>e.toString()).join(", ")})`),onQueue:C.size},`Top 3 with ${I} splits`),y.clear();let t=C.size;if(++I>=3&&l&&l.length<I-1)break;if(I>g){P.info("Max splits reached. Stopping search."),R.putMetric("MaxSplitsHitReached",1,p.Count);break}for(;t>0;){t--;let{remainingPercent:i,curRoutes:r,percentIndex:s,special:d}=C.dequeue();for(let t=s;t>=0;t--){let s=f[t];if(s>i||!b[s])continue;let h=b[s],g=findFirstRouteNotUsingUsedPools(r,h,v);if(!g)continue;let E=i-s,A=[...r,g];if(0==E&&I>=T){let t=x().map(A,e=>a(e)),f=sumFn(t),i=amounts_CurrencyAmount.fromRawAmount(f.currency,0);if(N.includes(n)){let e=A.every(e=>e.protocol==Q.Protocol.V3);if(void 0!=o&&e){let e=await o.calculateL1GasFees(A);i=e.gasCostL1QuoteToken}else throw Error("Can't compute L1 gas fees.")}let r=e==S.TradeType.EXACT_INPUT?f.subtract(i):f.add(i);y.push({quote:r,routes:A}),(!u||m(r,u))&&(u=r,l=A,d&&R.putMetric("BestSwapNotPickingBestForPercent",1,p.Count))}else C.enqueue({curRoutes:A,remainingPercent:E,percentIndex:t,special:d})}}}if(!l){P.info("Could not find a valid swap");return}let A=Date.now(),w=sumFn(x().map(l,e=>e.quoteAdjustedForGas)),O=x()(l).map(e=>e.gasEstimate).reduce((e,t)=>e.add(t),e5.O$.from(0));if(!tb[n]||!tb[n][0])throw Error(`Could not find a USD token for computing gas costs on ${n}`);let k=tb[n][0],M=k.decimals,B={gasUsedL1:e5.O$.from(0),gasUsedL1OnL2:e5.O$.from(0),gasCostL1USD:amounts_CurrencyAmount.fromRawAmount(k,0),gasCostL1QuoteToken:amounts_CurrencyAmount.fromRawAmount(null===(d=l[0])||void 0===d?void 0:d.quoteToken,0)};if(N.includes(n)){let e=l.every(e=>e.protocol==Q.Protocol.V3);if(void 0!=o&&e)B=await o.calculateL1GasFees(l);else throw Error("Can't compute L1 gas fees.")}let{gasUsedL1OnL2:D,gasCostL1USD:L,gasCostL1QuoteToken:U}=B,G=x()(l).map(e=>{let t=M-e.gasCostInUSD.currency.decimals;return 0==t?amounts_CurrencyAmount.fromRawAmount(k,e.gasCostInUSD.quotient):amounts_CurrencyAmount.fromRawAmount(k,_().multiply(e.gasCostInUSD.quotient,_().exponentiate(_().BigInt(10),_().BigInt(t))))}).value(),V=sumFn(G);if(V.currency!=L.currency){let e=M-L.currency.decimals;V=V.add(amounts_CurrencyAmount.fromRawAmount(k,_().multiply(L.quotient,_().exponentiate(_().BigInt(10),_().BigInt(e)))))}else V=V.add(L);P.info({estimatedGasUsedUSD:V.toExact(),normalizedUsdToken:k,routeUSDGasEstimates:x().map(l,e=>`${e.percent}% ${routes_routeToString(e.route)} ${e.gasCostInUSD.toExact()}`),flatL1GasCostUSD:L.toExact()},"USD gas estimates of best route");let q=sumFn(x().map(l,e=>e.gasCostInToken)).add(U);if(i.gasToken){if(l.some(e=>void 0===e.gasCostInGasToken))throw P.info({bestSwap:l,routingConfig:i},"Could not find gasCostInGasToken for a route in bestSwap"),Error("Can't compute estimatedGasUsedGasToken");h=sumFn(x().map(l,e=>e.gasCostInGasToken))}let H=sumFn(x().map(l,e=>e.quote));if(e==S.TradeType.EXACT_INPUT){let e=w.subtract(U);w=e}else{let e=w.add(U);w=e}let W=l.sort((e,t)=>t.amount.greaterThan(e.amount)?1:-1);return R.putMetric("PostSplitDone",Date.now()-A,p.Milliseconds),{quote:H,quoteGasAdjusted:w,estimatedGasUsed:O.add(D),estimatedGasUsedUSD:V,estimatedGasUsedQuoteToken:q,estimatedGasUsedGasToken:h,routes:r.getRouteWithQuotePortionAdjusted(e,W,s)}}let findFirstRouteNotUsingUsedPools=(e,t,f)=>{let n=new Set,a=x()(e).flatMap(e=>e.poolAddresses).value();for(let e of a)n.add(e);let i=new Set,r=x()(e).flatMap(e=>e.protocol).uniq().value();for(let e of r)i.add(e);for(let e of t){let{poolAddresses:t,protocol:a}=e;if(t.some(e=>n.has(e)))continue;let r=f&&1==i.size;if(!(r&&i.has(a)))return e}return null},ty={[S.ChainId.MAINNET]:[Z,$,ee,et,U[1],ef],[S.ChainId.OPTIMISM]:[eh,el,ec,ep],[S.ChainId.SEPOLIA]:[er,ei],[S.ChainId.OPTIMISM_GOERLI]:[eg,em,ey,eT],[S.ChainId.ARBITRUM_ONE]:[eE,ev,eI,eC],[S.ChainId.ARBITRUM_GOERLI]:[ew],[S.ChainId.POLYGON]:[eO,eS],[S.ChainId.POLYGON_MUMBAI]:[eR,ek],[S.ChainId.CELO]:[eG,eV,eF],[S.ChainId.CELO_ALFAJORES]:[eW,ej,eq],[S.ChainId.GNOSIS]:[ez,eK,eX],[S.ChainId.MOONBEAM]:[e$,eJ,e0,eZ],[S.ChainId.BNB]:[eB,eN,eL],[S.ChainId.AVALANCHE]:[e_,eQ],[S.ChainId.BASE]:[eY]};let SubcategorySelectionPools=class SubcategorySelectionPools{constructor(e,t){this.pools=e,this.poolsNeeded=t}hasEnoughPools(){return this.pools.length>=this.poolsNeeded}};async function getV3CandidatePools({tokenIn:e,tokenOut:t,routeType:f,routingConfig:n,subgraphProvider:a,tokenProvider:i,poolProvider:r,blockedTokenListProvider:o,chainId:s}){var d,u,l,h,b;let{blockNumber:m,v3PoolSelection:{topN:y,topNDirectSwaps:T,topNTokenInOut:g,topNSecondHop:v,topNSecondHopForTokenAddress:C,tokensToAvoidOnSecondHops:I,topNWithEachBaseToken:E,topNWithBaseToken:A}}=n,w=e.address.toLowerCase(),O=t.address.toLowerCase(),k=Date.now(),M=await a.getPools(e,t,{blockNumber:m});for(let e of(P.info({samplePools:M.slice(0,3)},"Got all pools from V3 subgraph provider"),M))e.token0.id=e.token0.id.toLowerCase(),e.token1.id=e.token1.id.toLowerCase();R.putMetric("V3SubgraphPoolsLoad",Date.now()-k,p.Milliseconds);let D=Date.now(),N=M;if(o)for(let e of(N=[],M)){let t=await o.hasTokenByAddress(e.token0.id),f=await o.hasTokenByAddress(e.token1.id);t||f||N.push(e)}let L=N.sort((e,t)=>t.tvlUSD-e.tvlUSD);P.info(`After filtering blocked tokens went from ${M.length} to ${L.length}.`);let G=new Set,addToAddressSet=e=>{x()(e).map(e=>e.id).forEach(e=>G.add(e))},V=null!==(d=ty[s])&&void 0!==d?d:[],q=x()(V).flatMap(e=>x()(L).filter(t=>{let f=e.address.toLowerCase();return t.token0.id==f&&t.token1.id==w||t.token1.id==f&&t.token0.id==w}).sortBy(e=>-e.tvlUSD).slice(0,E).value()).sortBy(e=>-e.tvlUSD).slice(0,A).value(),H=x()(V).flatMap(e=>x()(L).filter(t=>{let f=e.address.toLowerCase();return t.token0.id==f&&t.token1.id==O||t.token1.id==f&&t.token0.id==O}).sortBy(e=>-e.tvlUSD).slice(0,E).value()).sortBy(e=>-e.tvlUSD).slice(0,A).value(),W=x()(L).filter(e=>!G.has(e.id)&&(e.token0.id==w&&e.token1.id==O||e.token1.id==w&&e.token0.id==O)).slice(0,T).value();0==W.length&&T>0&&(W=x().map([B.FeeAmount.HIGH,B.FeeAmount.MEDIUM,B.FeeAmount.LOW,B.FeeAmount.LOWEST],f=>{let{token0:n,token1:a,poolAddress:i}=r.getPoolAddress(e,t,f);return{id:i,feeTier:unparseFeeAmount(f),liquidity:"10000",token0:{id:n.address},token1:{id:a.address},tvlETH:1e4,tvlUSD:1e4}})),addToAddressSet(W);let j=null===(u=U[s])||void 0===u?void 0:u.address.toLowerCase(),_=[];((null===(l=U[s])||void 0===l?void 0:l.symbol)==(null===(h=U[S.ChainId.MAINNET])||void 0===h?void 0:h.symbol)&&"WETH"!=t.symbol&&"WETH9"!=t.symbol&&"ETH"!=t.symbol||(null===(b=U[s])||void 0===b?void 0:b.symbol)==eS.symbol&&"MATIC"!=t.symbol&&"WMATIC"!=t.symbol)&&(_=x()(L).filter(e=>f==S.TradeType.EXACT_INPUT?e.token0.id==j&&e.token1.id==O||e.token1.id==j&&e.token0.id==O:e.token0.id==j&&e.token1.id==w||e.token1.id==j&&e.token0.id==w).slice(0,1).value()),addToAddressSet(_);let Y=x()(L).filter(e=>!G.has(e.id)).slice(0,y).value();addToAddressSet(Y);let X=x()(L).filter(e=>!G.has(e.id)&&(e.token0.id==w||e.token1.id==w)).slice(0,g).value();addToAddressSet(X);let K=x()(L).filter(e=>!G.has(e.id)&&(e.token0.id==O||e.token1.id==O)).slice(0,g).value();addToAddressSet(K);let z=x()(X).map(e=>w==e.token0.id?e.token1.id:e.token0.id).flatMap(e=>{var t;return x()(L).filter(t=>!G.has(t.id)&&!(null==I?void 0:I.includes(e.toLowerCase()))&&(t.token0.id==e||t.token1.id==e)).slice(0,null!==(t=null==C?void 0:C.get(e))&&void 0!==t?t:v).value()}).uniqBy(e=>e.id).value();addToAddressSet(z);let J=x()(K).map(e=>O==e.token0.id?e.token1.id:e.token0.id).flatMap(e=>{var t;return x()(L).filter(t=>!G.has(t.id)&&!(null==I?void 0:I.includes(e.toLowerCase()))&&(t.token0.id==e||t.token1.id==e)).slice(0,null!==(t=null==C?void 0:C.get(e))&&void 0!==t?t:v).value()}).uniqBy(e=>e.id).value();addToAddressSet(J);let Z=x()([...q,...H,...W,..._,...Y,...X,...K,...z,...J]).compact().uniqBy(e=>e.id).value(),$=x()(Z).flatMap(e=>[e.token0.id,e.token1.id]).compact().uniq().value();P.info(`Getting the ${$.length} tokens within the ${Z.length} V3 pools we are considering`);let ee=await i.getTokens($,{blockNumber:m}),printV3SubgraphPool=e=>{var t,f,n,a;return`${null!==(f=null===(t=ee.getTokenByAddress(e.token0.id))||void 0===t?void 0:t.symbol)&&void 0!==f?f:e.token0.id}/${null!==(a=null===(n=ee.getTokenByAddress(e.token1.id))||void 0===n?void 0:n.symbol)&&void 0!==a?a:e.token1.id}/${e.feeTier}`};P.info({topByBaseWithTokenIn:q.map(printV3SubgraphPool),topByBaseWithTokenOut:H.map(printV3SubgraphPool),topByTVL:Y.map(printV3SubgraphPool),topByTVLUsingTokenIn:X.map(printV3SubgraphPool),topByTVLUsingTokenOut:K.map(printV3SubgraphPool),topByTVLUsingTokenInSecondHops:z.map(printV3SubgraphPool),topByTVLUsingTokenOutSecondHops:J.map(printV3SubgraphPool),top2DirectSwap:W.map(printV3SubgraphPool),top2EthQuotePool:_.map(printV3SubgraphPool)},"V3 Candidate Pools");let et=x().map(Z,e=>{let t;let f=ee.getTokenByAddress(e.token0.id),n=ee.getTokenByAddress(e.token1.id);try{t=parseFeeAmount(e.feeTier)}catch(t){P.info({subgraphPool:e},`Dropping candidate pool for ${e.token0.id}/${e.token1.id}/${e.feeTier} because fee tier not supported`);return}if(!f||!n){P.info(`Dropping candidate pool for ${e.token0.id}/${e.token1.id}/${t} because ${f?e.token1.id:e.token0.id} not found by token provider`);return}return[f,n,t]}),ef=x().compact(et);R.putMetric("V3PoolsFilterLoad",Date.now()-D,p.Milliseconds);let en=Date.now(),ea=await r.getPools(ef,{blockNumber:m});R.putMetric("V3PoolsLoad",Date.now()-en,p.Milliseconds);let ei={protocol:Q.Protocol.V3,selections:{topByBaseWithTokenIn:q,topByBaseWithTokenOut:H,topByDirectSwapPool:W,topByEthQuoteTokenPool:_,topByTVL:Y,topByTVLUsingTokenIn:X,topByTVLUsingTokenOut:K,topByTVLUsingTokenInSecondHops:z,topByTVLUsingTokenOutSecondHops:J}};return{poolAccessor:ea,candidatePools:ei,subgraphPools:Z}}async function getV2CandidatePools({tokenIn:e,tokenOut:t,routeType:f,routingConfig:n,subgraphProvider:a,tokenProvider:i,poolProvider:r,blockedTokenListProvider:o,chainId:s}){var d;let{blockNumber:u,v2PoolSelection:{topN:l,topNDirectSwaps:h,topNTokenInOut:b,topNSecondHop:m,tokensToAvoidOnSecondHops:y,topNWithEachBaseToken:T,topNWithBaseToken:g}}=n,v=e.address.toLowerCase(),C=t.address.toLowerCase(),I=Date.now(),E=await a.getPools(e,t,{blockNumber:u});for(let e of E)e.token0.id=e.token0.id.toLowerCase(),e.token1.id=e.token1.id.toLowerCase();R.putMetric("V2SubgraphPoolsLoad",Date.now()-I,p.Milliseconds);let A=Date.now(),w=E.sort((e,t)=>t.reserve-e.reserve),O=new Set,k=[];if(h>0){let{token0:f,token1:n,poolAddress:a}=r.getPoolAddress(e,t);O.add(a.toLowerCase()),k=[{id:a,token0:{id:f.address},token1:{id:n.address},supply:1e4,reserve:1e4,reserveUSD:1e4}]}let M=U[s].address.toLowerCase(),B=new Map,D=new Map,N=null!==(d=ty[s])&&void 0!==d?d:[],L=new Set;N.forEach(e=>{let t=e.address.toLowerCase();L.add(t),B.set(t,new SubcategorySelectionPools([],T)),D.set(t,new SubcategorySelectionPools([],T))});let G=0,V=0,q=1;("WETH"==t.symbol||"WETH9"==t.symbol||"ETH"==t.symbol)&&(q=0);let H=[],W=[],j=[],_=[],Y=0;for(let e of w){if(Y+=1,G>=g&&V>=g&&H.length>=q&&_.length>=l&&W.length>=b&&j.length>=b)break;if(O.has(e.id))continue;if(o){let[t,f]=await Promise.all([o.hasTokenByAddress(e.token0.id),o.hasTokenByAddress(e.token1.id)]);if(t||f)continue}let t=B.get(e.token0.id);if(G<g&&t&&e.token0.id!=C&&e.token1.id==v){G+=1,O.add(e.id),W.length<b&&W.push(e),f===S.TradeType.EXACT_OUTPUT&&e.token0.id==M&&H.push(e),t.pools.push(e);continue}let n=B.get(e.token1.id);if(G<g&&n&&e.token0.id==v&&e.token1.id!=C){G+=1,O.add(e.id),W.length<b&&W.push(e),f===S.TradeType.EXACT_OUTPUT&&e.token1.id==M&&H.push(e),n.pools.push(e);continue}let a=D.get(e.token0.id);if(V<g&&a&&e.token0.id!=v&&e.token1.id==C){V+=1,O.add(e.id),j.length<b&&j.push(e),f===S.TradeType.EXACT_INPUT&&e.token0.id==M&&H.push(e),a.pools.push(e);continue}let i=D.get(e.token1.id);if(V<g&&i&&e.token0.id==C&&e.token1.id!=v){V+=1,O.add(e.id),j.length<b&&j.push(e),f===S.TradeType.EXACT_INPUT&&e.token1.id==M&&H.push(e),i.pools.push(e);continue}if(H.length<q&&(f===S.TradeType.EXACT_INPUT&&(e.token0.id==M&&e.token1.id==C||e.token1.id==M&&e.token0.id==C)||f===S.TradeType.EXACT_OUTPUT&&(e.token0.id==M&&e.token1.id==v||e.token1.id==M&&e.token0.id==v))){O.add(e.id),H.push(e);continue}if(_.length<l){O.add(e.id),_.push(e);continue}if(W.length<b&&(e.token0.id==v||e.token1.id==v)){O.add(e.id),W.push(e);continue}if(j.length<b&&(e.token0.id==C||e.token1.id==C)){O.add(e.id),j.push(e);continue}}R.putMetric("V2SubgraphLoopsInFirstIteration",Y,p.Count);let X=[];for(let e of B.values())X.push(...e.pools);let K=[];for(let e of D.values())K.push(...e.pools);let z=new Map,J=new Map,Z=W.filter(e=>v===e.token0.id?!(null==y?void 0:y.includes(e.token1.id.toLowerCase())):!(null==y?void 0:y.includes(e.token0.id.toLowerCase()))).map(e=>v===e.token0.id?e.token1.id:e.token0.id),$=j.filter(e=>C===e.token0.id?!(null==y?void 0:y.includes(e.token1.id.toLowerCase())):!(null==y?void 0:y.includes(e.token0.id.toLowerCase()))).map(e=>C===e.token0.id?e.token1.id:e.token0.id);for(let e of Z)z.set(e,new SubcategorySelectionPools([],m));for(let e of $)J.set(e,new SubcategorySelectionPools([],m));let ee=0;if(Z.length>0||$.length>0)for(let e of w){ee+=1;let t=!0;for(let e of z.values())if(!e.hasEnoughPools()){t=!1;break}let f=!0;for(let e of J.values())if(!e.hasEnoughPools()){f=!1;break}if(t&&f)break;if(O.has(e.id))continue;if(o){let[t,f]=await Promise.all([o.hasTokenByAddress(e.token0.id),o.hasTokenByAddress(e.token1.id)]);if(t||f)continue}let n=z.get(e.token0.id);if(n&&!n.hasEnoughPools()){O.add(e.id),n.pools.push(e);continue}let a=z.get(e.token1.id);if(a&&!a.hasEnoughPools()){O.add(e.id),a.pools.push(e);continue}let i=J.get(e.token0.id);if(i&&!i.hasEnoughPools()){O.add(e.id),i.pools.push(e);continue}let r=J.get(e.token1.id);if(r&&!r.hasEnoughPools()){O.add(e.id),r.pools.push(e);continue}}R.putMetric("V2SubgraphLoopsInSecondIteration",ee,p.Count);let et=[];for(let e of z.values())et.push(...e.pools);let ef=[];for(let e of J.values())ef.push(...e.pools);let en=x()([...X,...K,...k,...H,..._,...W,...j,...et,...ef]).uniqBy(e=>e.id).value(),ea=new Set;for(let e of en)ea.add(e.token0.id),ea.add(e.token1.id);let ei=Array.from(ea);P.info(`Getting the ${ei.length} tokens within the ${en.length} V2 pools we are considering`);let er=await i.getTokens(ei,{blockNumber:u}),printV2SubgraphPool=e=>{var t,f,n,a;return`${null!==(f=null===(t=er.getTokenByAddress(e.token0.id))||void 0===t?void 0:t.symbol)&&void 0!==f?f:e.token0.id}/${null!==(a=null===(n=er.getTokenByAddress(e.token1.id))||void 0===n?void 0:n.symbol)&&void 0!==a?a:e.token1.id}`};P.info({topByBaseWithTokenIn:X.map(printV2SubgraphPool),topByBaseWithTokenOut:K.map(printV2SubgraphPool),topByTVL:_.map(printV2SubgraphPool),topByTVLUsingTokenIn:W.map(printV2SubgraphPool),topByTVLUsingTokenOut:j.map(printV2SubgraphPool),topByTVLUsingTokenInSecondHops:et.map(printV2SubgraphPool),topByTVLUsingTokenOutSecondHops:ef.map(printV2SubgraphPool),top2DirectSwap:k.map(printV2SubgraphPool),top2EthQuotePool:H.map(printV2SubgraphPool)},"V2 Candidate pools");let eo=x().map(en,e=>{let t=er.getTokenByAddress(e.token0.id),f=er.getTokenByAddress(e.token1.id);if(!t||!f){P.info(`Dropping candidate pool for ${e.token0.id}/${e.token1.id}`);return}return[t,f]}),es=x().compact(eo);R.putMetric("V2PoolsFilterLoad",Date.now()-A,p.Milliseconds);let ed=Date.now(),eu=await r.getPools(es,n);R.putMetric("V2PoolsLoad",Date.now()-ed,p.Milliseconds);let el={protocol:Q.Protocol.V2,selections:{topByBaseWithTokenIn:X,topByBaseWithTokenOut:K,topByDirectSwapPool:k,topByEthQuoteTokenPool:H,topByTVL:_,topByTVLUsingTokenIn:W,topByTVLUsingTokenOut:j,topByTVLUsingTokenInSecondHops:et,topByTVLUsingTokenOutSecondHops:ef}};return{poolAccessor:eu,candidatePools:el,subgraphPools:en}}async function getMixedRouteCandidatePools({v3CandidatePools:e,v2CandidatePools:t,routingConfig:f,tokenProvider:n,v3poolProvider:a,v2poolProvider:i}){let r=Date.now(),[{subgraphPools:o,candidatePools:s},{subgraphPools:d,candidatePools:u}]=[e,t];R.putMetric("MixedSubgraphPoolsLoad",Date.now()-r,p.Milliseconds);let l=Date.now(),h=new Set([...u.selections.topByTVLUsingTokenIn,...u.selections.topByBaseWithTokenIn,...u.selections.topByTVLUsingTokenOut,...u.selections.topByBaseWithTokenOut,...u.selections.topByDirectSwapPool].map(e=>e.id)),b=x()(d).filter(e=>h.has(e.id)).sortBy(e=>-e.reserveUSD).value(),m=x()(o).sortBy(e=>-e.tvlUSD).value(),y=[];b.forEach(e=>{let t=m.find(t=>t.token0.id==e.token0.id&&t.token1.id==e.token1.id||t.token0.id==e.token1.id&&t.token1.id==e.token0.id);t?e.reserveUSD>t.tvlUSD&&(P.info({token0:e.token0.id,token1:e.token1.id,v2reserveUSD:e.reserveUSD,v3tvlUSD:t.tvlUSD},"MixedRoute heuristic, found a V2 pool with higher liquidity than its V3 counterpart"),y.push(e)):(P.info({token0:e.token0.id,token1:e.token1.id,v2reserveUSD:e.reserveUSD},"MixedRoute heuristic, found a V2 pool with no V3 counterpart"),y.push(e))}),P.info(y.length,"Number of V2 candidate pools that fit first heuristic");let T=[...y,...m],g=x()(T).flatMap(e=>[e.token0.id,e.token1.id]).compact().uniq().value();P.info(`Getting the ${g.length} tokens within the ${T.length} pools we are considering`);let v=await n.getTokens(g,f),C=x().map(m,e=>{let t;let f=v.getTokenByAddress(e.token0.id),n=v.getTokenByAddress(e.token1.id);try{t=parseFeeAmount(e.feeTier)}catch(t){P.info({subgraphPool:e},`Dropping candidate pool for ${e.token0.id}/${e.token1.id}/${e.feeTier} because fee tier not supported`);return}if(!f||!n){P.info(`Dropping candidate pool for ${e.token0.id}/${e.token1.id}/${t} because ${f?e.token1.id:e.token0.id} not found by token provider`);return}return[f,n,t]}),I=x().compact(C),E=x().map(y,e=>{let t=v.getTokenByAddress(e.token0.id),f=v.getTokenByAddress(e.token1.id);if(!t||!f){P.info(`Dropping candidate pool for ${e.token0.id}/${e.token1.id}`);return}return[t,f]}),A=x().compact(E);R.putMetric("MixedPoolsFilterLoad",Date.now()-l,p.Milliseconds);let w=Date.now(),[S,O]=await Promise.all([i.getPools(A,f),a.getPools(I,f)]);R.putMetric("MixedPoolsLoad",Date.now()-w,p.Milliseconds);let buildPoolsBySelection=e=>[...y.filter(t=>u.selections[e].map(e=>e.id).includes(t.id)),...s.selections[e]],k={protocol:Q.Protocol.MIXED,selections:{topByBaseWithTokenIn:buildPoolsBySelection("topByBaseWithTokenIn"),topByBaseWithTokenOut:buildPoolsBySelection("topByBaseWithTokenOut"),topByDirectSwapPool:buildPoolsBySelection("topByDirectSwapPool"),topByEthQuoteTokenPool:buildPoolsBySelection("topByEthQuoteTokenPool"),topByTVL:buildPoolsBySelection("topByTVL"),topByTVLUsingTokenIn:buildPoolsBySelection("topByTVLUsingTokenIn"),topByTVLUsingTokenOut:buildPoolsBySelection("topByTVLUsingTokenOut"),topByTVLUsingTokenInSecondHops:buildPoolsBySelection("topByTVLUsingTokenInSecondHops"),topByTVLUsingTokenOutSecondHops:buildPoolsBySelection("topByTVLUsingTokenOutSecondHops")}};return{V2poolAccessor:S,V3poolAccessor:O,candidatePools:k,subgraphPools:T}}let tT=e5.O$.from(135e3),tg=e5.O$.from(5e4);let V2HeuristicGasModelFactory=class V2HeuristicGasModelFactory extends IV2GasModelFactory{constructor(){super()}async buildGasModel({chainId:e,gasPriceWei:t,poolProvider:f,token:n,providerConfig:a}){let i=this.getHighestLiquidityUSDPool(e,f,a),r=(null==a?void 0:a.gasToken)&&!(null==a?void 0:a.gasToken.equals(U[e]))?this.getEthPool(e,a.gasToken,f,a):Promise.resolve(null),[o,s]=await Promise.all([i,r]),d=null;n.equals(U[e])||(d=await this.getEthPool(e,n,f,a));let u=o.token0.address==U[e].address?o.token1:o.token0;return{estimateGasCost:f=>{var i;let r;let{gasCostInEth:l,gasUse:p}=this.estimateGas(f,t,e,a),h=gas_model_getQuoteThroughNativePool(e,l,o);if(s?r=gas_model_getQuoteThroughNativePool(e,l,s):(null===(i=null==a?void 0:a.gasToken)||void 0===i?void 0:i.equals(U[e]))&&(r=l),n.equals(U[e]))return{gasEstimate:p,gasCostInToken:l,gasCostInUSD:h,gasCostInGasToken:r};if(!d)return P.info("Unable to find ETH pool with the quote token to produce gas adjusted costs. Route will not account for gas."),{gasEstimate:p,gasCostInToken:amounts_CurrencyAmount.fromRawAmount(n,0),gasCostInUSD:amounts_CurrencyAmount.fromRawAmount(u,0)};let b=gas_model_getQuoteThroughNativePool(e,l,d);return{gasEstimate:p,gasCostInToken:b,gasCostInUSD:h,gasCostInGasToken:r}}}}estimateGas(e,t,f,n){let a=e.route.pairs.length,i=tT.add(tg.mul(a-1));(null==n?void 0:n.additionalGasOverhead)&&(i=i.add(n.additionalGasOverhead));let r=t.mul(i),o=U[f],s=amounts_CurrencyAmount.fromRawAmount(o,r.toString());return{gasCostInEth:s,gasUse:i}}async getEthPool(e,t,f,n){let a=U[e],i=await f.getPools([[a,t]],n),r=i.getPool(a,t);return!r||r.reserve0.equalTo(0)||r.reserve1.equalTo(0)?(P.error({weth:a,token:t,reserve0:null==r?void 0:r.reserve0.toExact(),reserve1:null==r?void 0:r.reserve1.toExact()},`Could not find a valid WETH pool with ${t.symbol} for computing gas costs.`),null):r}async getHighestLiquidityUSDPool(e,t,f){let n=tb[e];if(!n)throw Error(`Could not find a USD token for computing gas costs on ${e}`);let a=x().map(n,t=>[t,U[e]]),i=await t.getPools(a,f),r=i.getAllPools(),o=x().filter(r,t=>t.reserve0.greaterThan(0)&&t.reserve1.greaterThan(0)&&(t.token0.equals(U[e])||t.token1.equals(U[e])));if(0==o.length)throw P.error({pools:o},"Could not find a USD/WETH pool for computing gas costs."),Error("Can't find USD/WETH pool for computing gas costs.");let s=x().maxBy(o,t=>t.token0.equals(U[e])?parseFloat(t.reserve0.toSignificant(2)):parseFloat(t.reserve1.toSignificant(2)));return s}};let MixedRouteHeuristicGasModelFactory=class MixedRouteHeuristicGasModelFactory extends IOnChainGasModelFactory{constructor(){super()}async buildGasModel({chainId:e,gasPriceWei:t,pools:f,quoteToken:n,v2poolProvider:a,providerConfig:i}){let r;let o=U[e],s=f.usdPool,d=s.token0.equals(o)?s.token1:s.token0;return!n.equals(o)&&a&&(r=await getV2NativePool(n,a,i)),{estimateGasCost:(a=>{var u;let l;let{totalGasCostNativeCurrency:p,baseGasUse:h}=this.estimateGas(a,t,e,i),b=gas_model_getQuoteThroughNativePool(e,p,s),m=f.nativeAndSpecifiedGasTokenV3Pool;if(m?l=gas_model_getQuoteThroughNativePool(e,p,m):(null===(u=null==i?void 0:i.gasToken)||void 0===u?void 0:u.equals(o))&&(l=p),n.equals(o))return{gasEstimate:h,gasCostInToken:p,gasCostInUSD:b,gasCostInGasToken:l};let y=f.nativeAndQuoteTokenV3Pool;if(!y&&!r)return P.info(`Unable to find ${o.symbol} pool with the quote token, ${n.symbol} to produce gas adjusted costs. Route will not account for gas.`),{gasEstimate:h,gasCostInToken:amounts_CurrencyAmount.fromRawAmount(n,0),gasCostInUSD:amounts_CurrencyAmount.fromRawAmount(d,0)};let T=(!y||_().equal(y.liquidity,_().BigInt(0)))&&r?r:y,g=gas_model_getQuoteThroughNativePool(e,p,T);return{gasEstimate:h,gasCostInToken:g,gasCostInUSD:b,gasCostInGasToken:l}}).bind(this)}}estimateGas(e,t,f,n){let a=e5.O$.from(Math.max(1,x().sum(e.initializedTicksCrossedList))),i=e5.O$.from(0),r=e.route,o=(0,Q.partitionMixedRouteByProtocol)(r);o.map(e=>{e.every(e=>e instanceof B.Pool)?i=(i=i.add(BASE_SWAP_COST(f))).add(COST_PER_HOP(f).mul(e.length)):e.every(e=>e instanceof Y.sO)&&(i=(i=i.add(tT)).add(tg.mul(e.length-1)))});let s=COST_PER_INIT_TICK(f).mul(a),d=tm.mul(0);i=i.add(s).add(d),(null==n?void 0:n.additionalGasOverhead)&&(i=i.add(n.additionalGasOverhead));let u=t.mul(i),l=U[f],p=amounts_CurrencyAmount.fromRawAmount(l,u.toString());return{totalGasCostNativeCurrency:p,totalInitializedTicksCrossed:a,baseGasUse:i}}};let BaseQuoter=class BaseQuoter{constructor(e,t,f,n,a){this.tokenProvider=e,this.chainId=t,this.protocol=f,this.blockedTokenListProvider=n,this.tokenValidatorProvider=a}getRoutesThenQuotes(e,t,f,n,a,i,r,o,s,d,u){return this.getRoutes(e,t,r,o,s).then(e=>(1==e.routes.length&&(R.putMetric(`${this.protocol}QuoterSingleRoute`,1,p.Count),a=[100],n=[f]),e.routes.length>0?R.putMetric(`${this.protocol}QuoterRoutesFound`,e.routes.length,p.Count):R.putMetric(`${this.protocol}QuoterNoRoutesFound`,e.routes.length,p.Count),this.getQuotes(e.routes,n,a,i,o,s,e.candidatePools,d,u)))}async applyTokenValidatorToPools(e,t){if(!this.tokenValidatorProvider)return e;P.info(`Running token validator on ${e.length} pools`);let f=x().flatMap(e,e=>[e.token0,e.token1]),n=await this.tokenValidatorProvider.validateTokens(f),a=x().filter(e,e=>{let f=n.getValidationByToken(e.token0),a=n.getValidationByToken(e.token1),i=t(e.token0,f),r=t(e.token1,a);return(i||r)&&P.info(`Dropping pool ${poolToString(e)} because token is invalid. ${e.token0.symbol}: ${f}, ${e.token1.symbol}: ${a}`),!i&&!r});return a}};let route_with_valid_quote_V2RouteWithValidQuote=class route_with_valid_quote_V2RouteWithValidQuote{constructor({amount:e,rawQuote:t,percent:f,route:n,gasModel:a,quoteToken:i,tradeType:r,v2PoolProvider:o}){this.protocol=Q.Protocol.V2,this.amount=e,this.rawQuote=t,this.quote=amounts_CurrencyAmount.fromRawAmount(i,t.toString()),this.percent=f,this.route=n,this.gasModel=a,this.quoteToken=i,this.tradeType=r;let{gasEstimate:s,gasCostInToken:d,gasCostInUSD:u,gasCostInGasToken:l}=this.gasModel.estimateGasCost(this);if(this.gasCostInToken=d,this.gasCostInUSD=u,this.gasEstimate=s,this.gasCostInGasToken=l,this.tradeType==S.TradeType.EXACT_INPUT){let e=this.quote.subtract(d);this.quoteAdjustedForGas=e}else{let e=this.quote.add(d);this.quoteAdjustedForGas=e}this.poolAddresses=x().map(n.pairs,e=>o.getPoolAddress(e.token0,e.token1).poolAddress),this.tokenPath=this.route.path}toString(){return`${this.percent.toFixed(2)}% QuoteGasAdj[${this.quoteAdjustedForGas.toExact()}] Quote[${this.quote.toExact()}] Gas[${this.gasEstimate.toString()}] = ${routes_routeToString(this.route)}`}};let route_with_valid_quote_V3RouteWithValidQuote=class route_with_valid_quote_V3RouteWithValidQuote{constructor({amount:e,rawQuote:t,sqrtPriceX96AfterList:f,initializedTicksCrossedList:n,quoterGasEstimate:a,percent:i,route:r,gasModel:o,quoteToken:s,tradeType:d,v3PoolProvider:u}){this.protocol=Q.Protocol.V3,this.amount=e,this.rawQuote=t,this.sqrtPriceX96AfterList=f,this.initializedTicksCrossedList=n,this.quoterGasEstimate=a,this.quote=amounts_CurrencyAmount.fromRawAmount(s,t.toString()),this.percent=i,this.route=r,this.gasModel=o,this.quoteToken=s,this.tradeType=d;let{gasEstimate:l,gasCostInToken:p,gasCostInUSD:h,gasCostInGasToken:b}=this.gasModel.estimateGasCost(this);if(this.gasCostInToken=p,this.gasCostInUSD=h,this.gasEstimate=l,this.gasCostInGasToken=b,this.tradeType==S.TradeType.EXACT_INPUT){let e=this.quote.subtract(p);this.quoteAdjustedForGas=e}else{let e=this.quote.add(p);this.quoteAdjustedForGas=e}this.poolAddresses=x().map(r.pools,e=>u.getPoolAddress(e.token0,e.token1,e.fee).poolAddress),this.tokenPath=this.route.tokenPath}toString(){return`${this.percent.toFixed(2)}% QuoteGasAdj[${this.quoteAdjustedForGas.toExact()}] Quote[${this.quote.toExact()}] Gas[${this.gasEstimate.toString()}] = ${routes_routeToString(this.route)}`}};let route_with_valid_quote_MixedRouteWithValidQuote=class route_with_valid_quote_MixedRouteWithValidQuote{constructor({amount:e,rawQuote:t,sqrtPriceX96AfterList:f,initializedTicksCrossedList:n,quoterGasEstimate:a,percent:i,route:r,mixedRouteGasModel:o,quoteToken:s,tradeType:d,v3PoolProvider:u,v2PoolProvider:l}){this.protocol=Q.Protocol.MIXED,this.amount=e,this.rawQuote=t,this.sqrtPriceX96AfterList=f,this.initializedTicksCrossedList=n,this.quoterGasEstimate=a,this.quote=amounts_CurrencyAmount.fromRawAmount(s,t.toString()),this.percent=i,this.route=r,this.gasModel=o,this.quoteToken=s,this.tradeType=d;let{gasEstimate:p,gasCostInToken:h,gasCostInUSD:b,gasCostInGasToken:m}=this.gasModel.estimateGasCost(this);if(this.gasCostInToken=h,this.gasCostInUSD=b,this.gasEstimate=p,this.gasCostInGasToken=m,this.tradeType==S.TradeType.EXACT_INPUT){let e=this.quote.subtract(h);this.quoteAdjustedForGas=e}else{let e=this.quote.add(h);this.quoteAdjustedForGas=e}this.poolAddresses=x().map(r.pools,e=>e instanceof B.Pool?u.getPoolAddress(e.token0,e.token1,e.fee).poolAddress:l.getPoolAddress(e.token0,e.token1).poolAddress),this.tokenPath=this.route.path}toString(){return`${this.percent.toFixed(2)}% QuoteGasAdj[${this.quoteAdjustedForGas.toExact()}] Quote[${this.quote.toExact()}] Gas[${this.gasEstimate.toString()}] = ${routes_routeToString(this.route)}`}};function computeAllV2Routes(e,t,f,n){return computeAllRoutes(e,t,(e,t,f)=>new V2Route(e,t,f),f,n)}function computeAllRoutes(e,t,f,n,a){var i;let r=Array(n.length).fill(!1),o=[],computeRoutes=(e,t,i,r,s,d)=>{if(!(i.length>a)){if(i.length>0&&i[i.length-1].involvesToken(t)){o.push(f([...i],e,t));return}for(let f=0;f<n.length;f++){if(r[f])continue;let a=n[f],o=d||e;if(!a.involvesToken(o))continue;let u=a.token0.equals(o)?a.token1:a.token0;s.has(u.address.toLowerCase())||(s.add(u.address.toLowerCase()),i.push(a),r[f]=!0,computeRoutes(e,t,i,r,s,u),r[f]=!1,i.pop(),s.delete(u.address.toLowerCase()))}}};return computeRoutes(e,t,[],r,new Set([e.address.toLowerCase()])),P.info({routes:o.map(routes_routeToString),pools:n.map(poolToString)},`Computed ${o.length} possible routes for type ${null===(i=o[0])||void 0===i?void 0:i.protocol}.`),o}let MixedQuoter=class MixedQuoter extends BaseQuoter{constructor(e,t,f,n,a,i,r,o,s){super(i,r,Q.Protocol.MIXED,o,s),this.v3SubgraphProvider=e,this.v3PoolProvider=t,this.v2SubgraphProvider=f,this.v2PoolProvider=n,this.onChainQuoteProvider=a}async getRoutes(e,t,f,n,a){let i=Date.now();if(n!=S.TradeType.EXACT_INPUT)throw Error("Mixed route quotes are not supported for EXACT_OUTPUT");let[r,o]=f,{V2poolAccessor:s,V3poolAccessor:d,candidatePools:u}=await getMixedRouteCandidatePools({v3CandidatePools:r,v2CandidatePools:o,tokenProvider:this.tokenProvider,v3poolProvider:this.v3PoolProvider,v2poolProvider:this.v2PoolProvider,routingConfig:a,chainId:this.chainId}),l=d.getAllPools(),h=s.getAllPools(),b=[...l,...h],m=await this.applyTokenValidatorToPools(b,(f,n)=>!(!n||n==y.STF&&(f.equals(e)||f.equals(t)))&&(n==y.FOT||n==y.STF)),{maxSwapsPerPath:T}=a,g=function(e,t,f,n){let a=computeAllRoutes(e,t,(e,t,f)=>new MixedRoute(e,t,f),f,n);return a.filter(e=>!e.pools.every(e=>e instanceof B.Pool)&&!e.pools.every(e=>e instanceof Y.sO))}(e,t,m,T);return R.putMetric("MixedGetRoutesLoad",Date.now()-i,p.Milliseconds),{routes:g,candidatePools:u}}async getQuotes(e,t,f,n,a,i,r,o){let s=Date.now();if(P.info("Starting to get mixed quotes"),void 0===o)throw Error("GasModel for MixedRouteWithValidQuote is required to getQuotes");if(0==e.length)return{routesWithValidQuotes:[],candidatePools:r};let d=this.onChainQuoteProvider.getQuotesManyExactIn.bind(this.onChainQuoteProvider),u=Date.now();P.info(`Getting quotes for mixed for ${e.length} routes with ${t.length} amounts per route.`);let{routesWithQuotes:l}=await d(t,e,{blockNumber:i.blockNumber});R.putMetric("MixedQuotesLoad",Date.now()-u,p.Milliseconds),R.putMetric("MixedQuotesFetched",x()(l).map(([,e])=>e.length).sum(),p.Count);let h=[];for(let e of l){let[t,i]=e;for(let e=0;e<i.length;e++){let r=f[e],s=i[e],{quote:d,amount:u,sqrtPriceX96AfterList:l,initializedTicksCrossedList:p,gasEstimate:b}=s;if(!d||!l||!p||!b){P.debug({route:routes_routeToString(t),amountQuote:s},"Dropping a null mixed quote for route.");continue}let m=new route_with_valid_quote_MixedRouteWithValidQuote({route:t,rawQuote:d,amount:u,percent:r,sqrtPriceX96AfterList:l,initializedTicksCrossedList:p,quoterGasEstimate:b,mixedRouteGasModel:o,quoteToken:n,tradeType:a,v3PoolProvider:this.v3PoolProvider,v2PoolProvider:this.v2PoolProvider});h.push(m)}}return R.putMetric("MixedGetQuotesLoad",Date.now()-s,p.Milliseconds),{routesWithValidQuotes:h,candidatePools:r}}};let V2Quoter=class V2Quoter extends BaseQuoter{constructor(e,t,f,n,a,i,r,o){super(a,i,Q.Protocol.V2,r,o),this.v2SubgraphProvider=e,this.v2PoolProvider=t,this.v2QuoteProvider=f,this.v2GasModelFactory=n}async getRoutes(e,t,f,n,a){let i=Date.now(),{poolAccessor:r,candidatePools:o}=f,s=r.getAllPools(),d=await this.applyTokenValidatorToPools(s,(f,n)=>!(!n||n==y.STF&&(f.equals(e)||f.equals(t)))&&n==y.STF),{maxSwapsPerPath:u}=a,l=computeAllV2Routes(e,t,d,u);return R.putMetric("V2GetRoutesLoad",Date.now()-i,p.Milliseconds),{routes:l,candidatePools:o}}async getQuotes(e,t,f,n,a,i,r,o,s){let d=Date.now();if(P.info("Starting to get V2 quotes"),void 0===s)throw Error("GasPriceWei for V2Routes is required to getQuotes");if(0==t.length||!t.every(e=>e.currency.equals(t[0].currency)))throw Error("Amounts must have at least one amount and must be same token");let u=t[0].currency,l=i.gasToken?(await this.tokenProvider.getTokens([i.gasToken])).getTokenByAddress(i.gasToken):void 0;if(0==e.length)return{routesWithValidQuotes:[],candidatePools:r};let h=a==S.TradeType.EXACT_INPUT?this.v2QuoteProvider.getQuotesManyExactIn.bind(this.v2QuoteProvider):this.v2QuoteProvider.getQuotesManyExactOut.bind(this.v2QuoteProvider),b=Date.now();P.info(`Getting quotes for V2 for ${e.length} routes with ${t.length} amounts per route.`);let{routesWithQuotes:m}=await h(t,e,i),y=await this.v2GasModelFactory.buildGasModel({chainId:this.chainId,gasPriceWei:s,poolProvider:this.v2PoolProvider,token:n,providerConfig:{...i,additionalGasOverhead:NATIVE_OVERHEAD(this.chainId,u,n),gasToken:l}});R.putMetric("V2QuotesLoad",Date.now()-b,p.Milliseconds),R.putMetric("V2QuotesFetched",x()(m).map(([,e])=>e.length).sum(),p.Count);let T=[];for(let e of m){let[t,i]=e;for(let e=0;e<i.length;e++){let r=f[e],o=i[e],{quote:s,amount:d}=o;if(!s){P.debug({route:routes_routeToString(t),amountQuote:o},"Dropping a null V2 quote for route.");continue}let u=new route_with_valid_quote_V2RouteWithValidQuote({route:t,rawQuote:s,amount:d,percent:r,gasModel:y,quoteToken:n,tradeType:a,v2PoolProvider:this.v2PoolProvider});T.push(u)}}return R.putMetric("V2GetQuotesLoad",Date.now()-d,p.Milliseconds),{routesWithValidQuotes:T,candidatePools:r}}async refreshRoutesThenGetQuotes(e,t,f,n,a,i,r,o,s){let d=[];return f.forEach(e=>e.pairs.forEach(e=>d.push([e.token0,e.token1]))),this.v2PoolProvider.getPools(d,o).then(f=>{let d=computeAllV2Routes(e,t,f.getAllPools(),o.maxSwapsPerPath);return this.getQuotes(d,n,a,i,r,o,void 0,void 0,s)})}};let V3Quoter=class V3Quoter extends BaseQuoter{constructor(e,t,f,n,a,i,r){super(n,a,Q.Protocol.V3,i,r),this.v3SubgraphProvider=e,this.v3PoolProvider=t,this.onChainQuoteProvider=f}async getRoutes(e,t,f,n,a){let i=Date.now(),{poolAccessor:r,candidatePools:o}=f,s=r.getAllPools(),d=await this.applyTokenValidatorToPools(s,(f,n)=>!(!n||n==y.STF&&(f.equals(e)||f.equals(t)))&&(n==y.FOT||n==y.STF)),{maxSwapsPerPath:u}=a,l=computeAllRoutes(e,t,(e,t,f)=>new router_V3Route(e,t,f),d,u);return R.putMetric("V3GetRoutesLoad",Date.now()-i,p.Milliseconds),{routes:l,candidatePools:o}}async getQuotes(e,t,f,n,a,i,r,o){let s=Date.now();if(P.info("Starting to get V3 quotes"),void 0===o)throw Error("GasModel for V3RouteWithValidQuote is required to getQuotes");if(0==e.length)return{routesWithValidQuotes:[],candidatePools:r};let d=a==S.TradeType.EXACT_INPUT?this.onChainQuoteProvider.getQuotesManyExactIn.bind(this.onChainQuoteProvider):this.onChainQuoteProvider.getQuotesManyExactOut.bind(this.onChainQuoteProvider),u=Date.now();P.info(`Getting quotes for V3 for ${e.length} routes with ${t.length} amounts per route.`);let{routesWithQuotes:l}=await d(t,e,{blockNumber:i.blockNumber});R.putMetric("V3QuotesLoad",Date.now()-u,p.Milliseconds),R.putMetric("V3QuotesFetched",x()(l).map(([,e])=>e.length).sum(),p.Count);let h=[];for(let e of l){let[t,i]=e;for(let e=0;e<i.length;e++){let r=f[e],s=i[e],{quote:d,amount:u,sqrtPriceX96AfterList:l,initializedTicksCrossedList:p,gasEstimate:b}=s;if(!d||!l||!p||!b){P.debug({route:routes_routeToString(t),amountQuote:s},"Dropping a null V3 quote for route.");continue}let m=new route_with_valid_quote_V3RouteWithValidQuote({route:t,rawQuote:d,amount:u,percent:r,sqrtPriceX96AfterList:l,initializedTicksCrossedList:p,quoterGasEstimate:b,gasModel:o,quoteToken:n,tradeType:a,v3PoolProvider:this.v3PoolProvider});h.push(m)}}return R.putMetric("V3GetQuotesLoad",Date.now()-s,p.Milliseconds),{routesWithValidQuotes:h,candidatePools:r}}};let LowerCaseStringArray=class LowerCaseStringArray extends Array{constructor(...e){super(...e.map(e=>e.toLowerCase()))}};let AlphaRouter=class AlphaRouter{constructor({chainId:e,provider:t,multicall2Provider:f,v3PoolProvider:n,onChainQuoteProvider:a,v2PoolProvider:i,v2QuoteProvider:r,v2SubgraphProvider:o,tokenProvider:s,blockedTokenListProvider:d,v3SubgraphProvider:u,gasPriceProvider:l,v3GasModelFactory:p,v2GasModelFactory:h,mixedRouteGasModelFactory:b,swapRouterProvider:m,optimismGasDataProvider:y,tokenValidatorProvider:T,arbitrumGasDataProvider:g,simulator:v,routeCachingProvider:C,tokenPropertiesProvider:I,portionProvider:E}){let A;if(this.chainId=e,this.provider=t,this.multicall2Provider=null!=f?f:new UniswapMulticallProvider(e,t,375e3),this.v3PoolProvider=null!=n?n:new CachingV3PoolProvider(this.chainId,new V3PoolProvider(ID_TO_CHAIN_ID(e),this.multicall2Provider),new NodeJSCache(new(e9())({stdTTL:360,useClones:!1}))),this.simulator=v,this.routeCachingProvider=C,a)this.onChainQuoteProvider=a;else switch(e){case S.ChainId.OPTIMISM:case S.ChainId.OPTIMISM_GOERLI:this.onChainQuoteProvider=new OnChainQuoteProvider(e,t,this.multicall2Provider,{retries:2,minTimeout:100,maxTimeout:1e3},{multicallChunk:110,gasLimitPerCall:12e5,quoteMinSuccessRate:.1},{gasLimitOverride:3e6,multicallChunk:45},{gasLimitOverride:3e6,multicallChunk:45},{baseBlockOffset:-10,rollback:{enabled:!0,attemptsBeforeRollback:1,rollbackBlockOffset:-10}});break;case S.ChainId.BASE:case S.ChainId.BASE_GOERLI:this.onChainQuoteProvider=new OnChainQuoteProvider(e,t,this.multicall2Provider,{retries:2,minTimeout:100,maxTimeout:1e3},{multicallChunk:80,gasLimitPerCall:12e5,quoteMinSuccessRate:.1},{gasLimitOverride:3e6,multicallChunk:45},{gasLimitOverride:3e6,multicallChunk:45},{baseBlockOffset:-10,rollback:{enabled:!0,attemptsBeforeRollback:1,rollbackBlockOffset:-10}});break;case S.ChainId.ARBITRUM_ONE:case S.ChainId.ARBITRUM_GOERLI:this.onChainQuoteProvider=new OnChainQuoteProvider(e,t,this.multicall2Provider,{retries:2,minTimeout:100,maxTimeout:1e3},{multicallChunk:10,gasLimitPerCall:12e6,quoteMinSuccessRate:.1},{gasLimitOverride:3e7,multicallChunk:6},{gasLimitOverride:3e7,multicallChunk:6});break;case S.ChainId.CELO:case S.ChainId.CELO_ALFAJORES:this.onChainQuoteProvider=new OnChainQuoteProvider(e,t,this.multicall2Provider,{retries:2,minTimeout:100,maxTimeout:1e3},{multicallChunk:10,gasLimitPerCall:5e6,quoteMinSuccessRate:.1},{gasLimitOverride:5e6,multicallChunk:5},{gasLimitOverride:625e4,multicallChunk:4});break;default:this.onChainQuoteProvider=new OnChainQuoteProvider(e,t,this.multicall2Provider,{retries:2,minTimeout:100,maxTimeout:1e3},{multicallChunk:210,gasLimitPerCall:705e3,quoteMinSuccessRate:.15},{gasLimitOverride:2e6,multicallChunk:70})}T?this.tokenValidatorProvider=T:this.chainId===S.ChainId.MAINNET&&(this.tokenValidatorProvider=new TokenValidatorProvider(this.chainId,this.multicall2Provider,new NodeJSCache(new(e9())({stdTTL:3e4,useClones:!1})))),I?this.tokenPropertiesProvider=I:this.tokenPropertiesProvider=new TokenPropertiesProvider(this.chainId,new NodeJSCache(new(e9())({stdTTL:86400,useClones:!1})),new OnChainTokenFeeFetcher(this.chainId,t)),this.v2PoolProvider=null!=i?i:new CachingV2PoolProvider(e,new V2PoolProvider(e,this.multicall2Provider,this.tokenPropertiesProvider),new NodeJSCache(new(e9())({stdTTL:60,useClones:!1}))),this.v2QuoteProvider=null!=r?r:new V2QuoteProvider,this.blockedTokenListProvider=null!=d?d:new CachingTokenListProvider(e,tu,new NodeJSCache(new(e9())({stdTTL:3600,useClones:!1}))),this.tokenProvider=null!=s?s:new CachingTokenProviderWithFallback(e,new NodeJSCache(new(e9())({stdTTL:3600,useClones:!1})),new CachingTokenListProvider(e,e8,new NodeJSCache(new(e9())({stdTTL:3600,useClones:!1}))),new TokenProvider(e,this.multicall2Provider)),this.portionProvider=null!=E?E:new PortionProvider;let w=ID_TO_NETWORK_NAME(e);o?this.v2SubgraphProvider=o:this.v2SubgraphProvider=new V2SubgraphProviderWithFallBacks([new CachingV2SubgraphProvider(e,new uri_subgraph_provider_URISubgraphProvider(e,`https://cloudflare-ipfs.com/ipns/api.uniswap.org/v1/pools/v2/${w}.json`,void 0,0),new NodeJSCache(new(e9())({stdTTL:300,useClones:!1}))),new StaticV2SubgraphProvider(e)]),u?this.v3SubgraphProvider=u:this.v3SubgraphProvider=new V3SubgraphProviderWithFallBacks([new CachingV3SubgraphProvider(e,new uri_subgraph_provider_URISubgraphProvider(e,`https://cloudflare-ipfs.com/ipns/api.uniswap.org/v1/pools/v3/${w}.json`,void 0,0),new NodeJSCache(new(e9())({stdTTL:300,useClones:!1}))),new StaticV3SubgraphProvider(e,this.v3PoolProvider)]),A=e6.r.isProvider(this.provider)?new OnChainGasPriceProvider(e,new EIP1559GasPriceProvider(this.provider),new LegacyGasPriceProvider(this.provider)):new ETHGasStationInfoProvider("https://ethgasstation.info/api/ethgasAPI.json"),this.gasPriceProvider=null!=l?l:new CachingGasStationProvider(e,A,new NodeJSCache(new(e9())({stdTTL:7,useClones:!1}))),this.v3GasModelFactory=null!=p?p:new V3HeuristicGasModelFactory,this.v2GasModelFactory=null!=h?h:new V2HeuristicGasModelFactory,this.mixedRouteGasModelFactory=null!=b?b:new MixedRouteHeuristicGasModelFactory,this.swapRouterProvider=null!=m?m:new SwapRouterProvider(this.multicall2Provider,this.chainId),(e===S.ChainId.OPTIMISM||e===S.ChainId.BASE)&&(this.l2GasDataProvider=null!=y?y:new OptimismGasDataProvider(e,this.multicall2Provider)),(e===S.ChainId.ARBITRUM_ONE||e===S.ChainId.ARBITRUM_GOERLI)&&(this.l2GasDataProvider=null!=g?g:new ArbitrumGasDataProvider(e,this.provider)),this.v2Quoter=new V2Quoter(this.v2SubgraphProvider,this.v2PoolProvider,this.v2QuoteProvider,this.v2GasModelFactory,this.tokenProvider,this.chainId,this.blockedTokenListProvider,this.tokenValidatorProvider),this.v3Quoter=new V3Quoter(this.v3SubgraphProvider,this.v3PoolProvider,this.onChainQuoteProvider,this.tokenProvider,this.chainId,this.blockedTokenListProvider,this.tokenValidatorProvider),this.mixedQuoter=new MixedQuoter(this.v3SubgraphProvider,this.v3PoolProvider,this.v2SubgraphProvider,this.v2PoolProvider,this.onChainQuoteProvider,this.tokenProvider,this.chainId,this.blockedTokenListProvider,this.tokenValidatorProvider)}async routeToRatio(e,t,f,n,a,i=DEFAULT_ROUTING_CONFIG_BY_CHAIN(this.chainId)){let r,o;t.currency.wrapped.sortsBefore(e.currency.wrapped)&&([e,t]=[t,e]);let s=this.calculateOptimalRatio(f,f.pool.sqrtRatioX96,!0);f.pool.tickCurrent>f.tickUpper?r=!0:f.pool.tickCurrent<f.tickLower?r=!1:(r=new S.Fraction(e.quotient,t.quotient).greaterThan(s))||(s=s.invert());let[d,u]=r?[e,t]:[t,e],l=s,p=f.pool,h=r?f.pool.token0Price:f.pool.token1Price,b=null,m=!1,y=0;for(;!m;){let e;if(++y>n.maxIterations)return P.info("max iterations exceeded"),{status:T.NO_ROUTE_FOUND,error:"max iterations exceeded"};let t=function(e,t,f,n){let a=new S.Fraction(f.quotient).subtract(e.multiply(n.quotient)).divide(e.multiply(t).add(1));if(a.lessThan(0))throw Error("routeToRatio: insufficient input token amount");return amounts_CurrencyAmount.fromRawAmount(f.currency,a.quotient)}(l,h,d,u);if(t.equalTo(0))return P.info("no swap needed: amountToSwap = 0"),{status:T.NO_SWAP_NEEDED};if(!(b=await this.route(t,u.currency,S.TradeType.EXACT_INPUT,void 0,{...DEFAULT_ROUTING_CONFIG_BY_CHAIN(this.chainId),...i,protocols:[Q.Protocol.V3,Q.Protocol.V2]})))return P.info("no route found from this.route()"),{status:T.NO_ROUTE_FOUND,error:"no route found"};let a=d.subtract(b.trade.inputAmount),o=u.add(b.trade.outputAmount),g=a.divide(o);if(b.route.forEach(t=>{t.protocol===Q.Protocol.V3&&t.route.pools.forEach((n,a)=>{n.token0.equals(f.pool.token0)&&n.token1.equals(f.pool.token1)&&n.fee===f.pool.fee&&(e=_().BigInt(t.sqrtPriceX96AfterList[a].toString()),l=this.calculateOptimalRatio(f,_().BigInt(e.toString()),r))})}),e||(l=s),(m=g.equalTo(l)||this.absoluteValue(g.asFraction.divide(l).subtract(1)).lessThan(n.ratioErrorTolerance))&&e&&(p=new B.Pool(f.pool.token0,f.pool.token1,f.pool.fee,e,f.pool.liquidity,B.TickMath.getTickAtSqrtRatio(e),f.pool.tickDataProvider)),h=b.trade.outputAmount.divide(b.trade.inputAmount),P.info({exchangeRate:h.asFraction.toFixed(18),optimalRatio:l.asFraction.toFixed(18),newRatio:g.asFraction.toFixed(18),inputBalanceUpdated:a.asFraction.toFixed(18),outputBalanceUpdated:o.asFraction.toFixed(18),ratioErrorTolerance:n.ratioErrorTolerance.toFixed(18),iterationN:y.toString()},"QuoteToRatio Iteration Parameters"),h.equalTo(0))return P.info("exchangeRate to 0"),{status:T.NO_ROUTE_FOUND,error:"insufficient liquidity to swap to optimal ratio"}}return b?(a&&(o=await this.buildSwapAndAddMethodParameters(b.trade,a,{initialBalanceTokenIn:d,initialBalanceTokenOut:u,preLiquidityPosition:f})),{status:T.SUCCESS,result:{...b,methodParameters:o,optimalRatio:l,postSwapTargetPool:p}}):{status:T.NO_ROUTE_FOUND,error:"no route found"}}async route(e,t,f,n,a={}){var i,r,o,s;let d,u,l;let h=e;if(f===S.TradeType.EXACT_OUTPUT){let t=this.portionProvider.getPortionAmount(e,f,n);t&&t.greaterThan(Q.ZERO)&&(e=e.add(t))}let{currencyIn:b,currencyOut:y}=this.determineCurrencyInOutFromTradeType(f,e,t),T=b.wrapped,g=y.wrapped;R.setProperty("chainId",this.chainId),R.setProperty("pair",`${T.symbol}/${g.symbol}`),R.setProperty("tokenIn",T.address),R.setProperty("tokenOut",g.address),R.setProperty("tradeType",f===S.TradeType.EXACT_INPUT?"ExactIn":"ExactOut"),R.putMetric(`QuoteRequestedForChain${this.chainId}`,1,p.Count);let v=null!==(i=a.blockNumber)&&void 0!==i?i:this.getBlockNumberPromise(),C=x().merge({useCachedRoutes:!0,writeToCachedRoutes:!0,optimisticCachedRoutes:!1},DEFAULT_ROUTING_CONFIG_BY_CHAIN(this.chainId),a,{blockNumber:v});C.debugRouting&&P.warn(`Finalized routing config is ${JSON.stringify(C)}`);let I=await this.getGasPriceWei(await v,await a.blockNumber),E=t.wrapped,A=C.gasToken?(await this.tokenProvider.getTokens([C.gasToken])).getTokenByAddress(C.gasToken):void 0,w={...C,blockNumber:v,additionalGasOverhead:NATIVE_OVERHEAD(this.chainId,e.currency,t),gasToken:A},[O,k]=await this.getGasModels(I,e.currency.wrapped,E,w),M=Array.from(new Set(C.protocols).values()),B=null!==(r=C.overwriteCacheMode)&&void 0!==r?r:await (null===(o=this.routeCachingProvider)||void 0===o?void 0:o.getCacheMode(this.chainId,e,E,f,M));C.useCachedRoutes&&B!==m.Darkmode&&(d=await (null===(s=this.routeCachingProvider)||void 0===s?void 0:s.getCachedRoute(this.chainId,e,E,f,M,await v,C.optimisticCachedRoutes))),R.putMetric(C.useCachedRoutes?"GetQuoteUsingCachedRoutes":"GetQuoteNotUsingCachedRoutes",1,p.Count),B&&C.useCachedRoutes&&B!==m.Darkmode&&!d?(R.putMetric(`GetCachedRoute_miss_${B}`,1,p.Count),P.info({tokenIn:T.symbol,tokenInAddress:T.address,tokenOut:g.symbol,tokenOutAddress:g.address,cacheMode:B,amount:e.toExact(),chainId:this.chainId,tradeType:this.tradeTypeStr(f)},`GetCachedRoute miss ${B} for ${this.tokenPairSymbolTradeTypeChainId(T,g,f)}`)):d&&C.useCachedRoutes&&(R.putMetric(`GetCachedRoute_hit_${B}`,1,p.Count),P.info({tokenIn:T.symbol,tokenInAddress:T.address,tokenOut:g.symbol,tokenOutAddress:g.address,cacheMode:B,amount:e.toExact(),chainId:this.chainId,tradeType:this.tradeTypeStr(f)},`GetCachedRoute hit ${B} for ${this.tokenPairSymbolTradeTypeChainId(T,g,f)}`));let D=Promise.resolve(null);d&&(D=this.getSwapRouteFromCache(d,await v,e,E,f,C,O,k,I,n));let N=Promise.resolve(null);d&&B===m.Livemode||(N=this.getSwapRouteFromChain(e,T,g,M,E,f,C,O,k,I,n));let[L,U]=await Promise.all([D,N]),G=!1;if(B===m.Livemode&&L?(P.info(`CacheMode is ${B}, and we are using swapRoute from cache`),G=!0,u=L):(P.info(`CacheMode is ${B}, and we are using materialized swapRoute`),u=U),B===m.Tapcompare&&L&&U){let t=U.quote.subtract(L.quote),n=U.quoteGasAdjusted.subtract(L.quoteGasAdjusted),a=U.estimatedGasUsed.sub(L.estimatedGasUsed);if(!t.equalTo(0)||!(n.equalTo(0)||a.eq(0))){let i=n.divide(U.quoteGasAdjusted).multiply(100);R.putMetric("TapcompareCachedRoute_quoteGasAdjustedDiffPercent",Number(i.toExact()),p.Percent),P.warn({quoteFromChain:U.quote.toExact(),quoteFromCache:L.quote.toExact(),quoteDiff:t.toExact(),quoteGasAdjustedFromChain:U.quoteGasAdjusted.toExact(),quoteGasAdjustedFromCache:L.quoteGasAdjusted.toExact(),quoteGasAdjustedDiff:n.toExact(),gasUsedFromChain:U.estimatedGasUsed.toString(),gasUsedFromCache:L.estimatedGasUsed.toString(),gasUsedDiff:a.toString(),routesFromChain:U.routes.toString(),routesFromCache:L.routes.toString(),amount:e.toExact(),originalAmount:null==d?void 0:d.originalAmount,pair:this.tokenPairSymbolTradeTypeChainId(T,g,f),blockNumber:v},`Comparing quotes between Chain and Cache for ${this.tokenPairSymbolTradeTypeChainId(T,g,f)}`)}}if(!u)return null;let{quote:V,quoteGasAdjusted:q,estimatedGasUsed:H,routes:W,estimatedGasUsedQuoteToken:j,estimatedGasUsedUSD:_,estimatedGasUsedGasToken:Y}=u;if(this.routeCachingProvider&&C.writeToCachedRoutes&&B!==m.Darkmode&&U){let t=CachedRoutes.fromRoutesWithValidQuotes(U.routes,this.chainId,T,g,M.sort(),await v,f,e.toExact());t?this.routeCachingProvider.setCachedRoute(t,e).then(e=>{R.putMetric(`SetCachedRoute_${e?"success":"rejected"}`,1,p.Count)}).catch(e=>{P.error({reason:e,tokenPair:this.tokenPairSymbolTradeTypeChainId(T,g,f)},"SetCachedRoute failure"),R.putMetric("SetCachedRoute_failure",1,p.Count)}):R.putMetric("SetCachedRoute_unnecessary",1,p.Count)}R.putMetric(`QuoteFoundForChain${this.chainId}`,1,p.Count);let X=methodParameters_buildTrade(b,y,f,W);n&&(l=buildSwapMethodParameters(X,n,this.chainId));let K=f===S.TradeType.EXACT_OUTPUT?h:V,z=this.portionProvider.getPortionAmount(K,f,n),J=this.portionProvider.getPortionQuoteAmount(f,V,e,z),Z=this.portionProvider.getQuote(f,V,J),$=this.portionProvider.getQuoteGasAdjusted(f,q,J),ee=this.portionProvider.getQuoteGasAndPortionAdjusted(f,q,z),et={quote:Z,quoteGasAdjusted:$,estimatedGasUsed:H,estimatedGasUsedQuoteToken:j,estimatedGasUsedUSD:_,estimatedGasUsedGasToken:Y,gasPriceWei:I,route:W,trade:X,methodParameters:l,blockNumber:e5.O$.from(await v),hitsCachedRoute:G,portionAmount:z,quoteGasAndPortionAdjusted:ee};if(n&&n.simulate&&l&&l.calldata){if(!this.simulator)throw Error("Simulator not initialized!");P.info(JSON.stringify({swapConfig:n,methodParameters:l,providerConfig:w},null,2),"Starting simulation");let f=n.simulate.fromAddress,a=Date.now(),i=await this.simulator.simulate(f,n,et,e,amounts_CurrencyAmount.fromRawAmount(t,V.quotient.toString()),this.l2GasDataProvider?await this.l2GasDataProvider.getGasData(w):void 0,w);return R.putMetric("SimulateTransaction",Date.now()-a,p.Milliseconds),i}return et}async getSwapRouteFromCache(e,t,f,n,a,i,r,o,s,d){let u,l;P.info({protocols:e.protocolsCovered,tradeType:e.tradeType,cachedBlockNumber:e.blockNumber,quoteBlockNumber:t},"Routing across CachedRoute");let h=[],b=e.routes.filter(e=>e.protocol===Q.Protocol.V3),m=e.routes.filter(e=>e.protocol===Q.Protocol.V2),y=e.routes.filter(e=>e.protocol===Q.Protocol.MIXED);if(e.routes.length>1)[u,l]=this.getAmountDistribution(f,i);else{if(1!=e.routes.length)return Promise.resolve(null);[u,l]=[[100],[f]]}if(b.length>0){let e=b.map(e=>e.route);R.putMetric("SwapRouteFromCache_V3_GetQuotes_Request",1,p.Count);let t=Date.now();h.push(this.v3Quoter.getQuotes(e,l,u,n,a,i,void 0,r).then(e=>(R.putMetric("SwapRouteFromCache_V3_GetQuotes_Load",Date.now()-t,p.Milliseconds),e)))}if(m.length>0){let t=m.map(e=>e.route);R.putMetric("SwapRouteFromCache_V2_GetQuotes_Request",1,p.Count);let f=Date.now();h.push(this.v2Quoter.refreshRoutesThenGetQuotes(e.tokenIn,e.tokenOut,t,l,u,n,a,i,s).then(e=>(R.putMetric("SwapRouteFromCache_V2_GetQuotes_Load",Date.now()-f,p.Milliseconds),e)))}if(y.length>0){let e=y.map(e=>e.route);R.putMetric("SwapRouteFromCache_Mixed_GetQuotes_Request",1,p.Count);let t=Date.now();h.push(this.mixedQuoter.getQuotes(e,l,u,n,a,i,void 0,o).then(e=>(R.putMetric("SwapRouteFromCache_Mixed_GetQuotes_Load",Date.now()-t,p.Milliseconds),e)))}let T=await Promise.all(h),g=x().flatMap(T,e=>e.routesWithValidQuotes);return getBestSwapRoute(f,u,g,a,this.chainId,i,this.portionProvider,r,d)}async getSwapRouteFromChain(e,t,f,n,a,i,r,o,s,d,u){let[l,h]=this.getAmountDistribution(e,r),b=0===n.length,m=n.includes(Q.Protocol.V3),y=n.includes(Q.Protocol.V2),T=D.includes(this.chainId),g=n.includes(Q.Protocol.MIXED)||b&&T,v=[S.ChainId.MAINNET,S.ChainId.GOERLI].includes(this.chainId)&&i===S.TradeType.EXACT_INPUT,C=Date.now(),I=Promise.resolve(void 0);(m||b||g&&v)&&(I=getV3CandidatePools({tokenIn:t,tokenOut:f,tokenProvider:this.tokenProvider,blockedTokenListProvider:this.blockedTokenListProvider,poolProvider:this.v3PoolProvider,routeType:i,subgraphProvider:this.v3SubgraphProvider,routingConfig:r,chainId:this.chainId}).then(e=>(R.putMetric("GetV3CandidatePools",Date.now()-C,p.Milliseconds),e)));let E=Promise.resolve(void 0);(T&&(y||b)||g&&v)&&(E=getV2CandidatePools({tokenIn:t,tokenOut:f,tokenProvider:this.tokenProvider,blockedTokenListProvider:this.blockedTokenListProvider,poolProvider:this.v2PoolProvider,routeType:i,subgraphProvider:this.v2SubgraphProvider,routingConfig:r,chainId:this.chainId}).then(e=>(R.putMetric("GetV2CandidatePools",Date.now()-C,p.Milliseconds),e)));let A=[];if(m||b){P.info({protocols:n,tradeType:i},"Routing across V3"),R.putMetric("SwapRouteFromChain_V3_GetRoutesThenQuotes_Request",1,p.Count);let s=Date.now();A.push(I.then(n=>this.v3Quoter.getRoutesThenQuotes(t,f,e,h,l,a,n,i,r,o).then(e=>(R.putMetric("SwapRouteFromChain_V3_GetRoutesThenQuotes_Load",Date.now()-s,p.Milliseconds),e))))}if(T&&(y||b)){P.info({protocols:n,tradeType:i},"Routing across V2"),R.putMetric("SwapRouteFromChain_V2_GetRoutesThenQuotes_Request",1,p.Count);let o=Date.now();A.push(E.then(n=>this.v2Quoter.getRoutesThenQuotes(t,f,e,h,l,a,n,i,r,void 0,d).then(e=>(R.putMetric("SwapRouteFromChain_V2_GetRoutesThenQuotes_Load",Date.now()-o,p.Milliseconds),e))))}if(g&&v){P.info({protocols:n,tradeType:i},"Routing across MixedRoutes"),R.putMetric("SwapRouteFromChain_Mixed_GetRoutesThenQuotes_Request",1,p.Count);let o=Date.now();A.push(Promise.all([I,E]).then(([n,d])=>this.mixedQuoter.getRoutesThenQuotes(t,f,e,h,l,a,[n,d],i,r,s).then(e=>(R.putMetric("SwapRouteFromChain_Mixed_GetRoutesThenQuotes_Load",Date.now()-o,p.Milliseconds),e))))}let w=await Promise.all(A),O=[],k=[];if(w.forEach(e=>{O.push(...e.routesWithValidQuotes),e.candidatePools&&k.push(e.candidatePools)}),0===O.length)return P.info({allRoutesWithValidQuotes:O},"Received no valid quotes"),null;let M=await getBestSwapRoute(e,l,O,i,this.chainId,r,this.portionProvider,o,u);return M&&this.emitPoolSelectionMetrics(M,k),M}tradeTypeStr(e){return e===S.TradeType.EXACT_INPUT?"ExactIn":"ExactOut"}tokenPairSymbolTradeTypeChainId(e,t,f){return`${e.symbol}/${t.symbol}/${this.tradeTypeStr(f)}/${this.chainId}`}determineCurrencyInOutFromTradeType(e,t,f){return e===S.TradeType.EXACT_INPUT?{currencyIn:t.currency,currencyOut:f}:{currencyIn:f,currencyOut:t.currency}}async getGasPriceWei(e,t){let f=Date.now(),{gasPriceWei:n}=await this.gasPriceProvider.getGasPrice(e,t);return R.putMetric("GasPriceLoad",Date.now()-f,p.Milliseconds),n}async getGasModels(e,t,f,n){let a=Date.now(),i=getHighestLiquidityV3USDPool(this.chainId,this.v3PoolProvider,n),r=U[this.chainId],o=f.equals(r)?Promise.resolve(null):getHighestLiquidityV3NativePool(f,this.v3PoolProvider,n),s=t.equals(r)?Promise.resolve(null):getHighestLiquidityV3NativePool(t,this.v3PoolProvider,n),d=(null==n?void 0:n.gasToken)&&!(null==n?void 0:n.gasToken.equals(r))?getHighestLiquidityV3NativePool(null==n?void 0:n.gasToken,this.v3PoolProvider,n):Promise.resolve(null),[u,l,h,b]=await Promise.all([i,o,s,d]),m={usdPool:u,nativeAndQuoteTokenV3Pool:l,nativeAndAmountTokenV3Pool:h,nativeAndSpecifiedGasTokenV3Pool:b},y=this.v3GasModelFactory.buildGasModel({chainId:this.chainId,gasPriceWei:e,pools:m,amountToken:t,quoteToken:f,v2poolProvider:this.v2PoolProvider,l2GasDataProvider:this.l2GasDataProvider,providerConfig:n}),T=this.mixedRouteGasModelFactory.buildGasModel({chainId:this.chainId,gasPriceWei:e,pools:m,amountToken:t,quoteToken:f,v2poolProvider:this.v2PoolProvider,providerConfig:n}),[g,v]=await Promise.all([y,T]);return R.putMetric("GasModelCreation",Date.now()-a,p.Milliseconds),[g,v]}getAmountDistribution(e,t){let{distributionPercent:f}=t,n=[],a=[];for(let t=1;t<=100/f;t++)n.push(t*f),a.push(e.multiply(new S.Fraction(t*f,100)));return[n,a]}async buildSwapAndAddMethodParameters(e,t,f){let{swapOptions:{recipient:n,slippageTolerance:a,deadline:i,inputTokenPermit:r},addLiquidityOptions:o}=t,s=f.preLiquidityPosition,d=f.initialBalanceTokenIn.subtract(e.inputAmount),u=f.initialBalanceTokenOut.add(e.outputAmount),l=await this.swapRouterProvider.getApprovalType(d,u),p=d.currency.wrapped.sortsBefore(u.currency.wrapped);return{...Q.SwapRouter.swapAndAddCallParameters(e,{recipient:n,slippageTolerance:a,deadlineOrPreviousBlockhash:i,inputTokenPermit:r},B.Position.fromAmounts({pool:s.pool,tickLower:s.tickLower,tickUpper:s.tickUpper,amount0:p?d.quotient.toString():u.quotient.toString(),amount1:p?u.quotient.toString():d.quotient.toString(),useFullPrecision:!1}),o,l.approvalTokenIn,l.approvalTokenOut),to:addresses_SWAP_ROUTER_02_ADDRESSES(this.chainId)}}emitPoolSelectionMetrics(e,t){let f=new Set,{routes:n}=e;for(let e of(x()(n).flatMap(e=>{let{poolAddresses:t}=e;return t}).forEach(e=>{f.add(e.toLowerCase())}),t)){let{protocol:t}=e;x().forIn(e.selections,(e,n)=>{let a=x().findLastIndex(e,e=>f.has(e.id.toLowerCase()))+1;R.putMetric(x().capitalize(`${t}${n}`),a,p.Count)})}let a=!1,i=!1,r=!1;for(let e of n)e.protocol===Q.Protocol.V3&&(a=!0),e.protocol===Q.Protocol.V2&&(i=!0),e.protocol===Q.Protocol.MIXED&&(r=!0);r&&(a||i)?a&&i?(R.putMetric("MixedAndV3AndV2SplitRoute",1,p.Count),R.putMetric(`MixedAndV3AndV2SplitRouteForChain${this.chainId}`,1,p.Count)):a?(R.putMetric("MixedAndV3SplitRoute",1,p.Count),R.putMetric(`MixedAndV3SplitRouteForChain${this.chainId}`,1,p.Count)):i&&(R.putMetric("MixedAndV2SplitRoute",1,p.Count),R.putMetric(`MixedAndV2SplitRouteForChain${this.chainId}`,1,p.Count)):a&&i?(R.putMetric("V3AndV2SplitRoute",1,p.Count),R.putMetric(`V3AndV2SplitRouteForChain${this.chainId}`,1,p.Count)):r?n.length>1?(R.putMetric("MixedSplitRoute",1,p.Count),R.putMetric(`MixedSplitRouteForChain${this.chainId}`,1,p.Count)):(R.putMetric("MixedRoute",1,p.Count),R.putMetric(`MixedRouteForChain${this.chainId}`,1,p.Count)):a?n.length>1?(R.putMetric("V3SplitRoute",1,p.Count),R.putMetric(`V3SplitRouteForChain${this.chainId}`,1,p.Count)):(R.putMetric("V3Route",1,p.Count),R.putMetric(`V3RouteForChain${this.chainId}`,1,p.Count)):i&&(n.length>1?(R.putMetric("V2SplitRoute",1,p.Count),R.putMetric(`V2SplitRouteForChain${this.chainId}`,1,p.Count)):(R.putMetric("V2Route",1,p.Count),R.putMetric(`V2RouteForChain${this.chainId}`,1,p.Count)))}calculateOptimalRatio(e,t,f){let n=B.TickMath.getSqrtRatioAtTick(e.tickUpper),a=B.TickMath.getSqrtRatioAtTick(e.tickLower);if(_().greaterThan(t,n)||_().lessThan(t,a))return new S.Fraction(0,1);let i=_().BigInt("1"+"0".repeat(18)),r=new S.Fraction(B.SqrtPriceMath.getAmount0Delta(t,n,i,!0),B.SqrtPriceMath.getAmount1Delta(t,a,i,!0));return f||(r=r.invert()),r}async userHasSufficientBalance(e,t,f,n){try{let a;let i=t===S.TradeType.EXACT_INPUT?f:n;if(i.currency.isNative)a=await this.provider.getBalance(e);else{let t=Erc20_factory_Erc20_factory.connect(i.currency.address,this.provider);a=await t.balanceOf(e)}return a.gte(e5.O$.from(i.quotient.toString()))}catch(e){return P.error(e,"Error while checking user balance"),!1}}absoluteValue(e){let t=_().lessThan(e.numerator,_().BigInt(0))?_().unaryMinus(e.numerator):e.numerator,f=_().lessThan(e.denominator,_().BigInt(0))?_().unaryMinus(e.denominator):e.denominator;return new S.Fraction(t,f)}getBlockNumberPromise(){return e3()(async(e,t)=>(t>1&&P.info(`Get block number attempt ${t}`),this.provider.getBlockNumber()),{retries:2,minTimeout:100,maxTimeout:1e3})}};let tv=[{inputs:[{internalType:"uint256",name:"deadline",type:"uint256"}],name:"AllowanceExpired",type:"error"},{inputs:[],name:"ExcessiveInvalidation",type:"error"},{inputs:[{internalType:"uint256",name:"amount",type:"uint256"}],name:"InsufficientAllowance",type:"error"},{inputs:[{internalType:"uint256",name:"maxAmount",type:"uint256"}],name:"InvalidAmount",type:"error"},{inputs:[],name:"InvalidContractSignature",type:"error"},{inputs:[],name:"InvalidNonce",type:"error"},{inputs:[],name:"InvalidSignature",type:"error"},{inputs:[],name:"InvalidSignatureLength",type:"error"},{inputs:[],name:"InvalidSigner",type:"error"},{inputs:[],name:"LengthMismatch",type:"error"},{inputs:[{internalType:"uint256",name:"signatureDeadline",type:"uint256"}],name:"SignatureExpired",type:"error"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"token",type:"address"},{indexed:!0,internalType:"address",name:"spender",type:"address"},{indexed:!1,internalType:"uint160",name:"amount",type:"uint160"},{indexed:!1,internalType:"uint48",name:"expiration",type:"uint48"}],name:"Approval",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!1,internalType:"address",name:"token",type:"address"},{indexed:!1,internalType:"address",name:"spender",type:"address"}],name:"Lockdown",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"token",type:"address"},{indexed:!0,internalType:"address",name:"spender",type:"address"},{indexed:!1,internalType:"uint48",name:"newNonce",type:"uint48"},{indexed:!1,internalType:"uint48",name:"oldNonce",type:"uint48"}],name:"NonceInvalidation",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"token",type:"address"},{indexed:!0,internalType:"address",name:"spender",type:"address"},{indexed:!1,internalType:"uint160",name:"amount",type:"uint160"},{indexed:!1,internalType:"uint48",name:"expiration",type:"uint48"},{indexed:!1,internalType:"uint48",name:"nonce",type:"uint48"}],name:"Permit",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!1,internalType:"uint256",name:"word",type:"uint256"},{indexed:!1,internalType:"uint256",name:"mask",type:"uint256"}],name:"UnorderedNonceInvalidation",type:"event"},{inputs:[],name:"DOMAIN_SEPARATOR",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"",type:"address"},{internalType:"address",name:"",type:"address"},{internalType:"address",name:"",type:"address"}],name:"allowance",outputs:[{internalType:"uint160",name:"amount",type:"uint160"},{internalType:"uint48",name:"expiration",type:"uint48"},{internalType:"uint48",name:"nonce",type:"uint48"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"token",type:"address"},{internalType:"address",name:"spender",type:"address"},{internalType:"uint160",name:"amount",type:"uint160"},{internalType:"uint48",name:"expiration",type:"uint48"}],name:"approve",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"token",type:"address"},{internalType:"address",name:"spender",type:"address"},{internalType:"uint48",name:"newNonce",type:"uint48"}],name:"invalidateNonces",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"wordPos",type:"uint256"},{internalType:"uint256",name:"mask",type:"uint256"}],name:"invalidateUnorderedNonces",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"address",name:"token",type:"address"},{internalType:"address",name:"spender",type:"address"}],internalType:"struct IAllowanceTransfer.TokenSpenderPair[]",name:"approvals",type:"tuple[]"}],name:"lockdown",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"",type:"address"},{internalType:"uint256",name:"",type:"uint256"}],name:"nonceBitmap",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"},{components:[{components:[{internalType:"address",name:"token",type:"address"},{internalType:"uint160",name:"amount",type:"uint160"},{internalType:"uint48",name:"expiration",type:"uint48"},{internalType:"uint48",name:"nonce",type:"uint48"}],internalType:"struct IAllowanceTransfer.PermitDetails[]",name:"details",type:"tuple[]"},{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"sigDeadline",type:"uint256"}],internalType:"struct IAllowanceTransfer.PermitBatch",name:"permitBatch",type:"tuple"},{internalType:"bytes",name:"signature",type:"bytes"}],name:"permit",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"},{components:[{components:[{internalType:"address",name:"token",type:"address"},{internalType:"uint160",name:"amount",type:"uint160"},{internalType:"uint48",name:"expiration",type:"uint48"},{internalType:"uint48",name:"nonce",type:"uint48"}],internalType:"struct IAllowanceTransfer.PermitDetails",name:"details",type:"tuple"},{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"sigDeadline",type:"uint256"}],internalType:"struct IAllowanceTransfer.PermitSingle",name:"permitSingle",type:"tuple"},{internalType:"bytes",name:"signature",type:"bytes"}],name:"permit",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{components:[{internalType:"address",name:"token",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],internalType:"struct ISignatureTransfer.TokenPermissions",name:"permitted",type:"tuple"},{internalType:"uint256",name:"nonce",type:"uint256"},{internalType:"uint256",name:"deadline",type:"uint256"}],internalType:"struct ISignatureTransfer.PermitTransferFrom",name:"permit",type:"tuple"},{components:[{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"requestedAmount",type:"uint256"}],internalType:"struct ISignatureTransfer.SignatureTransferDetails",name:"transferDetails",type:"tuple"},{internalType:"address",name:"owner",type:"address"},{internalType:"bytes",name:"signature",type:"bytes"}],name:"permitTransferFrom",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{components:[{internalType:"address",name:"token",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],internalType:"struct ISignatureTransfer.TokenPermissions[]",name:"permitted",type:"tuple[]"},{internalType:"uint256",name:"nonce",type:"uint256"},{internalType:"uint256",name:"deadline",type:"uint256"}],internalType:"struct ISignatureTransfer.PermitBatchTransferFrom",name:"permit",type:"tuple"},{components:[{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"requestedAmount",type:"uint256"}],internalType:"struct ISignatureTransfer.SignatureTransferDetails[]",name:"transferDetails",type:"tuple[]"},{internalType:"address",name:"owner",type:"address"},{internalType:"bytes",name:"signature",type:"bytes"}],name:"permitTransferFrom",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{components:[{internalType:"address",name:"token",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],internalType:"struct ISignatureTransfer.TokenPermissions",name:"permitted",type:"tuple"},{internalType:"uint256",name:"nonce",type:"uint256"},{internalType:"uint256",name:"deadline",type:"uint256"}],internalType:"struct ISignatureTransfer.PermitTransferFrom",name:"permit",type:"tuple"},{components:[{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"requestedAmount",type:"uint256"}],internalType:"struct ISignatureTransfer.SignatureTransferDetails",name:"transferDetails",type:"tuple"},{internalType:"address",name:"owner",type:"address"},{internalType:"bytes32",name:"witness",type:"bytes32"},{internalType:"string",name:"witnessTypeString",type:"string"},{internalType:"bytes",name:"signature",type:"bytes"}],name:"permitWitnessTransferFrom",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{components:[{internalType:"address",name:"token",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],internalType:"struct ISignatureTransfer.TokenPermissions[]",name:"permitted",type:"tuple[]"},{internalType:"uint256",name:"nonce",type:"uint256"},{internalType:"uint256",name:"deadline",type:"uint256"}],internalType:"struct ISignatureTransfer.PermitBatchTransferFrom",name:"permit",type:"tuple"},{components:[{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"requestedAmount",type:"uint256"}],internalType:"struct ISignatureTransfer.SignatureTransferDetails[]",name:"transferDetails",type:"tuple[]"},{internalType:"address",name:"owner",type:"address"},{internalType:"bytes32",name:"witness",type:"bytes32"},{internalType:"string",name:"witnessTypeString",type:"string"},{internalType:"bytes",name:"signature",type:"bytes"}],name:"permitWitnessTransferFrom",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"uint160",name:"amount",type:"uint160"},{internalType:"address",name:"token",type:"address"}],internalType:"struct IAllowanceTransfer.AllowanceTransferDetails[]",name:"transferDetails",type:"tuple[]"}],name:"transferFrom",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"uint160",name:"amount",type:"uint160"},{internalType:"address",name:"token",type:"address"}],name:"transferFrom",outputs:[],stateMutability:"nonpayable",type:"function"}],tC="0x60c0346100bb574660a052602081017f8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a86681527f9ac997416e8ff9d2ff6bebeb7149f65cdae5e32e2b90440b566bb3044041d36a60408301524660608301523060808301526080825260a082019180831060018060401b038411176100a557826040525190206080526123c090816100c1823960805181611a90015260a05181611a6a0152f35b634e487b7160e01b600052604160045260246000fd5b600080fdfe6040608081526004908136101561001557600080fd5b600090813560e01c80630d58b1db1461126c578063137c29fe146110755780632a2d80d114610db75780632b67b57014610bde57806330f28b7a14610ade5780633644e51514610a9d57806336c7851614610a285780633ff9dcb1146109a85780634fe02b441461093f57806365d9723c146107ac57806387517c451461067a578063927da105146105c3578063cc53287f146104a3578063edd9444b1461033a5763fe8ec1a7146100c657600080fd5b346103365760c07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126103365767ffffffffffffffff833581811161033257610114903690860161164b565b60243582811161032e5761012b903690870161161a565b6101336114e6565b9160843585811161032a5761014b9036908a016115c1565b98909560a43590811161032657610164913691016115c1565b969095815190610173826113ff565b606b82527f5065726d697442617463685769746e6573735472616e7366657246726f6d285460208301527f6f6b656e5065726d697373696f6e735b5d207065726d69747465642c61646472838301527f657373207370656e6465722c75696e74323536206e6f6e63652c75696e74323560608301527f3620646561646c696e652c000000000000000000000000000000000000000000608083015282519a8b9181610222602085018096611edc565b918237018a8152039961025b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe09b8c8101835282611437565b5190209085515161026b81611e04565b908a5b8181106102f95750506102f6999a6102ed9183516102a081610294602082018095611eaf565b03848101835282611437565b519020602089810151858b015195519182019687526040820192909252336060820152608081019190915260a081019390935260643560c08401528260e081015b03908101835282611437565b51902093611c40565b80f35b8061031161030b610321938c5161175e565b51611f9d565b61031b828661175e565b52611e53565b61026e565b8880fd5b8780fd5b8480fd5b8380fd5b5080fd5b5091346103365760807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126103365767ffffffffffffffff9080358281116103325761038b903690830161164b565b60243583811161032e576103a2903690840161161a565b9390926103ad6114e6565b9160643590811161049f576103c4913691016115c1565b949093835151976103d489611e04565b98885b81811061047d5750506102f697988151610425816103f9602082018095611eaf565b037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08101835282611437565b5190206020860151828701519083519260208401947ffcf35f5ac6a2c28868dc44c302166470266239195f02b0ee408334829333b7668652840152336060840152608083015260a082015260a081526102ed8161141b565b808b61031b8261049461030b61049a968d5161175e565b9261175e565b6103d7565b8680fd5b5082346105bf57602090817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126103325780359067ffffffffffffffff821161032e576104f49136910161161a565b929091845b848110610504578580f35b8061051a61051560019388886118b5565b6118c5565b61052f84610529848a8a6118b5565b016118c5565b3389528385528589209173ffffffffffffffffffffffffffffffffffffffff80911692838b528652868a20911690818a5285528589207fffffffffffffffffffffffff000000000000000000000000000000000000000081541690558551918252848201527f89b1add15eff56b3dfe299ad94e01f2b52fbcb80ae1a3baea6ae8c04cb2b98a4853392a2016104f9565b8280fd5b50346103365760607ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261033657610676816105ff6114a0565b936106086114c3565b6106106114e6565b73ffffffffffffffffffffffffffffffffffffffff968716835260016020908152848420928816845291825283832090871683528152919020549251938316845260a083901c65ffffffffffff169084015260d09190911c604083015281906060820190565b0390f35b50346103365760807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610336576106b26114a0565b906106bb6114c3565b916106c46114e6565b65ffffffffffff926064358481169081810361032a5779ffffffffffff0000000000000000000000000000000000000000947fda9fa7c1b00402c17d0161b249b1ab8bbec047c5a52207b9c112deffd817036b94338a5260016020527fffffffffffff0000000000000000000000000000000000000000000000000000858b209873ffffffffffffffffffffffffffffffffffffffff809416998a8d5260205283878d209b169a8b8d52602052868c209486156000146107a457504216925b8454921697889360a01b16911617179055815193845260208401523392a480f35b905092610783565b5082346105bf5760607ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126105bf576107e56114a0565b906107ee6114c3565b9265ffffffffffff604435818116939084810361032a57338852602091600183528489209673ffffffffffffffffffffffffffffffffffffffff80911697888b528452858a20981697888a5283528489205460d01c93848711156109175761ffff9085840316116108f05750907f55eb90d810e1700b35a8e7e25395ff7f2b2259abd7415ca2284dfb1c246418f393929133895260018252838920878a528252838920888a5282528389209079ffffffffffffffffffffffffffffffffffffffffffffffffffff7fffffffffffff000000000000000000000000000000000000000000000000000083549260d01b16911617905582519485528401523392a480f35b84517f24d35a26000000000000000000000000000000000000000000000000000000008152fd5b5084517f756688fe000000000000000000000000000000000000000000000000000000008152fd5b503461033657807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610336578060209273ffffffffffffffffffffffffffffffffffffffff61098f6114a0565b1681528084528181206024358252845220549051908152f35b5082346105bf57817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126105bf577f3704902f963766a4e561bbaab6e6cdc1b1dd12f6e9e99648da8843b3f46b918d90359160243533855284602052818520848652602052818520818154179055815193845260208401523392a280f35b8234610a9a5760807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610a9a57610a606114a0565b610a686114c3565b610a706114e6565b6064359173ffffffffffffffffffffffffffffffffffffffff8316830361032e576102f6936117a1565b80fd5b503461033657817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261033657602090610ad7611a67565b9051908152f35b508290346105bf576101007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126105bf57610b1a3661152a565b90807fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff7c36011261033257610b4c611478565b9160e43567ffffffffffffffff8111610bda576102f694610b6f913691016115c1565b939092610b7c8351611f9d565b6020840151828501519083519260208401947f939c21a48a8dbe3a9a2404a1d46691e4d39f6583d6ec6b35714604c986d801068652840152336060840152608083015260a082015260a08152610bd18161141b565b51902091611b6e565b8580fd5b509134610336576101007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261033657610c186114a0565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffdc360160c08112610332576080855191610c51836113e3565b1261033257845190610c6282611398565b73ffffffffffffffffffffffffffffffffffffffff91602435838116810361049f578152604435838116810361049f57602082015265ffffffffffff606435818116810361032a5788830152608435908116810361049f576060820152815260a435938285168503610bda576020820194855260c4359087830182815260e43567ffffffffffffffff811161032657610cfe90369084016115c1565b929093804211610d88575050918591610d786102f6999a610d7e95610d238851611f07565b90898c511690519083519260208401947ff3841cd1ff0085026a6327b620b67997ce40f282c88a8e905a7a5626e310f3d086528401526060830152608082015260808152610d70816113ff565b519020611b22565b91612010565b51925116916118e6565b602492508a51917fcd21db4f000000000000000000000000000000000000000000000000000000008352820152fd5b5091346103365760607ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc93818536011261033257610df36114a0565b9260249081359267ffffffffffffffff9788851161032a578590853603011261049f578051978589018981108282111761104a578252848301358181116103265785019036602383011215610326578382013591610e50836115ef565b90610e5d85519283611437565b838252602093878584019160071b83010191368311611046578801905b828210610fe9575050508a526044610e93868801611509565b96838c01978852013594838b0191868352604435908111610fe557610ebb90369087016115c1565b959096804211610fba575050508998995151610ed681611e04565b908b5b818110610f9757505092889492610d7892610f6497958351610f02816103f98682018095611eaf565b5190209073ffffffffffffffffffffffffffffffffffffffff9a8b8b51169151928551948501957faf1b0d30d2cab0380e68f0689007e3254993c596f2fdd0aaa7f4d04f794408638752850152830152608082015260808152610d70816113ff565b51169082515192845b848110610f78578580f35b80610f918585610f8b600195875161175e565b516118e6565b01610f6d565b80610311610fac8e9f9e93610fb2945161175e565b51611f07565b9b9a9b610ed9565b8551917fcd21db4f000000000000000000000000000000000000000000000000000000008352820152fd5b8a80fd5b6080823603126110465785608091885161100281611398565b61100b85611509565b8152611018838601611509565b838201526110278a8601611607565b8a8201528d611037818701611607565b90820152815201910190610e7a565b8c80fd5b84896041867f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b5082346105bf576101407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126105bf576110b03661152a565b91807fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff7c360112610332576110e2611478565b67ffffffffffffffff93906101043585811161049f5761110590369086016115c1565b90936101243596871161032a57611125610bd1966102f6983691016115c1565b969095825190611134826113ff565b606482527f5065726d69745769746e6573735472616e7366657246726f6d28546f6b656e5060208301527f65726d697373696f6e73207065726d69747465642c6164647265737320737065848301527f6e6465722c75696e74323536206e6f6e63652c75696e7432353620646561646c60608301527f696e652c0000000000000000000000000000000000000000000000000000000060808301528351948591816111e3602085018096611edc565b918237018b8152039361121c7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe095868101835282611437565b5190209261122a8651611f9d565b6020878101518589015195519182019687526040820192909252336060820152608081019190915260a081019390935260e43560c08401528260e081016102e1565b5082346105bf576020807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261033257813567ffffffffffffffff92838211610bda5736602383011215610bda5781013592831161032e576024906007368386831b8401011161049f57865b8581106112e5578780f35b80821b83019060807fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffdc83360301126103265761139288876001946060835161132c81611398565b611368608461133c8d8601611509565b9485845261134c60448201611509565b809785015261135d60648201611509565b809885015201611509565b918291015273ffffffffffffffffffffffffffffffffffffffff80808093169516931691166117a1565b016112da565b6080810190811067ffffffffffffffff8211176113b457604052565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6060810190811067ffffffffffffffff8211176113b457604052565b60a0810190811067ffffffffffffffff8211176113b457604052565b60c0810190811067ffffffffffffffff8211176113b457604052565b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff8211176113b457604052565b60c4359073ffffffffffffffffffffffffffffffffffffffff8216820361149b57565b600080fd5b6004359073ffffffffffffffffffffffffffffffffffffffff8216820361149b57565b6024359073ffffffffffffffffffffffffffffffffffffffff8216820361149b57565b6044359073ffffffffffffffffffffffffffffffffffffffff8216820361149b57565b359073ffffffffffffffffffffffffffffffffffffffff8216820361149b57565b7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc01906080821261149b576040805190611563826113e3565b8082941261149b57805181810181811067ffffffffffffffff8211176113b457825260043573ffffffffffffffffffffffffffffffffffffffff8116810361149b578152602435602082015282526044356020830152606435910152565b9181601f8401121561149b5782359167ffffffffffffffff831161149b576020838186019501011161149b57565b67ffffffffffffffff81116113b45760051b60200190565b359065ffffffffffff8216820361149b57565b9181601f8401121561149b5782359167ffffffffffffffff831161149b576020808501948460061b01011161149b57565b91909160608184031261149b576040805191611666836113e3565b8294813567ffffffffffffffff9081811161149b57830182601f8201121561149b578035611693816115ef565b926116a087519485611437565b818452602094858086019360061b8501019381851161149b579086899897969594939201925b8484106116e3575050505050855280820135908501520135910152565b90919293949596978483031261149b578851908982019082821085831117611730578a928992845261171487611509565b81528287013583820152815201930191908897969594936116c6565b602460007f4e487b710000000000000000000000000000000000000000000000000000000081526041600452fd5b80518210156117725760209160051b010190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b92919273ffffffffffffffffffffffffffffffffffffffff604060008284168152600160205282828220961695868252602052818120338252602052209485549565ffffffffffff8760a01c16804211611884575082871696838803611812575b5050611810955016926122fc565b565b878484161160001461184f57602488604051907ff96fb0710000000000000000000000000000000000000000000000000000000082526004820152fd5b7fffffffffffffffffffffffff000000000000000000000000000000000000000084846118109a031691161790553880611802565b602490604051907fd81b2f2e0000000000000000000000000000000000000000000000000000000082526004820152fd5b91908110156117725760061b0190565b3573ffffffffffffffffffffffffffffffffffffffff8116810361149b5790565b9065ffffffffffff908160608401511673ffffffffffffffffffffffffffffffffffffffff908185511694826020820151169280866040809401511695169560009187835260016020528383208984526020528383209916988983526020528282209184835460d01c03611a3e579185611a1794927fc6a377bfc4eb120024a8ac08eef205be16b817020812c73223e81d1bdb9708ec98979694508715600014611a1c5779ffffffffffff00000000000000000000000000000000000000009042165b60a01b167fffffffffffff00000000000000000000000000000000000000000000000000006001860160d01b1617179055519384938491604091949373ffffffffffffffffffffffffffffffffffffffff606085019616845265ffffffffffff809216602085015216910152565b0390a4565b5079ffffffffffff0000000000000000000000000000000000000000876119a9565b600484517f756688fe000000000000000000000000000000000000000000000000000000008152fd5b467f000000000000000000000000000000000000000000000000000000000000000003611ab2577f000000000000000000000000000000000000000000000000000000000000000090565b60405160208101907f8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a86682527f9ac997416e8ff9d2ff6bebeb7149f65cdae5e32e2b90440b566bb3044041d36a604082015246606082015230608082015260808152611b1c816113ff565b51902090565b611b2a611a67565b906040519060208201927f190100000000000000000000000000000000000000000000000000000000000084526022830152604282015260428152611b1c81611398565b9192909360a435936040840151804211611c0f5750602084510151808611611bde5750918591610d78611bae94611ba9602088015186611d90565b611b22565b73ffffffffffffffffffffffffffffffffffffffff809151511692608435918216820361149b57611810936122fc565b602490604051907f3728b83d0000000000000000000000000000000000000000000000000000000082526004820152fd5b602490604051907fcd21db4f0000000000000000000000000000000000000000000000000000000082526004820152fd5b959093958051519560409283830151804211611d605750848803611d3757611c77918691610d7860209b611ba98d88015186611d90565b60005b868110611c8b575050505050505050565b611c9681835161175e565b5188611ca383878a6118b5565b01359089810151808311611d07575091818888886001968596611ccd575b50505050505001611c7a565b611cfc95611cf69273ffffffffffffffffffffffffffffffffffffffff610515935116956118b5565b916122fc565b803888888883611cc1565b6024908651907f3728b83d0000000000000000000000000000000000000000000000000000000082526004820152fd5b600484517fff633a38000000000000000000000000000000000000000000000000000000008152fd5b6024908551907fcd21db4f0000000000000000000000000000000000000000000000000000000082526004820152fd5b9073ffffffffffffffffffffffffffffffffffffffff600160ff83161b9216600052600060205260406000209060081c6000526020526040600020818154188091551615611dda57565b60046040517f756688fe000000000000000000000000000000000000000000000000000000008152fd5b90611e0e826115ef565b611e1b6040519182611437565b8281527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0611e4982946115ef565b0190602036910137565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114611e805760010190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b805160208092019160005b828110611ec8575050505090565b835185529381019392810192600101611eba565b9081519160005b838110611ef4575050016000815290565b8060208092840101518185015201611ee3565b60405160208101917f65626cad6cb96493bf6f5ebea28756c966f023ab9e8a83a7101849d5573b3678835273ffffffffffffffffffffffffffffffffffffffff8082511660408401526020820151166060830152606065ffffffffffff9182604082015116608085015201511660a082015260a0815260c0810181811067ffffffffffffffff8211176113b45760405251902090565b6040516020808201927f618358ac3db8dc274f0cd8829da7e234bd48cd73c4a740aede1adec9846d06a1845273ffffffffffffffffffffffffffffffffffffffff81511660408401520151606082015260608152611b1c81611398565b919082604091031261149b576020823592013590565b6000843b6121775750604182036120f55761202d82820182611ffa565b939092604010156117725760209360009360ff6040608095013560f81c5b60405194855216868401526040830152606082015282805260015afa156120e95773ffffffffffffffffffffffffffffffffffffffff80600051169182156120bf57160361209557565b60046040517f815e1d64000000000000000000000000000000000000000000000000000000008152fd5b60046040517f8baa579f000000000000000000000000000000000000000000000000000000008152fd5b6040513d6000823e3d90fd5b6040820361214d5761210991810190611ffa565b91601b7f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff84169360ff1c019060ff8211611e805760209360009360ff60809461204b565b60046040517f4be6321b000000000000000000000000000000000000000000000000000000008152fd5b929391601f928173ffffffffffffffffffffffffffffffffffffffff60646020957fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0604051988997889687947f1626ba7e000000000000000000000000000000000000000000000000000000009e8f8752600487015260406024870152816044870152868601378b85828601015201168101030192165afa9081156122f1578291612273575b507fffffffff000000000000000000000000000000000000000000000000000000009150160361224957565b60046040517fb0669cbc000000000000000000000000000000000000000000000000000000008152fd5b90506020813d82116122e9575b8161228d60209383611437565b810103126103365751907fffffffff0000000000000000000000000000000000000000000000000000000082168203610a9a57507fffffffff00000000000000000000000000000000000000000000000000000000903861221d565b3d9150612280565b6040513d84823e3d90fd5b9060006064926020958295604051947f23b872dd0000000000000000000000000000000000000000000000000000000086526004860152602485015260448401525af13d15601f3d116001600051141617161561235557565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f5452414e534645525f46524f4d5f4641494c45440000000000000000000000006044820152fdfea164736f6c6343000811000a";let Permit2_factory_Permit2_factory=class Permit2_factory_Permit2_factory extends z.ContractFactory{constructor(e){super(tv,tC,e)}deploy(e){return super.deploy(e||{})}getDeployTransaction(e){return super.getDeployTransaction(e||{})}attach(e){return super.attach(e)}connect(e){return super.connect(e)}static createInterface(){return new X.vU(tv)}static connect(e,t){return new z.Contract(e,tv,t)}};Permit2_factory_Permit2_factory.bytecode=tC,Permit2_factory_Permit2_factory.abi=tv,(u=v||(v={}))[u.NotSupported=0]="NotSupported",u[u.Failed=1]="Failed",u[u.Succeeded=2]="Succeeded",u[u.InsufficientBalance=3]="InsufficientBalance",u[u.NotApproved=4]="NotApproved";let ETHGasStationInfoProvider=class ETHGasStationInfoProvider extends IGasPriceProvider{constructor(e){super(),this.url=e}async getGasPrice(e,t){let f=await e3()(async()=>k().get(this.url),{retries:1}),{data:n,status:a}=f;if(200!=a)throw P.error({response:f},`Unabled to get gas price from ${this.url}.`),Error(`Unable to get gas price from ${this.url}`);P.info({gasPriceResponse:n},'Gas price response from API. About to parse "fast" to big number');let i=e5.O$.from(n.fast).div(e5.O$.from(10)).mul(e5.O$.from(10).pow(9));return P.info(`Gas price in wei: ${i} as of block ${n.blockNum}`),{gasPriceWei:i}}};let LegacyGasPriceProvider=class LegacyGasPriceProvider extends IGasPriceProvider{constructor(e){super(),this.provider=e}async getGasPrice(e,t){let f=await this.provider.getGasPrice();return{gasPriceWei:f}}};var tI=f(69222);let tE=[{inputs:[],name:"getCurrentBlockTimestamp",outputs:[{internalType:"uint256",name:"timestamp",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"addr",type:"address"}],name:"getEthBalance",outputs:[{internalType:"uint256",name:"balance",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{components:[{internalType:"address",name:"target",type:"address"},{internalType:"uint256",name:"gasLimit",type:"uint256"},{internalType:"bytes",name:"callData",type:"bytes"}],internalType:"struct UniswapInterfaceMulticall.Call[]",name:"calls",type:"tuple[]"}],name:"multicall",outputs:[{internalType:"uint256",name:"blockNumber",type:"uint256"},{components:[{internalType:"bool",name:"success",type:"bool"},{internalType:"uint256",name:"gasUsed",type:"uint256"},{internalType:"bytes",name:"returnData",type:"bytes"}],internalType:"struct UniswapInterfaceMulticall.Result[]",name:"returnData",type:"tuple[]"}],stateMutability:"nonpayable",type:"function"}],tA="0x608060405234801561001057600080fd5b50610567806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80630f28c97d146100465780631749e1e3146100645780634d2301cc14610085575b600080fd5b61004e610098565b60405161005b919061041f565b60405180910390f35b6100776100723660046102a7565b61009c565b60405161005b929190610428565b61004e610093366004610286565b610220565b4290565b8051439060609067ffffffffffffffff811180156100b957600080fd5b506040519080825280602002602001820160405280156100f357816020015b6100e061023a565b8152602001906001900390816100d85790505b50905060005b835181101561021a57600080600086848151811061011357fe5b60200260200101516000015187858151811061012b57fe5b60200260200101516020015188868151811061014357fe5b60200260200101516040015192509250925060005a90506000808573ffffffffffffffffffffffffffffffffffffffff1685856040516101839190610403565b60006040518083038160008787f1925050503d80600081146101c1576040519150601f19603f3d011682016040523d82523d6000602084013e6101c6565b606091505b509150915060005a8403905060405180606001604052808415158152602001828152602001838152508989815181106101fb57fe5b60200260200101819052505050505050505080806001019150506100f9565b50915091565b73ffffffffffffffffffffffffffffffffffffffff163190565b604051806060016040528060001515815260200160008152602001606081525090565b803573ffffffffffffffffffffffffffffffffffffffff8116811461028157600080fd5b919050565b600060208284031215610297578081fd5b6102a08261025d565b9392505050565b600060208083850312156102b9578182fd5b823567ffffffffffffffff808211156102d0578384fd5b818501915085601f8301126102e3578384fd5b8135818111156102ef57fe5b6102fc8485830201610506565b81815284810190848601875b848110156103f457813587017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0606081838f03011215610346578a8bfd5b60408051606081018181108b8211171561035c57fe5b8252610369848d0161025d565b8152818401358c82015260608401358a811115610384578d8efd5b8085019450508e603f850112610398578c8dfd5b8b8401358a8111156103a657fe5b6103b68d85601f84011601610506565b93508084528f838287010111156103cb578d8efd5b808386018e86013783018c018d9052908101919091528552509287019290870190600101610308565b50909998505050505050505050565b6000825161041581846020870161052a565b9190910192915050565b90815260200190565b600060408083018584526020828186015281865180845260609350838701915083838202880101838901875b838110156104f6578983037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa001855281518051151584528681015187850152880151888401889052805188850181905260806104b582828801858c0161052a565b96880196601f919091017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01694909401909301925090850190600101610454565b50909a9950505050505050505050565b60405181810167ffffffffffffffff8111828210171561052257fe5b604052919050565b60005b8381101561054557818101518382015260200161052d565b83811115610554576000848401525b5050505056fea164736f6c6343000706000a";let UniswapInterfaceMulticall__factory=class UniswapInterfaceMulticall__factory extends z.ContractFactory{constructor(e){super(tE,tA,e)}deploy(e){return super.deploy(e||{})}getDeployTransaction(e){return super.getDeployTransaction(e||{})}attach(e){return super.attach(e)}connect(e){return super.connect(e)}static createInterface(){return new X.vU(tE)}static connect(e,t){return new z.Contract(e,tE,t)}};UniswapInterfaceMulticall__factory.bytecode=tA,UniswapInterfaceMulticall__factory.abi=tE;let IMulticallProvider=class IMulticallProvider{};let UniswapMulticallProvider=class UniswapMulticallProvider extends IMulticallProvider{constructor(e,t,f=1e6){super(),this.chainId=e,this.provider=t,this.gasLimitPerCall=f;let n=W[this.chainId];if(!n)throw Error(`No address for Uniswap Multicall Contract on chain id: ${e}`);this.multicallContract=UniswapInterfaceMulticall__factory.connect(n,this.provider)}async callSameFunctionOnMultipleContracts(e){var t;let{addresses:f,contractInterface:n,functionName:a,functionParams:i,providerConfig:r}=e,o=null!==(t=null==r?void 0:r.blockNumber)&&void 0!==t?t:void 0,s=n.getFunction(a),d=n.encodeFunctionData(s,i),u=x().map(f,e=>({target:e,callData:d,gasLimit:this.gasLimitPerCall}));P.debug({calls:u},`About to multicall for ${a} across ${f.length} addresses`);let{blockNumber:l,returnData:p}=await this.multicallContract.callStatic.multicall(u,{blockTag:o}),h=[];for(let e=0;e<p.length;e++){let{success:t,returnData:i}=p[e];if(!t||i.length<=2){P.debug({result:p[e]},`Invalid result calling ${a} on address ${f[e]}`),h.push({success:!1,returnData:i});continue}h.push({success:!0,result:n.decodeFunctionResult(s,i)})}return P.debug({results:h},`Results for multicall on ${a} across ${f.length} addresses as of block ${l}`),{blockNumber:l,results:h}}async callSameFunctionOnContractWithMultipleParams(e){var t,f;let{address:n,contractInterface:a,functionName:i,functionParams:r,additionalConfig:o,providerConfig:s}=e,d=a.getFunction(i),u=null!==(t=null==o?void 0:o.gasLimitPerCallOverride)&&void 0!==t?t:this.gasLimitPerCall,l=null!==(f=null==s?void 0:s.blockNumber)&&void 0!==f?f:void 0,p=x().map(r,e=>{let t=a.encodeFunctionData(d,e);return{target:n,callData:t,gasLimit:u}});P.debug({calls:p},`About to multicall for ${i} at address ${n} with ${r.length} different sets of params`);let{blockNumber:h,returnData:b}=await this.multicallContract.callStatic.multicall(p,{blockTag:l}),m=[],y=[];for(let e=0;e<b.length;e++){let{success:t,returnData:f,gasUsed:n}=b[e];if(!t||f.length<=2){P.debug({result:b[e]},`Invalid result calling ${i} with params ${r[e]}`),m.push({success:!1,returnData:f});continue}y.push(n.toNumber()),m.push({success:!0,result:a.decodeFunctionResult(d,f)})}return P.debug({results:m,functionName:i,address:n},`Results for multicall for ${i} at address ${n} with ${r.length} different sets of params. Results as of block ${h}`),{blockNumber:h,results:m,approxGasUsedPerSuccessCall:tI.percentile(y,99)}}async callMultipleFunctionsOnSameContract(e){var t,f;let{address:n,contractInterface:a,functionNames:i,functionParams:r,additionalConfig:o,providerConfig:s}=e,d=null!==(t=null==o?void 0:o.gasLimitPerCallOverride)&&void 0!==t?t:this.gasLimitPerCall,u=null!==(f=null==s?void 0:s.blockNumber)&&void 0!==f?f:void 0,l=x().map(i,(e,t)=>{let f=a.getFunction(e),i=r?r[t]:[],o=a.encodeFunctionData(f,i);return{target:n,callData:o,gasLimit:d}});P.debug({calls:l},`About to multicall for ${i.length} functions at address ${n} with ${null==r?void 0:r.length} different sets of params`);let{blockNumber:p,returnData:h}=await this.multicallContract.callStatic.multicall(l,{blockTag:u}),b=[],m=[];for(let e=0;e<h.length;e++){let t=a.getFunction(i[e]),{success:f,returnData:n,gasUsed:o}=h[e];if(!f||n.length<=2){P.debug({result:h[e]},`Invalid result calling ${i[e]} with ${r?r[e]:"0"} params`),b.push({success:!1,returnData:n});continue}m.push(o.toNumber()),b.push({success:!0,result:a.decodeFunctionResult(t,n)})}return P.debug({results:b,functionNames:i,address:n},`Results for multicall for ${i.length} functions at address ${n} with ${r?r.length:" 0"} different sets of params. Results as of block ${p}`),{blockNumber:p,results:b,approxGasUsedPerSuccessCall:tI.percentile(m,99)}}};let tw=[S.ChainId.MAINNET,S.ChainId.GOERLI,S.ChainId.POLYGON_MUMBAI];let OnChainGasPriceProvider=class OnChainGasPriceProvider extends IGasPriceProvider{constructor(e,t,f,n=tw){super(),this.chainId=e,this.eip1559GasPriceProvider=t,this.legacyGasPriceProvider=f,this.eipChains=n}async getGasPrice(e,t){return this.eipChains.includes(this.chainId)?this.eip1559GasPriceProvider.getGasPrice(e,t):this.legacyGasPriceProvider.getGasPrice(e,t)}};let tS=[{inputs:[{internalType:"bytes",name:"path",type:"bytes"},{internalType:"uint256",name:"amountIn",type:"uint256"}],name:"quoteExactInput",outputs:[{internalType:"uint256",name:"amountOut",type:"uint256"},{internalType:"uint160[]",name:"v3SqrtPriceX96AfterList",type:"uint160[]"},{internalType:"uint32[]",name:"v3InitializedTicksCrossedList",type:"uint32[]"},{internalType:"uint256",name:"v3SwapGasEstimate",type:"uint256"}],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"address",name:"tokenIn",type:"address"},{internalType:"address",name:"tokenOut",type:"address"},{internalType:"uint256",name:"amountIn",type:"uint256"}],internalType:"struct IMixedRouteQuoterV1.QuoteExactInputSingleV2Params",name:"params",type:"tuple"}],name:"quoteExactInputSingleV2",outputs:[{internalType:"uint256",name:"amountOut",type:"uint256"}],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"address",name:"tokenIn",type:"address"},{internalType:"address",name:"tokenOut",type:"address"},{internalType:"uint256",name:"amountIn",type:"uint256"},{internalType:"uint24",name:"fee",type:"uint24"},{internalType:"uint160",name:"sqrtPriceLimitX96",type:"uint160"}],internalType:"struct IMixedRouteQuoterV1.QuoteExactInputSingleV3Params",name:"params",type:"tuple"}],name:"quoteExactInputSingleV3",outputs:[{internalType:"uint256",name:"amountOut",type:"uint256"},{internalType:"uint160",name:"sqrtPriceX96After",type:"uint160"},{internalType:"uint32",name:"initializedTicksCrossed",type:"uint32"},{internalType:"uint256",name:"gasEstimate",type:"uint256"}],stateMutability:"nonpayable",type:"function"}];let IMixedRouteQuoterV1__factory=class IMixedRouteQuoterV1__factory{static createInterface(){return new X.vU(tS)}static connect(e,t){return new z.Contract(e,tS,t)}};IMixedRouteQuoterV1__factory.abi=tS;let tP=[{inputs:[{internalType:"bytes",name:"path",type:"bytes"},{internalType:"uint256",name:"amountIn",type:"uint256"}],name:"quoteExactInput",outputs:[{internalType:"uint256",name:"amountOut",type:"uint256"},{internalType:"uint160[]",name:"sqrtPriceX96AfterList",type:"uint160[]"},{internalType:"uint32[]",name:"initializedTicksCrossedList",type:"uint32[]"},{internalType:"uint256",name:"gasEstimate",type:"uint256"}],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"address",name:"tokenIn",type:"address"},{internalType:"address",name:"tokenOut",type:"address"},{internalType:"uint256",name:"amountIn",type:"uint256"},{internalType:"uint24",name:"fee",type:"uint24"},{internalType:"uint160",name:"sqrtPriceLimitX96",type:"uint160"}],internalType:"struct IQuoterV2.QuoteExactInputSingleParams",name:"params",type:"tuple"}],name:"quoteExactInputSingle",outputs:[{internalType:"uint256",name:"amountOut",type:"uint256"},{internalType:"uint160",name:"sqrtPriceX96After",type:"uint160"},{internalType:"uint32",name:"initializedTicksCrossed",type:"uint32"},{internalType:"uint256",name:"gasEstimate",type:"uint256"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes",name:"path",type:"bytes"},{internalType:"uint256",name:"amountOut",type:"uint256"}],name:"quoteExactOutput",outputs:[{internalType:"uint256",name:"amountIn",type:"uint256"},{internalType:"uint160[]",name:"sqrtPriceX96AfterList",type:"uint160[]"},{internalType:"uint32[]",name:"initializedTicksCrossedList",type:"uint32[]"},{internalType:"uint256",name:"gasEstimate",type:"uint256"}],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"address",name:"tokenIn",type:"address"},{internalType:"address",name:"tokenOut",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint24",name:"fee",type:"uint24"},{internalType:"uint160",name:"sqrtPriceLimitX96",type:"uint160"}],internalType:"struct IQuoterV2.QuoteExactOutputSingleParams",name:"params",type:"tuple"}],name:"quoteExactOutputSingle",outputs:[{internalType:"uint256",name:"amountIn",type:"uint256"},{internalType:"uint160",name:"sqrtPriceX96After",type:"uint160"},{internalType:"uint32",name:"initializedTicksCrossed",type:"uint32"},{internalType:"uint256",name:"gasEstimate",type:"uint256"}],stateMutability:"nonpayable",type:"function"}];let IQuoterV2__factory=class IQuoterV2__factory{static createInterface(){return new X.vU(tP)}static connect(e,t){return new z.Contract(e,tP,t)}};IQuoterV2__factory.abi=tP;let BlockConflictError=class BlockConflictError extends Error{constructor(){super(...arguments),this.name="BlockConflictError"}};let SuccessRateError=class SuccessRateError extends Error{constructor(){super(...arguments),this.name="SuccessRateError"}};let ProviderBlockHeaderError=class ProviderBlockHeaderError extends Error{constructor(){super(...arguments),this.name="ProviderBlockHeaderError"}};let ProviderTimeoutError=class ProviderTimeoutError extends Error{constructor(){super(...arguments),this.name="ProviderTimeoutError"}};let ProviderGasError=class ProviderGasError extends Error{constructor(){super(...arguments),this.name="ProviderGasError"}};let OnChainQuoteProvider=class OnChainQuoteProvider{constructor(e,t,f,n={retries:2,minTimeout:25,maxTimeout:250},a={multicallChunk:150,gasLimitPerCall:1e6,quoteMinSuccessRate:.2},i={gasLimitOverride:15e5,multicallChunk:100},r={gasLimitOverride:13e5,multicallChunk:110},o={baseBlockOffset:0,rollback:{enabled:!1}},s){this.chainId=e,this.provider=t,this.multicall2Provider=f,this.retryOptions=n,this.batchParams=a,this.gasErrorFailureOverride=i,this.successRateFailureOverrides=r,this.blockNumberConfig=o,this.quoterAddressOverride=s}getQuoterAddress(e){if(this.quoterAddressOverride)return this.quoterAddressOverride;let t=e?H[this.chainId]:q[this.chainId];if(!t)throw Error(`No address for the quoter contract on chain id: ${this.chainId}`);return t}async getQuotesManyExactIn(e,t,f){return this.getQuotesManyData(e,t,"quoteExactInput",f)}async getQuotesManyExactOut(e,t,f){return this.getQuotesManyData(e,t,"quoteExactOutput",f)}async getQuotesManyData(e,t,f,n){var a;let i=t.some(e=>e.protocol===Q.Protocol.V2)||t.some(e=>e.protocol===Q.Protocol.MIXED);this.validateRoutes(t,f,i);let r=this.batchParams.multicallChunk,o=this.batchParams.gasLimitPerCall,{baseBlockOffset:s,rollback:d}=this.blockNumberConfig,u=await this.provider.getBlockNumber(),l={...n,blockNumber:null!==(a=null==n?void 0:n.blockNumber)&&void 0!==a?a:u+s},h=x()(t).flatMap(t=>{let n=t.protocol===Q.Protocol.V3?(0,B.encodeRouteToPath)(t,"quoteExactOutput"==f):(0,Q.encodeMixedRouteToPath)(t instanceof V2Route?new Q.MixedRouteSDK(t.pairs,t.input,t.output):t),a=e.map(e=>[n,`0x${e.quotient.toString(16)}`]);return a}).value(),b=Math.ceil(h.length/Math.ceil(h.length/r)),m=x().chunk(h,b),y=x().map(m,e=>({status:"pending",inputs:e}));P.info(`About to get ${h.length} quotes in chunks of ${b} [${x().map(m,e=>e.length).join(",")}] ${o?`with a gas limit override of ${o}`:""} and block number: ${await l.blockNumber} [Original before offset: ${u}].`),R.putMetric("QuoteBatchSize",h.length,p.Count),R.putMetric(`QuoteBatchSize_${ID_TO_NETWORK_NAME(this.chainId)}`,h.length,p.Count);let T=!1,g=!1,v=0,C=!1,I=!1,E=!1,A=!1,w=!1,O=!1,k=1,M=y.length,D=0,{results:N,blockNumber:L,approxGasUsedPerSuccessCall:U}=await e3()(async(e,t)=>{C=!1,k=t;let[n,a,s]=this.partitionQuotes(y);P.info(`Starting attempt: ${t}.
          Currently ${n.length} success, ${a.length} failed, ${s.length} pending.
          Gas limit override: ${o} Block number override: ${l.blockNumber}.`),y=await Promise.all(x().map(y,async(e,t)=>{if("success"==e.status)return e;let{inputs:n}=e;try{D+=1;let e=await this.multicall2Provider.callSameFunctionOnContractWithMultipleParams({address:this.getQuoterAddress(i),contractInterface:i?IMixedRouteQuoterV1__factory.createInterface():IQuoterV2__factory.createInterface(),functionName:f,functionParams:n,providerConfig:l,additionalConfig:{gasLimitPerCallOverride:o}}),t=this.validateSuccessRate(e.results,T);if(t)return{status:"failed",inputs:n,reason:t,results:e};return{status:"success",inputs:n,results:e}}catch(e){if(e.message.includes("header not found"))return{status:"failed",inputs:n,reason:new ProviderBlockHeaderError(e.message.slice(0,500))};if(e.message.includes("timeout"))return{status:"failed",inputs:n,reason:new ProviderTimeoutError(`Req ${t}/${y.length}. Request had ${n.length} inputs. ${e.message.slice(0,500)}`)};if(e.message.includes("out of gas"))return{status:"failed",inputs:n,reason:new ProviderGasError(e.message.slice(0,500))};return{status:"failed",inputs:n,reason:Error(`Unknown error from provider: ${e.message.slice(0,500)}`)}}}));let[u,b,M]=this.partitionQuotes(y);if(M.length>0)throw Error("Pending quote after waiting for all promises.");let B=!1,N=this.validateBlockNumbers(u,m.length,o);N&&(B=!0);let L=x().map(b,e=>e.reason.name).join(", ");if(b.length>0)for(let e of(P.info(`On attempt ${t}: ${b.length}/${y.length} quotes failed. Reasons: ${L}`),b)){let{reason:f}=e;if(P.info({error:f},`[QuoteFetchError] Attempt ${t}. ${f.message}`),f instanceof BlockConflictError)E||(R.putMetric("QuoteBlockConflictErrorRetry",1,p.Count),E=!0),B=!0;else if(f instanceof ProviderBlockHeaderError){if(g||(R.putMetric("QuoteBlockHeaderNotFoundRetry",1,p.Count),g=!0),C||(v+=1,C=!0),d.enabled){let{rollbackBlockOffset:e,attemptsBeforeRollback:f}=d;v>=f&&!I&&(P.info(`Attempt ${t}. Have failed due to block header ${v-1} times. Rolling back block number by ${e} for next retry`),l.blockNumber=l.blockNumber?await l.blockNumber+e:await this.provider.getBlockNumber()+e,B=!0,I=!0)}}else f instanceof ProviderTimeoutError?w||(R.putMetric("QuoteTimeoutRetry",1,p.Count),w=!0):f instanceof ProviderGasError?(A||(R.putMetric("QuoteOutOfGasExceptionRetry",1,p.Count),A=!0),o=this.gasErrorFailureOverride.gasLimitOverride,r=this.gasErrorFailureOverride.multicallChunk,B=!0):f instanceof SuccessRateError?T||(R.putMetric("QuoteSuccessRateRetry",1,p.Count),T=!0,o=this.successRateFailureOverrides.gasLimitOverride,r=this.successRateFailureOverrides.multicallChunk,B=!0):O||(R.putMetric("QuoteUnknownReasonRetry",1,p.Count),O=!0)}if(B){P.info(`Attempt ${t}. Resetting all requests to pending for next attempt.`);let e=Math.ceil(h.length/Math.ceil(h.length/r)),f=x().chunk(h,e);y=x().map(f,e=>({status:"pending",inputs:e}))}if(b.length>0){if((this.chainId==S.ChainId.ARBITRUM_ONE||this.chainId==S.ChainId.ARBITRUM_GOERLI)&&x().every(b,e=>e.reason instanceof ProviderGasError)&&t==this.retryOptions.retries)return P.error("Failed to get quotes on Arbitrum due to provider gas error issue. Overriding error to return 0 quotes."),{results:[],blockNumber:e5.O$.from(0),approxGasUsedPerSuccessCall:0};throw Error(`Failed to get ${b.length} quotes. Reasons: ${L}`)}let U=x().map(u,e=>e.results);return{results:x().flatMap(U,e=>e.results),blockNumber:e5.O$.from(U[0].blockNumber),approxGasUsedPerSuccessCall:tI.percentile(x().map(U,e=>e.approxGasUsedPerSuccessCall),100)}},{retries:2,...this.retryOptions}),G=this.processQuoteResults(N,t,e);R.putMetric("QuoteApproxGasUsedPerSuccessfulCall",U,p.Count),R.putMetric("QuoteNumRetryLoops",k-1,p.Count),R.putMetric("QuoteTotalCallsToProvider",D,p.Count),R.putMetric("QuoteExpectedCallsToProvider",M,p.Count),R.putMetric("QuoteNumRetriedCalls",D-M,p.Count);let[V,q]=x()(G).flatMap(e=>e[1]).partition(e=>null!=e.quote).value();return P.info(`Got ${V.length} successful quotes, ${q.length} failed quotes. Took ${k-1} attempt loops. Total calls made to provider: ${D}. Have retried for timeout: ${w}`),{routesWithQuotes:G,blockNumber:L}}partitionQuotes(e){let t=x().filter(e,e=>"success"==e.status),f=x().filter(e,e=>"failed"==e.status),n=x().filter(e,e=>"pending"==e.status);return[t,f,n]}processQuoteResults(e,t,f){let n=[],a=x().chunk(e,f.length),i=[];for(let e=0;e<a.length;e++){let r=t[e],o=a[e],s=x().map(o,(e,t)=>{let n=f[t];if(!e.success){let e=100/f.length*(t+1),a=n.toFixed(Math.min(n.currency.decimals,2)),o=routes_routeToString(r);return i.push({route:o,percent:e,amount:a}),{amount:n,quote:null,sqrtPriceX96AfterList:null,gasEstimate:null,initializedTicksCrossedList:null}}return{amount:n,quote:e.result[0],sqrtPriceX96AfterList:e.result[1],initializedTicksCrossedList:e.result[2],gasEstimate:e.result[3]}});n.push([r,s])}return x().forEach(x().chunk(i,80),(e,t)=>{let f=x().groupBy(e,e=>e.route),n=x().mapValues(f,e=>x()(e).map(e=>`${e.percent}%[${e.amount}]`).join(","));P.info({failedQuotes:x().map(n,(e,t)=>`${t} : ${e}`)},`Failed on chain quotes for routes Part ${t}/${Math.ceil(i.length/80)}`)}),n}validateBlockNumbers(e,t,f){if(e.length<=1)return null;let n=x().map(e,e=>e.results),a=x().map(n,e=>e.blockNumber),i=x()(a).map(e=>e.toNumber()).uniq().value();return 1==i.length?null:new BlockConflictError(`Quotes returned from different blocks. ${i}. ${t} calls were made with gas limit ${f}`)}validateSuccessRate(e,t){let f=e.length,n=e.filter(e=>e.success).length,a=1*n/f,{quoteMinSuccessRate:i}=this.batchParams;if(a<i){if(t){P.info(`Quote success rate still below threshold despite retry. Continuing. ${i}: ${a}`);return}return new SuccessRateError(`Quote success rate below threshold of ${i}: ${a}`)}}validateRoutes(e,t,f){if(e.some(e=>e.protocol===Q.Protocol.V3)&&f)throw Error("Cannot use mixed route quoter with V3 routes");if("quoteExactOutput"===t&&f)throw Error("Cannot call quoteExactOutput with V2 or Mixed routes")}};let tO=[{inputs:[{internalType:"address",name:"_factoryV2",type:"address"},{internalType:"address",name:"factoryV3",type:"address"},{internalType:"address",name:"_positionManager",type:"address"},{internalType:"address",name:"_WETH9",type:"address"}],stateMutability:"nonpayable",type:"constructor"},{inputs:[],name:"WETH9",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"token",type:"address"}],name:"approveMax",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"address",name:"token",type:"address"}],name:"approveMaxMinusOne",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"address",name:"token",type:"address"}],name:"approveZeroThenMax",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"address",name:"token",type:"address"}],name:"approveZeroThenMaxMinusOne",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"bytes",name:"data",type:"bytes"}],name:"callPositionManager",outputs:[{internalType:"bytes",name:"result",type:"bytes"}],stateMutability:"payable",type:"function"},{inputs:[{internalType:"bytes[]",name:"paths",type:"bytes[]"},{internalType:"uint128[]",name:"amounts",type:"uint128[]"},{internalType:"uint24",name:"maximumTickDivergence",type:"uint24"},{internalType:"uint32",name:"secondsAgo",type:"uint32"}],name:"checkOracleSlippage",outputs:[],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes",name:"path",type:"bytes"},{internalType:"uint24",name:"maximumTickDivergence",type:"uint24"},{internalType:"uint32",name:"secondsAgo",type:"uint32"}],name:"checkOracleSlippage",outputs:[],stateMutability:"view",type:"function"},{inputs:[{components:[{internalType:"bytes",name:"path",type:"bytes"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amountIn",type:"uint256"},{internalType:"uint256",name:"amountOutMinimum",type:"uint256"}],internalType:"struct IV3SwapRouter.ExactInputParams",name:"params",type:"tuple"}],name:"exactInput",outputs:[{internalType:"uint256",name:"amountOut",type:"uint256"}],stateMutability:"payable",type:"function"},{inputs:[{components:[{internalType:"address",name:"tokenIn",type:"address"},{internalType:"address",name:"tokenOut",type:"address"},{internalType:"uint24",name:"fee",type:"uint24"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amountIn",type:"uint256"},{internalType:"uint256",name:"amountOutMinimum",type:"uint256"},{internalType:"uint160",name:"sqrtPriceLimitX96",type:"uint160"}],internalType:"struct IV3SwapRouter.ExactInputSingleParams",name:"params",type:"tuple"}],name:"exactInputSingle",outputs:[{internalType:"uint256",name:"amountOut",type:"uint256"}],stateMutability:"payable",type:"function"},{inputs:[{components:[{internalType:"bytes",name:"path",type:"bytes"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amountOut",type:"uint256"},{internalType:"uint256",name:"amountInMaximum",type:"uint256"}],internalType:"struct IV3SwapRouter.ExactOutputParams",name:"params",type:"tuple"}],name:"exactOutput",outputs:[{internalType:"uint256",name:"amountIn",type:"uint256"}],stateMutability:"payable",type:"function"},{inputs:[{components:[{internalType:"address",name:"tokenIn",type:"address"},{internalType:"address",name:"tokenOut",type:"address"},{internalType:"uint24",name:"fee",type:"uint24"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amountOut",type:"uint256"},{internalType:"uint256",name:"amountInMaximum",type:"uint256"},{internalType:"uint160",name:"sqrtPriceLimitX96",type:"uint160"}],internalType:"struct IV3SwapRouter.ExactOutputSingleParams",name:"params",type:"tuple"}],name:"exactOutputSingle",outputs:[{internalType:"uint256",name:"amountIn",type:"uint256"}],stateMutability:"payable",type:"function"},{inputs:[],name:"factory",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"factoryV2",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"token",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"getApprovalType",outputs:[{internalType:"enum IApproveAndCall.ApprovalType",name:"",type:"uint8"}],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"address",name:"token0",type:"address"},{internalType:"address",name:"token1",type:"address"},{internalType:"uint256",name:"tokenId",type:"uint256"},{internalType:"uint256",name:"amount0Min",type:"uint256"},{internalType:"uint256",name:"amount1Min",type:"uint256"}],internalType:"struct IApproveAndCall.IncreaseLiquidityParams",name:"params",type:"tuple"}],name:"increaseLiquidity",outputs:[{internalType:"bytes",name:"result",type:"bytes"}],stateMutability:"payable",type:"function"},{inputs:[{components:[{internalType:"address",name:"token0",type:"address"},{internalType:"address",name:"token1",type:"address"},{internalType:"uint24",name:"fee",type:"uint24"},{internalType:"int24",name:"tickLower",type:"int24"},{internalType:"int24",name:"tickUpper",type:"int24"},{internalType:"uint256",name:"amount0Min",type:"uint256"},{internalType:"uint256",name:"amount1Min",type:"uint256"},{internalType:"address",name:"recipient",type:"address"}],internalType:"struct IApproveAndCall.MintParams",name:"params",type:"tuple"}],name:"mint",outputs:[{internalType:"bytes",name:"result",type:"bytes"}],stateMutability:"payable",type:"function"},{inputs:[{internalType:"bytes32",name:"previousBlockhash",type:"bytes32"},{internalType:"bytes[]",name:"data",type:"bytes[]"}],name:"multicall",outputs:[{internalType:"bytes[]",name:"",type:"bytes[]"}],stateMutability:"payable",type:"function"},{inputs:[{internalType:"uint256",name:"deadline",type:"uint256"},{internalType:"bytes[]",name:"data",type:"bytes[]"}],name:"multicall",outputs:[{internalType:"bytes[]",name:"",type:"bytes[]"}],stateMutability:"payable",type:"function"},{inputs:[{internalType:"bytes[]",name:"data",type:"bytes[]"}],name:"multicall",outputs:[{internalType:"bytes[]",name:"results",type:"bytes[]"}],stateMutability:"payable",type:"function"},{inputs:[],name:"positionManager",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"token",type:"address"},{internalType:"uint256",name:"value",type:"uint256"}],name:"pull",outputs:[],stateMutability:"payable",type:"function"},{inputs:[],name:"refundETH",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"address",name:"token",type:"address"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"uint256",name:"deadline",type:"uint256"},{internalType:"uint8",name:"v",type:"uint8"},{internalType:"bytes32",name:"r",type:"bytes32"},{internalType:"bytes32",name:"s",type:"bytes32"}],name:"selfPermit",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"address",name:"token",type:"address"},{internalType:"uint256",name:"nonce",type:"uint256"},{internalType:"uint256",name:"expiry",type:"uint256"},{internalType:"uint8",name:"v",type:"uint8"},{internalType:"bytes32",name:"r",type:"bytes32"},{internalType:"bytes32",name:"s",type:"bytes32"}],name:"selfPermitAllowed",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"address",name:"token",type:"address"},{internalType:"uint256",name:"nonce",type:"uint256"},{internalType:"uint256",name:"expiry",type:"uint256"},{internalType:"uint8",name:"v",type:"uint8"},{internalType:"bytes32",name:"r",type:"bytes32"},{internalType:"bytes32",name:"s",type:"bytes32"}],name:"selfPermitAllowedIfNecessary",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"address",name:"token",type:"address"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"uint256",name:"deadline",type:"uint256"},{internalType:"uint8",name:"v",type:"uint8"},{internalType:"bytes32",name:"r",type:"bytes32"},{internalType:"bytes32",name:"s",type:"bytes32"}],name:"selfPermitIfNecessary",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"uint256",name:"amountIn",type:"uint256"},{internalType:"uint256",name:"amountOutMin",type:"uint256"},{internalType:"address[]",name:"path",type:"address[]"},{internalType:"address",name:"to",type:"address"}],name:"swapExactTokensForTokens",outputs:[{internalType:"uint256",name:"amountOut",type:"uint256"}],stateMutability:"payable",type:"function"},{inputs:[{internalType:"uint256",name:"amountOut",type:"uint256"},{internalType:"uint256",name:"amountInMax",type:"uint256"},{internalType:"address[]",name:"path",type:"address[]"},{internalType:"address",name:"to",type:"address"}],name:"swapTokensForExactTokens",outputs:[{internalType:"uint256",name:"amountIn",type:"uint256"}],stateMutability:"payable",type:"function"},{inputs:[{internalType:"address",name:"token",type:"address"},{internalType:"uint256",name:"amountMinimum",type:"uint256"},{internalType:"address",name:"recipient",type:"address"}],name:"sweepToken",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"address",name:"token",type:"address"},{internalType:"uint256",name:"amountMinimum",type:"uint256"}],name:"sweepToken",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"address",name:"token",type:"address"},{internalType:"uint256",name:"amountMinimum",type:"uint256"},{internalType:"uint256",name:"feeBips",type:"uint256"},{internalType:"address",name:"feeRecipient",type:"address"}],name:"sweepTokenWithFee",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"address",name:"token",type:"address"},{internalType:"uint256",name:"amountMinimum",type:"uint256"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"feeBips",type:"uint256"},{internalType:"address",name:"feeRecipient",type:"address"}],name:"sweepTokenWithFee",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"int256",name:"amount0Delta",type:"int256"},{internalType:"int256",name:"amount1Delta",type:"int256"},{internalType:"bytes",name:"_data",type:"bytes"}],name:"uniswapV3SwapCallback",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"amountMinimum",type:"uint256"},{internalType:"address",name:"recipient",type:"address"}],name:"unwrapWETH9",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"uint256",name:"amountMinimum",type:"uint256"}],name:"unwrapWETH9",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"uint256",name:"amountMinimum",type:"uint256"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"feeBips",type:"uint256"},{internalType:"address",name:"feeRecipient",type:"address"}],name:"unwrapWETH9WithFee",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"uint256",name:"amountMinimum",type:"uint256"},{internalType:"uint256",name:"feeBips",type:"uint256"},{internalType:"address",name:"feeRecipient",type:"address"}],name:"unwrapWETH9WithFee",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"uint256",name:"value",type:"uint256"}],name:"wrapETH",outputs:[],stateMutability:"payable",type:"function"},{stateMutability:"payable",type:"receive"}],tk="0x6101006040526000196000553480156200001857600080fd5b5060405162006135380380620061358339810160408190526200003b9162000087565b6001600160601b0319606094851b811660805291841b821660a05291831b811660c052911b1660e052620000e3565b80516001600160a01b03811681146200008257600080fd5b919050565b600080600080608085870312156200009d578384fd5b620000a8856200006a565b9350620000b8602086016200006a565b9250620000c8604086016200006a565b9150620000d8606086016200006a565b905092959194509250565b60805160601c60a05160601c60c05160601c60e05160601c615fb162000184600039806102c15280610b3c52806112ad52806113d7528061147e52806116af52806117d95280612d8f5280612def5280612e70525080611e4c52806124df5280613cdb52508061166f5280611b1a5280611e9c52806132a6525080610c625280610d365280610fe2528061164b5280612fc252806131855250615fb16000f3fe6080604052600436106102a45760003560e01c80639b2c0a371161016e578063dee00f35116100cb578063f100b2051161007f578063f2d5d56b11610064578063f2d5d56b1461066e578063f3995c6714610681578063fa461e33146106945761034f565b8063f100b2051461063b578063f25801a71461064e5761034f565b8063e0e189a0116100b0578063e0e189a0146105f5578063e90a182f14610608578063efdeed8e1461061b5761034f565b8063dee00f35146105b5578063df2ab5bb146105e25761034f565b8063b858183f11610122578063c45a015511610107578063c45a01551461057a578063cab372ce1461058f578063d4ef38de146105a25761034f565b8063b858183f14610554578063c2e3140a146105675761034f565b8063ab3fdd5011610153578063ab3fdd501461051b578063ac9650d81461052e578063b3a2af13146105415761034f565b80639b2c0a37146104f5578063a4a78f0c146105085761034f565b8063472b43f31161021c578063571ac8b0116101d0578063639d71a9116101b5578063639d71a9146104b857806368e0d4e1146104cb578063791b98bc146104e05761034f565b8063571ac8b0146104925780635ae401dc146104a55761034f565b80634961699711610201578063496169971461044a5780634aa4a4fc1461045d5780635023b4df1461047f5761034f565b8063472b43f31461042457806349404b7c146104375761034f565b80631c58db4f116102735780633068c554116102585780633068c554146103eb57806342712a67146103fe5780634659a494146104115761034f565b80631c58db4f146103b85780631f0464d1146103cb5761034f565b806304e45aaf1461035457806309b813461461037d57806311ed56c91461039057806312210e8a146103b05761034f565b3661034f573373ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000161461034d57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600960248201527f4e6f742057455448390000000000000000000000000000000000000000000000604482015290519081900360640190fd5b005b600080fd5b610367610362366004615543565b6106b4565b6040516103749190615dfd565b60405180910390f35b61036761038b3660046155de565b61083c565b6103a361039e366004615638565b61091c565b6040516103749190615b7a565b61034d610b28565b61034d6103c63660046157bb565b610b3a565b6103de6103d93660046152a7565b610bbe565b6040516103749190615afc565b61034d6103f93660046150d8565b610c48565b61036761040c366004615885565b610c5b565b61034d61041f366004615121565b610e35565b610367610432366004615885565b610ef5565b61034d6104453660046157eb565b6112a9565b61034d6104583660046157bb565b61146f565b34801561046957600080fd5b5061047261147c565b6040516103749190615a3c565b61036761048d366004615616565b6114a0565b61034d6104a0366004614feb565b611589565b6103de6104b33660046152a7565b6115bc565b61034d6104c6366004614feb565b611635565b3480156104d757600080fd5b50610472611649565b3480156104ec57600080fd5b5061047261166d565b61034d61050336600461581a565b611691565b61034d610516366004615121565b6118a7565b61034d610529366004614feb565b61197c565b6103de61053c36600461517c565b6119ba565b6103a361054f3660046152f1565b611b14565b61036761056236600461549d565b611bd2565b61034d610575366004615121565b611d95565b34801561058657600080fd5b50610472611e4a565b61034d61059d366004614feb565b611990565b61034d6105b0366004615858565b611e6e565b3480156105c157600080fd5b506105d56105d036600461500e565b611e7a565b6040516103749190615b8d565b61034d6105f0366004615039565b612027565b61034d61060336600461507a565b61213e565b61034d61061636600461500e565b6122a4565b34801561062757600080fd5b5061034d6106363660046151bc565b6122b3565b6103a3610649366004615627565b612305565b34801561065a57600080fd5b5061034d610669366004615324565b6123a5565b61034d61067c36600461500e565b6123f6565b61034d61068f366004615121565b612402565b3480156106a057600080fd5b5061034d6106af3660046153b8565b61249a565b600080600083608001511415610771575081516040517f70a0823100000000000000000000000000000000000000000000000000000000815260019173ffffffffffffffffffffffffffffffffffffffff16906370a082319061071b903090600401615a3c565b60206040518083038186803b15801561073357600080fd5b505afa158015610747573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061076b91906157d3565b60808401525b6107ed836080015184606001518560c001516040518060400160405280886000015189604001518a602001516040516020016107af939291906159aa565b6040516020818303038152906040528152602001866107ce57336107d0565b305b73ffffffffffffffffffffffffffffffffffffffff1690526125de565b91508260a00151821015610836576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161082d90615c7d565b60405180910390fd5b50919050565b60006108b0604083018035906108559060208601614feb565b604080518082019091526000908061086d8880615e41565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152505050908252503360209091015261278f565b505060005460608201358111156108f3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161082d90615c0f565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600055919050565b604080516101608101909152606090610b20907f8831645600000000000000000000000000000000000000000000000000000000908061095f6020870187614feb565b73ffffffffffffffffffffffffffffffffffffffff16815260200185602001602081019061098d9190614feb565b73ffffffffffffffffffffffffffffffffffffffff1681526020016109b860608701604088016157a1565b62ffffff1681526020016109d26080870160608801615379565b60020b81526020016109ea60a0870160808801615379565b60020b8152602090810190610a0a90610a0590880188614feb565b612976565b8152602001610a25866020016020810190610a059190614feb565b815260a0860135602082015260c08601356040820152606001610a4f610100870160e08801614feb565b73ffffffffffffffffffffffffffffffffffffffff1681526020017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff815250604051602401610a9e9190615cf8565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff0000000000000000000000000000000000000000000000000000000090931692909217909152611b14565b90505b919050565b4715610b3857610b383347612a1b565b565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663d0e30db0826040518263ffffffff1660e01b81526004016000604051808303818588803b158015610ba257600080fd5b505af1158015610bb6573d6000803e3d6000fd5b505050505050565b60608380600143034014610c3357604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600960248201527f426c6f636b686173680000000000000000000000000000000000000000000000604482015290519081900360640190fd5b610c3d84846119ba565b91505b509392505050565b610c55848433858561213e565b50505050565b6000610cbb7f000000000000000000000000000000000000000000000000000000000000000087868680806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250612b6992505050565b600081518110610cc757fe5b6020026020010151905084811115610d0b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161082d90615c0f565b610da484846000818110610d1b57fe5b9050602002016020810190610d309190614feb565b33610d9e7f000000000000000000000000000000000000000000000000000000000000000088886000818110610d6257fe5b9050602002016020810190610d779190614feb565b89896001818110610d8457fe5b9050602002016020810190610d999190614feb565b612ca2565b84612d8d565b73ffffffffffffffffffffffffffffffffffffffff821660011415610dcb57339150610dee565b73ffffffffffffffffffffffffffffffffffffffff821660021415610dee573091505b610e2c848480806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250869250612f6b915050565b95945050505050565b604080517f8fcbaf0c00000000000000000000000000000000000000000000000000000000815233600482015230602482015260448101879052606481018690526001608482015260ff851660a482015260c4810184905260e48101839052905173ffffffffffffffffffffffffffffffffffffffff881691638fcbaf0c9161010480830192600092919082900301818387803b158015610ed557600080fd5b505af1158015610ee9573d6000803e3d6000fd5b50505050505050505050565b60008086610fab575060018484600081610f0b57fe5b9050602002016020810190610f209190614feb565b73ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610f589190615a3c565b60206040518083038186803b158015610f7057600080fd5b505afa158015610f84573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fa891906157d3565b96505b61103685856000818110610fbb57fe5b9050602002016020810190610fd09190614feb565b82610fdb5733610fdd565b305b6110307f00000000000000000000000000000000000000000000000000000000000000008989600081811061100e57fe5b90506020020160208101906110239190614feb565b8a8a6001818110610d8457fe5b8a612d8d565b73ffffffffffffffffffffffffffffffffffffffff83166001141561105d57339250611080565b73ffffffffffffffffffffffffffffffffffffffff831660021415611080573092505b600085857fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81018181106110b057fe5b90506020020160208101906110c59190614feb565b73ffffffffffffffffffffffffffffffffffffffff166370a08231856040518263ffffffff1660e01b81526004016110fd9190615a3c565b60206040518083038186803b15801561111557600080fd5b505afa158015611129573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061114d91906157d3565b905061118d868680806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250889250612f6b915050565b6112628187877fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81018181106111bf57fe5b90506020020160208101906111d49190614feb565b73ffffffffffffffffffffffffffffffffffffffff166370a08231876040518263ffffffff1660e01b815260040161120c9190615a3c565b60206040518083038186803b15801561122457600080fd5b505afa158015611238573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061125c91906157d3565b90613270565b92508683101561129e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161082d90615c7d565b505095945050505050565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b15801561133257600080fd5b505afa158015611346573d6000803e3d6000fd5b505050506040513d602081101561135c57600080fd5b50519050828110156113cf57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601260248201527f496e73756666696369656e742057455448390000000000000000000000000000604482015290519081900360640190fd5b801561146a577f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16632e1a7d4d826040518263ffffffff1660e01b815260040180828152602001915050600060405180830381600087803b15801561144857600080fd5b505af115801561145c573d6000803e3d6000fd5b5050505061146a8282612a1b565b505050565b61147981336112a9565b50565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000611549608083018035906114b99060608601614feb565b6114c960e0860160c08701614feb565b60405180604001604052808760200160208101906114e79190614feb565b6114f760608a0160408b016157a1565b61150460208b018b614feb565b604051602001611516939291906159aa565b60405160208183030381529060405281526020013373ffffffffffffffffffffffffffffffffffffffff1681525061278f565b90508160a001358111156108f3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161082d90615c0f565b6115b3817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff613280565b61147957600080fd5b606083806115c86133cc565b1115610c3357604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601360248201527f5472616e73616374696f6e20746f6f206f6c6400000000000000000000000000604482015290519081900360640190fd5b611640816000613280565b61158957600080fd5b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000821180156116a2575060648211155b6116ab57600080fd5b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b15801561173457600080fd5b505afa158015611748573d6000803e3d6000fd5b505050506040513d602081101561175e57600080fd5b50519050848110156117d157604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601260248201527f496e73756666696369656e742057455448390000000000000000000000000000604482015290519081900360640190fd5b80156118a0577f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16632e1a7d4d826040518263ffffffff1660e01b815260040180828152602001915050600060405180830381600087803b15801561184a57600080fd5b505af115801561185e573d6000803e3d6000fd5b50505050600061271061187a85846133d090919063ffffffff16565b8161188157fe5b0490508015611894576118948382612a1b565b610bb685828403612a1b565b5050505050565b604080517fdd62ed3e00000000000000000000000000000000000000000000000000000000815233600482015230602482015290517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9173ffffffffffffffffffffffffffffffffffffffff89169163dd62ed3e91604480820192602092909190829003018186803b15801561193c57600080fd5b505afa158015611950573d6000803e3d6000fd5b505050506040513d602081101561196657600080fd5b50511015610bb657610bb6868686868686610e35565b611987816000613280565b61199057600080fd5b6115b3817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe613280565b60608167ffffffffffffffff811180156119d357600080fd5b50604051908082528060200260200182016040528015611a0757816020015b60608152602001906001900390816119f25790505b50905060005b82811015611b0d5760008030868685818110611a2557fe5b9050602002810190611a379190615e41565b604051611a45929190615a10565b600060405180830381855af49150503d8060008114611a80576040519150601f19603f3d011682016040523d82523d6000602084013e611a85565b606091505b509150915081611aeb57604481511015611a9e57600080fd5b60048101905080806020019051810190611ab89190615433565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161082d9190615b7a565b80848481518110611af857fe5b60209081029190910101525050600101611a0d565b5092915050565b606060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1683604051611b5d9190615a20565b6000604051808303816000865af19150503d8060008114611b9a576040519150601f19603f3d011682016040523d82523d6000602084013e611b9f565b606091505b50925090508061083657604482511015611bb857600080fd5b60048201915081806020019051810190611ab89190615433565b600080600083604001511415611ca357600190506000611bf584600001516133f4565b50506040517f70a0823100000000000000000000000000000000000000000000000000000000815290915073ffffffffffffffffffffffffffffffffffffffff8216906370a0823190611c4c903090600401615a3c565b60206040518083038186803b158015611c6457600080fd5b505afa158015611c78573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c9c91906157d3565b6040850152505b600081611cb05733611cb2565b305b90505b6000611cc48560000151613425565b9050611d1d856040015182611cdd578660200151611cdf565b305b60006040518060400160405280611cf98b6000015161342d565b81526020018773ffffffffffffffffffffffffffffffffffffffff168152506125de565b60408601528015611d3d578451309250611d369061343c565b8552611d4a565b8460400151935050611d50565b50611cb5565b8360600151831015611d8e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161082d90615c7d565b5050919050565b604080517fdd62ed3e0000000000000000000000000000000000000000000000000000000081523360048201523060248201529051869173ffffffffffffffffffffffffffffffffffffffff89169163dd62ed3e91604480820192602092909190829003018186803b158015611e0a57600080fd5b505afa158015611e1e573d6000803e3d6000fd5b505050506040513d6020811015611e3457600080fd5b50511015610bb657610bb6868686868686612402565b7f000000000000000000000000000000000000000000000000000000000000000081565b61146a83338484611691565b6000818373ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e307f00000000000000000000000000000000000000000000000000000000000000006040518363ffffffff1660e01b8152600401611ed8929190615a5d565b60206040518083038186803b158015611ef057600080fd5b505afa158015611f04573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f2891906157d3565b10611f3557506000612021565b611f5f837fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff613280565b15611f6c57506001612021565b611f96837ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe613280565b15611fa357506002612021565b611fae836000613280565b611fb757600080fd5b611fe1837fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff613280565b15611fee57506003612021565b612018837ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe613280565b1561034f575060045b92915050565b60008373ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b15801561209057600080fd5b505afa1580156120a4573d6000803e3d6000fd5b505050506040513d60208110156120ba57600080fd5b505190508281101561212d57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601260248201527f496e73756666696369656e7420746f6b656e0000000000000000000000000000604482015290519081900360640190fd5b8015610c5557610c55848383613471565b60008211801561214f575060648211155b61215857600080fd5b60008573ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b1580156121c157600080fd5b505afa1580156121d5573d6000803e3d6000fd5b505050506040513d60208110156121eb57600080fd5b505190508481101561225e57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601260248201527f496e73756666696369656e7420746f6b656e0000000000000000000000000000604482015290519081900360640190fd5b8015610bb657600061271061227383866133d0565b8161227a57fe5b049050801561228e5761228e878483613471565b61229b8786838503613471565b50505050505050565b6122af828233612027565b5050565b6000806122c1868685613646565b915091508362ffffff1681830312610bb6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161082d90615c46565b6060610b2063219f5d1760e01b6040518060c001604052808560400135815260200161233d866000016020810190610a059190614feb565b8152602001612358866020016020810190610a059190614feb565b815260200185606001358152602001856080013581526020017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff815250604051602401610a9e9190615cb4565b6000806123b28584613859565b915091508362ffffff16818303126118a0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161082d90615c46565b6122af82333084613ae1565b604080517fd505accf000000000000000000000000000000000000000000000000000000008152336004820152306024820152604481018790526064810186905260ff8516608482015260a4810184905260c48101839052905173ffffffffffffffffffffffffffffffffffffffff88169163d505accf9160e480830192600092919082900301818387803b158015610ed557600080fd5b60008413806124a95750600083135b6124b257600080fd5b60006124c08284018461564a565b905060008060006124d484600001516133f4565b9250925092506125067f0000000000000000000000000000000000000000000000000000000000000000848484613cbe565b5060008060008a13612547578473ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161089612578565b8373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff16108a5b915091508115612597576125928587602001513384612d8d565b610ee9565b85516125a290613425565b156125c75785516125b29061343c565b86526125c1813360008961278f565b50610ee9565b80600081905550610ee98487602001513384612d8d565b600073ffffffffffffffffffffffffffffffffffffffff8416600114156126075733935061262a565b73ffffffffffffffffffffffffffffffffffffffff84166002141561262a573093505b600080600061263c85600001516133f4565b9194509250905073ffffffffffffffffffffffffffffffffffffffff8083169084161060008061266d868686613cd4565b73ffffffffffffffffffffffffffffffffffffffff1663128acb088b856126938f613d12565b73ffffffffffffffffffffffffffffffffffffffff8e16156126b5578d6126db565b876126d45773fffd8963efd1fc6a506488495d951d5263988d256126db565b6401000276a45b8d6040516020016126ec9190615da6565b6040516020818303038152906040526040518663ffffffff1660e01b815260040161271b959493929190615a84565b6040805180830381600087803b15801561273457600080fd5b505af1158015612748573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061276c9190615395565b915091508261277b578161277d565b805b6000039b9a5050505050505050505050565b600073ffffffffffffffffffffffffffffffffffffffff8416600114156127b8573393506127db565b73ffffffffffffffffffffffffffffffffffffffff8416600214156127db573093505b60008060006127ed85600001516133f4565b9194509250905073ffffffffffffffffffffffffffffffffffffffff8084169083161060008061281e858786613cd4565b73ffffffffffffffffffffffffffffffffffffffff1663128acb088b856128448f613d12565b60000373ffffffffffffffffffffffffffffffffffffffff8e1615612869578d61288f565b876128885773fffd8963efd1fc6a506488495d951d5263988d2561288f565b6401000276a45b8d6040516020016128a09190615da6565b6040516020818303038152906040526040518663ffffffff1660e01b81526004016128cf959493929190615a84565b6040805180830381600087803b1580156128e857600080fd5b505af11580156128fc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906129209190615395565b9150915060008361293557818360000361293b565b82826000035b909850905073ffffffffffffffffffffffffffffffffffffffff8a16612967578b811461296757600080fd5b50505050505050949350505050565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815260009073ffffffffffffffffffffffffffffffffffffffff8316906370a08231906129cb903090600401615a3c565b60206040518083038186803b1580156129e357600080fd5b505afa1580156129f7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b2091906157d3565b6040805160008082526020820190925273ffffffffffffffffffffffffffffffffffffffff84169083906040518082805190602001908083835b60208310612a9257805182527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe09092019160209182019101612a55565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d8060008114612af4576040519150601f19603f3d011682016040523d82523d6000602084013e612af9565b606091505b505090508061146a57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600360248201527f5354450000000000000000000000000000000000000000000000000000000000604482015290519081900360640190fd5b6060600282511015612b7a57600080fd5b815167ffffffffffffffff81118015612b9257600080fd5b50604051908082528060200260200182016040528015612bbc578160200160208202803683370190505b5090508281600183510381518110612bd057fe5b602090810291909101015281517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff015b8015610c4057600080612c3d87866001860381518110612c1c57fe5b6020026020010151878681518110612c3057fe5b6020026020010151613d44565b91509150612c5f848481518110612c5057fe5b60200260200101518383613e2c565b846001850381518110612c6e57fe5b602090810291909101015250507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff01612c00565b6000806000612cb18585613f02565b604080517fffffffffffffffffffffffffffffffffffffffff000000000000000000000000606094851b811660208084019190915293851b81166034830152825160288184030181526048830184528051908501207fff0000000000000000000000000000000000000000000000000000000000000060688401529a90941b9093166069840152607d8301989098527f96e8ac4277198ff8b6f785478aa9a39f403cb768dd02cbee326c3e7da348845f609d808401919091528851808403909101815260bd909201909752805196019590952095945050505050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16148015612de85750804710155b15612f31577f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663d0e30db0826040518263ffffffff1660e01b81526004016000604051808303818588803b158015612e5557600080fd5b505af1158015612e69573d6000803e3d6000fd5b50505050507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb83836040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b158015612eff57600080fd5b505af1158015612f13573d6000803e3d6000fd5b505050506040513d6020811015612f2957600080fd5b50610c559050565b73ffffffffffffffffffffffffffffffffffffffff8316301415612f5f57612f5a848383613471565b610c55565b610c5584848484613ae1565b60005b600183510381101561146a57600080848381518110612f8957fe5b6020026020010151858460010181518110612fa057fe5b6020026020010151915091506000612fb88383613f02565b5090506000612fe87f00000000000000000000000000000000000000000000000000000000000000008585612ca2565b90506000806000808473ffffffffffffffffffffffffffffffffffffffff16630902f1ac6040518163ffffffff1660e01b815260040160606040518083038186803b15801561303657600080fd5b505afa15801561304a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061306e91906156da565b506dffffffffffffffffffffffffffff1691506dffffffffffffffffffffffffffff1691506000808773ffffffffffffffffffffffffffffffffffffffff168a73ffffffffffffffffffffffffffffffffffffffff16146130d05782846130d3565b83835b91509150613114828b73ffffffffffffffffffffffffffffffffffffffff166370a082318a6040518263ffffffff1660e01b815260040161120c9190615a3c565b9550613121868383613fa7565b9450505050506000808573ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff161461316557826000613169565b6000835b91509150600060028c51038a10613180578a6131c1565b6131c17f0000000000000000000000000000000000000000000000000000000000000000898e8d600201815181106131b457fe5b6020026020010151612ca2565b604080516000815260208101918290527f022c0d9f0000000000000000000000000000000000000000000000000000000090915290915073ffffffffffffffffffffffffffffffffffffffff87169063022c0d9f906132299086908690869060248101615e06565b600060405180830381600087803b15801561324357600080fd5b505af1158015613257573d6000803e3d6000fd5b50506001909b019a50612f6e9950505050505050505050565b8082038281111561202157600080fd5b60008060008473ffffffffffffffffffffffffffffffffffffffff1663095ea7b360e01b7f0000000000000000000000000000000000000000000000000000000000000000866040516024016132d7929190615ad6565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529181526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff000000000000000000000000000000000000000000000000000000009094169390931790925290516133609190615a20565b6000604051808303816000865af19150503d806000811461339d576040519150601f19603f3d011682016040523d82523d6000602084013e6133a2565b606091505b5091509150818015610e2c575080511580610e2c575080806020019051810190610e2c919061528d565b4290565b60008215806133eb575050818102818382816133e857fe5b04145b61202157600080fd5b60008080613402848261407d565b925061340f84601461417d565b905061341c84601761407d565b91509193909250565b516042111590565b6060610b20826000602b61426d565b8051606090610b209083906017907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe90161426d565b6040805173ffffffffffffffffffffffffffffffffffffffff8481166024830152604480830185905283518084039091018152606490920183526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fa9059cbb000000000000000000000000000000000000000000000000000000001781529251825160009485949389169392918291908083835b6020831061354657805182527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe09092019160209182019101613509565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d80600081146135a8576040519150601f19603f3d011682016040523d82523d6000602084013e6135ad565b606091505b50915091508180156135db5750805115806135db57508080602001905160208110156135d857600080fd5b50515b6118a057604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600260248201527f5354000000000000000000000000000000000000000000000000000000000000604482015290519081900360640190fd5b600080835185511461365757600080fd5b6000855167ffffffffffffffff8111801561367157600080fd5b506040519080825280602002602001820160405280156136ab57816020015b613698614e34565b8152602001906001900390816136905790505b5090506000865167ffffffffffffffff811180156136c857600080fd5b5060405190808252806020026020018201604052801561370257816020015b6136ef614e34565b8152602001906001900390816136e75790505b50905060005b8751811015613832576000806137318a848151811061372357fe5b602002602001015189613859565b9150915061373e82614454565b85848151811061374a57fe5b60200260200101516000019060020b908160020b8152505061376b81614454565b84848151811061377757fe5b60200260200101516000019060020b908160020b8152505088838151811061379b57fe5b60200260200101518584815181106137af57fe5b6020026020010151602001906fffffffffffffffffffffffffffffffff1690816fffffffffffffffffffffffffffffffff16815250508883815181106137f157fe5b602002602001015184848151811061380557fe5b6020908102919091018101516fffffffffffffffffffffffffffffffff9092169101525050600101613708565b5061383c82614465565b60020b935061384a81614465565b60020b92505050935093915050565b6000806000806138688661454d565b90506000805b82811015613a865760008060006138848b6133f4565b9250925092506000613897848484613cd4565b905060008063ffffffff8d166138c0576138b083614578565b600291820b9350900b9050613962565b6138ca838e614810565b8160020b915050809250508273ffffffffffffffffffffffffffffffffffffffff16633850c7bd6040518163ffffffff1660e01b815260040160e06040518083038186803b15801561391b57600080fd5b505afa15801561392f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906139539190615715565b50505060029290920b93505050505b600189038714156139a3578473ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff161099506139b2565b6139ac8e61343c565b9d508597505b6000871580613a5357508673ffffffffffffffffffffffffffffffffffffffff168973ffffffffffffffffffffffffffffffffffffffff1610613a23578673ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff1610613a53565b8573ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff16105b90508015613a68579b82019b9a81019a613a73565b828d039c50818c039b505b50506001909501945061386e9350505050565b5082613ad7577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff850294507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff840293505b5050509250929050565b6040805173ffffffffffffffffffffffffffffffffffffffff85811660248301528481166044830152606480830185905283518084039091018152608490920183526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f23b872dd00000000000000000000000000000000000000000000000000000000178152925182516000948594938a169392918291908083835b60208310613bbe57805182527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe09092019160209182019101613b81565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d8060008114613c20576040519150601f19603f3d011682016040523d82523d6000602084013e613c25565b606091505b5091509150818015613c53575080511580613c535750808060200190516020811015613c5057600080fd5b50515b610bb657604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600360248201527f5354460000000000000000000000000000000000000000000000000000000000604482015290519081900360640190fd5b6000610e2c85613ccf868686614c41565b614cbe565b6000613d0a7f0000000000000000000000000000000000000000000000000000000000000000613d05868686614c41565b614cee565b949350505050565b60007f80000000000000000000000000000000000000000000000000000000000000008210613d4057600080fd5b5090565b6000806000613d538585613f02565b509050600080613d64888888612ca2565b73ffffffffffffffffffffffffffffffffffffffff16630902f1ac6040518163ffffffff1660e01b815260040160606040518083038186803b158015613da957600080fd5b505afa158015613dbd573d6000803e3d6000fd5b505050506040513d6060811015613dd357600080fd5b5080516020909101516dffffffffffffffffffffffffffff918216935016905073ffffffffffffffffffffffffffffffffffffffff87811690841614613e1a578082613e1d565b81815b90999098509650505050505050565b6000808411613e9c57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601a60248201527f494e53554646494349454e545f4f55545055545f414d4f554e54000000000000604482015290519081900360640190fd5b600083118015613eac5750600082115b613eb557600080fd5b6000613ecd6103e8613ec786886133d0565b906133d0565b90506000613ee16103e5613ec78689613270565b9050613ef86001828481613ef157fe5b0490614e24565b9695505050505050565b6000808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161415613f3e57600080fd5b8273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1610613f78578284613f7b565b83835b909250905073ffffffffffffffffffffffffffffffffffffffff8216613fa057600080fd5b9250929050565b600080841161401757604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f494e53554646494349454e545f494e5055545f414d4f554e5400000000000000604482015290519081900360640190fd5b6000831180156140275750600082115b61403057600080fd5b600061403e856103e56133d0565b9050600061404c82856133d0565b9050600061406683614060886103e86133d0565b90614e24565b905080828161407157fe5b04979650505050505050565b6000818260140110156140f157604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601260248201527f746f416464726573735f6f766572666c6f770000000000000000000000000000604482015290519081900360640190fd5b816014018351101561416457604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601560248201527f746f416464726573735f6f75744f66426f756e64730000000000000000000000604482015290519081900360640190fd5b5001602001516c01000000000000000000000000900490565b6000818260030110156141f157604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f746f55696e7432345f6f766572666c6f77000000000000000000000000000000604482015290519081900360640190fd5b816003018351101561426457604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f746f55696e7432345f6f75744f66426f756e6473000000000000000000000000604482015290519081900360640190fd5b50016003015190565b60608182601f0110156142e157604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f736c6963655f6f766572666c6f77000000000000000000000000000000000000604482015290519081900360640190fd5b82828401101561435257604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f736c6963655f6f766572666c6f77000000000000000000000000000000000000604482015290519081900360640190fd5b818301845110156143c457604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f736c6963655f6f75744f66426f756e6473000000000000000000000000000000604482015290519081900360640190fd5b6060821580156143e3576040519150600082526020820160405261444b565b6040519150601f8416801560200281840101858101878315602002848b0101015b8183101561441c578051835260209283019201614404565b5050858452601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016604052505b50949350505050565b80600281900b8114610b2357600080fd5b6000806000805b84518110156144fa5784818151811061448157fe5b6020026020010151602001516fffffffffffffffffffffffffffffffff168582815181106144ab57fe5b60200260200101516000015160020b02830192508481815181106144cb57fe5b6020026020010151602001516fffffffffffffffffffffffffffffffff1682019150808060010191505061446c565b5080828161450457fe5b05925060008212801561451f575080828161451b57fe5b0715155b15611d8e5750507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff01919050565b5160177fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffec9091010490565b6000806000808473ffffffffffffffffffffffffffffffffffffffff16633850c7bd6040518163ffffffff1660e01b815260040160e06040518083038186803b1580156145c457600080fd5b505afa1580156145d8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906145fc9190615715565b50939750919550935050600161ffff84161191506146489050576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161082d90615bd8565b6000808673ffffffffffffffffffffffffffffffffffffffff1663252c09d7856040518263ffffffff1660e01b81526004016146849190615dee565b60806040518083038186803b15801561469c57600080fd5b505afa1580156146b0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906146d491906158e0565b5050915091506146e26133cc565b63ffffffff168263ffffffff16146146fc57849550614807565b60008361ffff1660018561ffff168761ffff1601038161471857fe5b06905060008060008a73ffffffffffffffffffffffffffffffffffffffff1663252c09d7856040518263ffffffff1660e01b81526004016147599190615dfd565b60806040518083038186803b15801561477157600080fd5b505afa158015614785573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906147a991906158e0565b93505092509250806147e7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161082d90615ba1565b82860363ffffffff811683870360060b816147fe57fe5b059a5050505050505b50505050915091565b60008063ffffffff831661488557604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600260248201527f4250000000000000000000000000000000000000000000000000000000000000604482015290519081900360640190fd5b60408051600280825260608201835260009260208301908036833701905050905083816000815181106148b457fe5b602002602001019063ffffffff16908163ffffffff16815250506000816001815181106148dd57fe5b63ffffffff9092166020928302919091018201526040517f883bdbfd00000000000000000000000000000000000000000000000000000000815260048101828152835160248301528351600093849373ffffffffffffffffffffffffffffffffffffffff8b169363883bdbfd9388939192839260449091019185820191028083838b5b83811015614978578181015183820152602001614960565b505050509050019250505060006040518083038186803b15801561499b57600080fd5b505afa1580156149af573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016820160409081528110156149f657600080fd5b8101908080516040519392919084640100000000821115614a1657600080fd5b908301906020820185811115614a2b57600080fd5b8251866020820283011164010000000082111715614a4857600080fd5b82525081516020918201928201910280838360005b83811015614a75578181015183820152602001614a5d565b5050505090500160405260200180516040519392919084640100000000821115614a9e57600080fd5b908301906020820185811115614ab357600080fd5b8251866020820283011164010000000082111715614ad057600080fd5b82525081516020918201928201910280838360005b83811015614afd578181015183820152602001614ae5565b5050505090500160405250505091509150600082600081518110614b1d57fe5b602002602001015183600181518110614b3257fe5b6020026020010151039050600082600081518110614b4c57fe5b602002602001015183600181518110614b6157fe5b60200260200101510390508763ffffffff168260060b81614b7e57fe5b05965060008260060b128015614ba857508763ffffffff168260060b81614ba157fe5b0760060b15155b15614bd3577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff909601955b63ffffffff881673ffffffffffffffffffffffffffffffffffffffff0277ffffffffffffffffffffffffffffffffffffffff00000000602083901b1677ffffffffffffffffffffffffffffffffffffffffffffffff821681614c3157fe5b0496505050505050509250929050565b614c49614e4b565b8273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161115614c81579192915b506040805160608101825273ffffffffffffffffffffffffffffffffffffffff948516815292909316602083015262ffffff169181019190915290565b6000614cca8383614cee565b90503373ffffffffffffffffffffffffffffffffffffffff82161461202157600080fd5b6000816020015173ffffffffffffffffffffffffffffffffffffffff16826000015173ffffffffffffffffffffffffffffffffffffffff1610614d3057600080fd5b508051602080830151604093840151845173ffffffffffffffffffffffffffffffffffffffff94851681850152939091168385015262ffffff166060808401919091528351808403820181526080840185528051908301207fff0000000000000000000000000000000000000000000000000000000000000060a085015294901b7fffffffffffffffffffffffffffffffffffffffff0000000000000000000000001660a183015260b58201939093527fe34f199b19b2b4f47f68442619d555527d244f78a3297ea89325f843f87b8b5460d5808301919091528251808303909101815260f5909101909152805191012090565b8082018281101561202157600080fd5b604080518082019091526000808252602082015290565b604080516060810182526000808252602082018190529181019190915290565b8035610b2381615f52565b60008083601f840112614e87578182fd5b50813567ffffffffffffffff811115614e9e578182fd5b6020830191508360208083028501011115613fa057600080fd5b600082601f830112614ec8578081fd5b81356020614edd614ed883615ec8565b615ea4565b8281528181019085830183850287018401881015614ef9578586fd5b855b85811015614f345781356fffffffffffffffffffffffffffffffff81168114614f22578788fd5b84529284019290840190600101614efb565b5090979650505050505050565b80518015158114610b2357600080fd5b600082601f830112614f61578081fd5b8135614f6f614ed882615ee6565b818152846020838601011115614f83578283fd5b816020850160208301379081016020019190915292915050565b80516dffffffffffffffffffffffffffff81168114610b2357600080fd5b805161ffff81168114610b2357600080fd5b803562ffffff81168114610b2357600080fd5b8035610b2381615f83565b600060208284031215614ffc578081fd5b813561500781615f52565b9392505050565b60008060408385031215615020578081fd5b823561502b81615f52565b946020939093013593505050565b60008060006060848603121561504d578081fd5b833561505881615f52565b925060208401359150604084013561506f81615f52565b809150509250925092565b600080600080600060a08688031215615091578283fd5b853561509c81615f52565b94506020860135935060408601356150b381615f52565b92506060860135915060808601356150ca81615f52565b809150509295509295909350565b600080600080608085870312156150ed578182fd5b84356150f881615f52565b93506020850135925060408501359150606085013561511681615f52565b939692955090935050565b60008060008060008060c08789031215615139578384fd5b863561514481615f52565b95506020870135945060408701359350606087013561516281615f95565b9598949750929560808101359460a0909101359350915050565b6000806020838503121561518e578182fd5b823567ffffffffffffffff8111156151a4578283fd5b6151b085828601614e76565b90969095509350505050565b600080600080608085870312156151d1578182fd5b843567ffffffffffffffff808211156151e8578384fd5b818701915087601f8301126151fb578384fd5b8135602061520b614ed883615ec8565b82815281810190858301885b858110156152405761522e8e8684358b0101614f51565b84529284019290840190600101615217565b50909950505088013592505080821115615258578384fd5b5061526587828801614eb8565b93505061527460408601614fcd565b915061528260608601614fe0565b905092959194509250565b60006020828403121561529e578081fd5b61500782614f41565b6000806000604084860312156152bb578081fd5b83359250602084013567ffffffffffffffff8111156152d8578182fd5b6152e486828701614e76565b9497909650939450505050565b600060208284031215615302578081fd5b813567ffffffffffffffff811115615318578182fd5b613d0a84828501614f51565b600080600060608486031215615338578081fd5b833567ffffffffffffffff81111561534e578182fd5b61535a86828701614f51565b93505061536960208501614fcd565b9150604084013561506f81615f83565b60006020828403121561538a578081fd5b813561500781615f74565b600080604083850312156153a7578182fd5b505080516020909101519092909150565b600080600080606085870312156153cd578182fd5b8435935060208501359250604085013567ffffffffffffffff808211156153f2578384fd5b818701915087601f830112615405578384fd5b813581811115615413578485fd5b886020828501011115615424578485fd5b95989497505060200194505050565b600060208284031215615444578081fd5b815167ffffffffffffffff81111561545a578182fd5b8201601f8101841361546a578182fd5b8051615478614ed882615ee6565b81815285602083850101111561548c578384fd5b610e2c826020830160208601615f26565b6000602082840312156154ae578081fd5b813567ffffffffffffffff808211156154c5578283fd5b90830190608082860312156154d8578283fd5b6040516080810181811083821117156154ed57fe5b6040528235828111156154fe578485fd5b61550a87828601614f51565b8252506020830135915061551d82615f52565b816020820152604083013560408201526060830135606082015280935050505092915050565b600060e08284031215615554578081fd5b60405160e0810181811067ffffffffffffffff8211171561557157fe5b60405261557d83614e6b565b815261558b60208401614e6b565b602082015261559c60408401614fcd565b60408201526155ad60608401614e6b565b60608201526080830135608082015260a083013560a08201526155d260c08401614e6b565b60c08201529392505050565b6000602082840312156155ef578081fd5b813567ffffffffffffffff811115615605578182fd5b820160808185031215615007578182fd5b600060e08284031215610836578081fd5b600060a08284031215610836578081fd5b60006101008284031215610836578081fd5b60006020828403121561565b578081fd5b813567ffffffffffffffff80821115615672578283fd5b9083019060408286031215615685578283fd5b60405160408101818110838211171561569a57fe5b6040528235828111156156ab578485fd5b6156b787828601614f51565b825250602083013592506156ca83615f52565b6020810192909252509392505050565b6000806000606084860312156156ee578081fd5b6156f784614f9d565b925061570560208501614f9d565b9150604084015161506f81615f83565b600080600080600080600060e0888a03121561572f578485fd5b875161573a81615f52565b602089015190975061574b81615f74565b955061575960408901614fbb565b945061576760608901614fbb565b935061577560808901614fbb565b925060a088015161578581615f95565b915061579360c08901614f41565b905092959891949750929550565b6000602082840312156157b2578081fd5b61500782614fcd565b6000602082840312156157cc578081fd5b5035919050565b6000602082840312156157e4578081fd5b5051919050565b600080604083850312156157fd578182fd5b82359150602083013561580f81615f52565b809150509250929050565b6000806000806080858703121561582f578182fd5b84359350602085013561584181615f52565b925060408501359150606085013561511681615f52565b60008060006060848603121561586c578081fd5b8335925060208401359150604084013561506f81615f52565b60008060008060006080868803121561589c578283fd5b8535945060208601359350604086013567ffffffffffffffff8111156158c0578384fd5b6158cc88828901614e76565b90945092505060608601356150ca81615f52565b600080600080608085870312156158f5578182fd5b845161590081615f83565b8094505060208501518060060b8114615917578283fd5b604086015190935061592881615f52565b915061528260608601614f41565b73ffffffffffffffffffffffffffffffffffffffff169052565b60008151808452615968816020860160208601615f26565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b60020b9052565b62ffffff169052565b606093841b7fffffffffffffffffffffffffffffffffffffffff000000000000000000000000908116825260e89390931b7fffffff0000000000000000000000000000000000000000000000000000000000166014820152921b166017820152602b0190565b6000828483379101908152919050565b60008251615a32818460208701615f26565b9190910192915050565b73ffffffffffffffffffffffffffffffffffffffff91909116815260200190565b73ffffffffffffffffffffffffffffffffffffffff92831681529116602082015260400190565b600073ffffffffffffffffffffffffffffffffffffffff8088168352861515602084015285604084015280851660608401525060a06080830152615acb60a0830184615950565b979650505050505050565b73ffffffffffffffffffffffffffffffffffffffff929092168252602082015260400190565b6000602080830181845280855180835260408601915060408482028701019250838701855b82811015615b6d577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc0888603018452615b5b858351615950565b94509285019290850190600101615b21565b5092979650505050505050565b6000602082526150076020830184615950565b6020810160058310615b9b57fe5b91905290565b60208082526003908201527f4f4e490000000000000000000000000000000000000000000000000000000000604082015260600190565b60208082526003908201527f4e454f0000000000000000000000000000000000000000000000000000000000604082015260600190565b60208082526012908201527f546f6f206d756368207265717565737465640000000000000000000000000000604082015260600190565b60208082526002908201527f5444000000000000000000000000000000000000000000000000000000000000604082015260600190565b60208082526013908201527f546f6f206c6974746c6520726563656976656400000000000000000000000000604082015260600190565b600060c082019050825182526020830151602083015260408301516040830152606083015160608301526080830151608083015260a083015160a083015292915050565b600061016082019050615d0c828451615936565b6020830151615d1e6020840182615936565b506040830151615d3160408401826159a1565b506060830151615d44606084018261599a565b506080830151615d57608084018261599a565b5060a083015160a083015260c083015160c083015260e083015160e083015261010080840151818401525061012080840151615d9582850182615936565b505061014092830151919092015290565b600060208252825160406020840152615dc26060840182615950565b905073ffffffffffffffffffffffffffffffffffffffff60208501511660408401528091505092915050565b61ffff91909116815260200190565b90815260200190565b600085825284602083015273ffffffffffffffffffffffffffffffffffffffff8416604083015260806060830152613ef86080830184615950565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1843603018112615e75578283fd5b83018035915067ffffffffffffffff821115615e8f578283fd5b602001915036819003821315613fa057600080fd5b60405181810167ffffffffffffffff81118282101715615ec057fe5b604052919050565b600067ffffffffffffffff821115615edc57fe5b5060209081020190565b600067ffffffffffffffff821115615efa57fe5b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b60005b83811015615f41578181015183820152602001615f29565b83811115610c555750506000910152565b73ffffffffffffffffffffffffffffffffffffffff8116811461147957600080fd5b8060020b811461147957600080fd5b63ffffffff8116811461147957600080fd5b60ff8116811461147957600080fdfea164736f6c6343000706000a";let SwapRouter02__factory=class SwapRouter02__factory extends z.ContractFactory{constructor(e){super(tO,tk,e)}deploy(e,t,f,n,a){return super.deploy(e,t,f,n,a||{})}getDeployTransaction(e,t,f,n,a){return super.getDeployTransaction(e,t,f,n,a||{})}attach(e){return super.attach(e)}connect(e){return super.connect(e)}static createInterface(){return new X.vU(tO)}static connect(e,t){return new z.Contract(e,tO,t)}};SwapRouter02__factory.bytecode=tk,SwapRouter02__factory.abi=tO;let SwapRouterProvider=class SwapRouterProvider{constructor(e,t){this.multicall2Provider=e,this.chainId=t}async getApprovalType(e,t){var f,n;let a=[[e.currency.wrapped.address,e.quotient.toString()],[t.currency.wrapped.address,t.quotient.toString()]],i=await this.multicall2Provider.callSameFunctionOnContractWithMultipleParams({address:addresses_SWAP_ROUTER_02_ADDRESSES(this.chainId),contractInterface:SwapRouter02__factory.createInterface(),functionName:"getApprovalType",functionParams:a});if(!(null===(f=i.results[0])||void 0===f?void 0:f.success)||!(null===(n=i.results[1])||void 0===n?void 0:n.success))throw P.info({results:i.results},"Failed to get approval type from swap router for token in or token out"),Error("Failed to get approval type from swap router for token in or token out");let{result:r}=i.results[0],{result:o}=i.results[1];return{approvalTokenIn:r[0],approvalTokenOut:o[0]}}};f(72909),f(83104),(l=C||(C={})).QUICK="quick",l.FULL="full",l.ABI="abi";let TokenPropertiesProvider=class TokenPropertiesProvider{constructor(e,t,f,n=tt,a=600,i=600){this.chainId=e,this.tokenPropertiesCache=t,this.tokenFeeFetcher=f,this.allowList=n,this.positiveCacheEntryTTL=a,this.negativeCacheEntryTTL=i,this.CACHE_KEY=(e,t)=>`token-properties-${e}-${t}`}async getTokensProperties(e,t){let f={};if(!(null==t?void 0:t.enableFeeOnTransferFeeFetching)||this.chainId!==S.ChainId.MAINNET)return f;let n=[],a=this.buildAddressesRaw(e),i=await this.tokenPropertiesCache.batchGet(a);for(let e of a){let t=i[e];if(t){R.putMetric("TokenPropertiesProviderBatchGetCacheHit",1,p.Count);let n=t.tokenFeeResult,a=n&&(n.buyFeeBps||n.sellFeeBps);a?R.putMetric(`TokenPropertiesProviderCacheHitTokenFeeResultExists${a}`,1,p.Count):R.putMetric("TokenPropertiesProviderCacheHitTokenFeeResultNotExists",1,p.Count),f[e]=t}else this.allowList.has(e)?f[e]={tokenValidationResult:y.UNKN}:n.push(e)}if(n.length>0){let e={};try{e=await this.tokenFeeFetcher.fetchFees(n,t)}catch(e){P.error({err:e},`Error fetching fees for tokens ${n}`)}await Promise.all(n.map(t=>{let n=e[t],a=n&&(n.buyFeeBps||n.sellFeeBps);if(a){R.putMetric(`TokenPropertiesProviderTokenFeeResultCacheMissExists${a}`,1,p.Count);let e={tokenFeeResult:n,tokenValidationResult:y.FOT};return f[t]=e,R.putMetric("TokenPropertiesProviderBatchGetCacheMiss",1,p.Count),this.tokenPropertiesCache.set(this.CACHE_KEY(this.chainId,t),e,this.positiveCacheEntryTTL)}{R.putMetric("TokenPropertiesProviderTokenFeeResultCacheMissNotExists",1,p.Count);let e={tokenFeeResult:void 0,tokenValidationResult:void 0};return f[t]=e,this.tokenPropertiesCache.set(this.CACHE_KEY(this.chainId,t),e,this.negativeCacheEntryTTL)}}))}return f}buildAddressesRaw(e){let t=new Set;for(let f of e){let e=f.address.toLowerCase();t.has(e)||t.add(e)}return t}};var tR=f(78556),tM=f.n(tR);let uri_subgraph_provider_URISubgraphProvider=class uri_subgraph_provider_URISubgraphProvider{constructor(e,t,f=6e3,n=2){this.chainId=e,this.uri=t,this.timeout=f,this.retries=n}async getPools(){P.info({uri:this.uri},`About to get subgraph pools from URI ${this.uri}`);let e=[];return await e3()(async()=>{let t;let f=new(tM()),n=f.set(this.timeout).then(()=>{throw Error(`Timed out getting pools from subgraph: ${this.timeout}`)});try{t=await Promise.race([k().get(this.uri),n])}catch(e){throw e}finally{f.clear()}let{data:a,status:i}=t;if(200!=i)throw P.error({response:t},`Unabled to get pools from ${this.uri}.`),Error(`Unable to get pools from ${this.uri}`);P.info({uri:this.uri,chain:this.chainId},`Got subgraph pools from uri. Num: ${a.length}`),e=a},{retries:this.retries,onRetry:(e,t)=>{P.info({err:e},`Failed to get pools from uri ${this.uri}. Retry attempt: ${t}`)}}),e}};let CachingV2PoolProvider=class CachingV2PoolProvider{constructor(e,t,f){this.chainId=e,this.poolProvider=t,this.cache=f,this.POOL_KEY=(e,t)=>`pool-${e}-${t}`}async getPools(e,t){let f=new Set,n=[],a=[],i={},r=await (null==t?void 0:t.blockNumber);for(let[t,o]of e){let{poolAddress:e,token0:s,token1:d}=this.getPoolAddress(t,o);if(f.has(e))continue;f.add(e);let u=await this.cache.get(this.POOL_KEY(this.chainId,e));if(u&&(!r||r&&u.block==r)){i[e]=u.pair;continue}n.push([s,d]),a.push(e)}if(P.info({poolsFound:x().map(Object.values(i),e=>e.token0.symbol+" "+e.token1.symbol),poolsToGetTokenPairs:x().map(n,e=>e[0].symbol+" "+e[1].symbol)},`Found ${Object.keys(i).length} V2 pools already in local cache for block ${r}. About to get reserves for ${n.length} pools.`),a.length>0){let e=await this.poolProvider.getPools(n,{...t,enableFeeOnTransferFeeFetching:!0});for(let t of a){let f=e.getPoolByAddress(t);f&&(i[t]=f,this.cache.set(this.POOL_KEY(this.chainId,t),{pair:f,block:r}))}}return{getPool:(e,t)=>{let{poolAddress:f}=this.getPoolAddress(e,t);return i[f]},getPoolByAddress:e=>i[e],getAllPools:()=>Object.values(i)}}getPoolAddress(e,t){return this.poolProvider.getPoolAddress(e,t)}};let CachingV2SubgraphProvider=class CachingV2SubgraphProvider{constructor(e,t,f){this.chainId=e,this.subgraphProvider=t,this.cache=f,this.SUBGRAPH_KEY=e=>`subgraph-pools-v2-${e}`}async getPools(){let e=await this.cache.get(this.SUBGRAPH_KEY(this.chainId));if(e)return e;let t=await this.subgraphProvider.getPools();return await this.cache.set(this.SUBGRAPH_KEY(this.chainId),t),t}};let V2QuoteProvider=class V2QuoteProvider{constructor(){}async getQuotesManyExactIn(e,t,f){return this.getQuotes(e,t,S.TradeType.EXACT_INPUT,f)}async getQuotesManyExactOut(e,t,f){return this.getQuotes(e,t,S.TradeType.EXACT_OUTPUT,f)}async getQuotes(e,t,f,n){let a=[],i=[];for(let r of t){let t=[],o=0,s=0;for(let a of e)try{if(f==S.TradeType.EXACT_INPUT){let e=a.wrapped;for(let t of r.pairs)[e]=t.getOutputAmount(e,!0===n.enableFeeOnTransferFeeFetching);t.push({amount:a,quote:e5.O$.from(e.quotient.toString())})}else{let e=a.wrapped;for(let t=r.pairs.length-1;t>=0;t--){let f=r.pairs[t];[e]=f.getInputAmount(e,!0===n.enableFeeOnTransferFeeFetching)}t.push({amount:a,quote:e5.O$.from(e.quotient.toString())})}}catch(e){if(e instanceof Y.Le)o+=1,t.push({amount:a,quote:null});else if(e instanceof Y.CD)s+=1,t.push({amount:a,quote:null});else throw e}(o>0||s>0)&&i.push(`${[routes_routeToString(r)]} Input: ${o} Reserves: ${s} }`),a.push([r,t])}return i.length>0&&P.info({debugStrs:i},"Failed quotes for V2 routes"),{routesWithQuotes:a}}};let tx={[S.ChainId.MAINNET]:[U[S.ChainId.MAINNET],et,Z,$,ee],[S.ChainId.GOERLI]:[U[S.ChainId.GOERLI]],[S.ChainId.SEPOLIA]:[U[S.ChainId.SEPOLIA]],[S.ChainId.OPTIMISM]:[],[S.ChainId.ARBITRUM_ONE]:[],[S.ChainId.ARBITRUM_GOERLI]:[],[S.ChainId.OPTIMISM_GOERLI]:[],[S.ChainId.POLYGON]:[],[S.ChainId.POLYGON_MUMBAI]:[],[S.ChainId.CELO]:[],[S.ChainId.CELO_ALFAJORES]:[],[S.ChainId.GNOSIS]:[],[S.ChainId.MOONBEAM]:[],[S.ChainId.BNB]:[],[S.ChainId.AVALANCHE]:[],[S.ChainId.BASE_GOERLI]:[],[S.ChainId.BASE]:[]};let StaticV2SubgraphProvider=class StaticV2SubgraphProvider{constructor(e){this.chainId=e}async getPools(e,t){P.info("In static subgraph provider for V2");let f=tx[this.chainId],n=x().flatMap(f,e=>f.map(t=>[e,t]));e&&t&&n.push([e,t],...f.map(t=>[e,t]),...f.map(e=>[t,e]));let a=x()(n).filter(e=>!!(e[0]&&e[1])).filter(([e,t])=>e.address!==t.address&&!e.equals(t)).value(),i=new Set,r=x()(a).map(([e,t])=>{let f=Y.sO.getAddress(e,t);if(i.has(f))return;i.add(f);let[n,a]=e.sortsBefore(t)?[e,t]:[t,e];return{id:f,liquidity:"100",token0:{id:n.address},token1:{id:a.address},supply:100,reserve:100,reserveUSD:100}}).compact().value();return r}};f(10056),S.ChainId.MAINNET;let V2SubgraphProviderWithFallBacks=class V2SubgraphProviderWithFallBacks{constructor(e){this.fallbacks=e}async getPools(e,t,f){for(let n=0;n<this.fallbacks.length;n++){let a=this.fallbacks[n];try{let n=await a.getPools(e,t,f);return n}catch(e){P.info(`Failed to get subgraph pools for V2 from fallback #${n}`)}}throw Error("Failed to get subgraph pools from any providers")}};let CachingV3PoolProvider=class CachingV3PoolProvider{constructor(e,t,f){this.chainId=e,this.poolProvider=t,this.cache=f,this.POOL_KEY=(e,t,f)=>f?`pool-${e}-${t}-${f}`:`pool-${e}-${t}`}async getPools(e,t){let f=new Set,n=[],a=[],i={},r=await (null==t?void 0:t.blockNumber);for(let[t,o,s]of e){let{poolAddress:e,token0:d,token1:u}=this.getPoolAddress(t,o,s);if(f.has(e))continue;f.add(e);let l=await this.cache.get(this.POOL_KEY(this.chainId,e,r));if(l){R.putMetric("V3_INMEMORY_CACHING_POOL_HIT_IN_MEMORY",1,p.None),i[e]=l;continue}R.putMetric("V3_INMEMORY_CACHING_POOL_MISS_NOT_IN_MEMORY",1,p.None),n.push([d,u,s]),a.push(e)}if(P.info({poolsFound:x().map(Object.values(i),e=>`${e.token0.symbol} ${e.token1.symbol} ${e.fee}`),poolsToGetTokenPairs:x().map(n,e=>`${e[0].symbol} ${e[1].symbol} ${e[2]}`)},`Found ${Object.keys(i).length} V3 pools already in local cache. About to get liquidity and slot0s for ${n.length} pools.`),a.length>0){let e=await this.poolProvider.getPools(n,t);for(let t of a){let f=e.getPoolByAddress(t);f&&(i[t]=f,this.cache.set(this.POOL_KEY(this.chainId,t,r),f))}}return{getPool:(e,t,f)=>{let{poolAddress:n}=this.getPoolAddress(e,t,f);return i[n]},getPoolByAddress:e=>i[e],getAllPools:()=>Object.values(i)}}getPoolAddress(e,t,f){return this.poolProvider.getPoolAddress(e,t,f)}};let CachingV3SubgraphProvider=class CachingV3SubgraphProvider{constructor(e,t,f){this.chainId=e,this.subgraphProvider=t,this.cache=f,this.SUBGRAPH_KEY=e=>`subgraph-pools-${e}`}async getPools(){let e=await this.cache.get(this.SUBGRAPH_KEY(this.chainId));if(e)return e;let t=await this.subgraphProvider.getPools();return await this.cache.set(this.SUBGRAPH_KEY(this.chainId),t),t}};let tB={[S.ChainId.MAINNET]:[U[S.ChainId.MAINNET],et,Z,$,ee],[S.ChainId.GOERLI]:[U[S.ChainId.GOERLI],es,eo,ed,eu],[S.ChainId.SEPOLIA]:[U[S.ChainId.SEPOLIA],ei],[S.ChainId.OPTIMISM]:[U[S.ChainId.OPTIMISM],el,eh,ec,ep,eb],[S.ChainId.ARBITRUM_ONE]:[U[S.ChainId.ARBITRUM_ONE],eI,eE,ev,eC,eA],[S.ChainId.ARBITRUM_GOERLI]:[U[S.ChainId.ARBITRUM_GOERLI],ew],[S.ChainId.OPTIMISM_GOERLI]:[U[S.ChainId.OPTIMISM_GOERLI],em,eg,ey,eT],[S.ChainId.POLYGON]:[eO,eP,eS],[S.ChainId.POLYGON_MUMBAI]:[eR,U[S.ChainId.POLYGON_MUMBAI],ek],[S.ChainId.CELO]:[eF,eG,eV,eU],[S.ChainId.CELO_ALFAJORES]:[eq,eW,ej,eH],[S.ChainId.GNOSIS]:[U[S.ChainId.GNOSIS],ez,eK,eX],[S.ChainId.BNB]:[U[S.ChainId.BNB],ex,eB,eN,eL,eM,eD],[S.ChainId.AVALANCHE]:[U[S.ChainId.AVALANCHE],eQ,e_],[S.ChainId.MOONBEAM]:[U[S.ChainId.MOONBEAM],e$,eJ,e0],[S.ChainId.BASE_GOERLI]:[U[S.ChainId.BASE_GOERLI]],[S.ChainId.BASE]:[U[S.ChainId.BASE],eY]};let StaticV3SubgraphProvider=class StaticV3SubgraphProvider{constructor(e,t){this.chainId=e,this.poolProvider=t}async getPools(e,t,f){P.info("In static subgraph provider for V3");let n=tB[this.chainId],a=x().flatMap(n,e=>n.map(t=>[e,t]));e&&t&&a.push([e,t],...n.map(t=>[e,t]),...n.map(e=>[t,e]));let i=x()(a).filter(e=>!!(e[0]&&e[1])).filter(([e,t])=>e.address!==t.address&&!e.equals(t)).flatMap(([e,t])=>[[e,t,B.FeeAmount.LOWEST],[e,t,B.FeeAmount.LOW],[e,t,B.FeeAmount.MEDIUM],[e,t,B.FeeAmount.HIGH]]).value();P.info(`V3 Static subgraph provider about to get ${i.length} pools on-chain`);let r=await this.poolProvider.getPools(i,f),o=r.getAllPools(),s=new Set,d=x()(o).map(e=>{let{token0:t,token1:f,fee:n,liquidity:a}=e,i=B.Pool.getAddress(e.token0,e.token1,e.fee);if(s.has(i))return;s.add(i);let r=_().toNumber(a);return{id:i,feeTier:unparseFeeAmount(n),liquidity:a.toString(),token0:{id:t.address},token1:{id:f.address},tvlETH:r,tvlUSD:r}}).compact().value();return d}};S.ChainId.MAINNET,S.ChainId.OPTIMISM,S.ChainId.ARBITRUM_ONE,S.ChainId.POLYGON,S.ChainId.CELO,S.ChainId.GOERLI,S.ChainId.BNB,S.ChainId.AVALANCHE,S.ChainId.BASE;let V3SubgraphProviderWithFallBacks=class V3SubgraphProviderWithFallBacks{constructor(e){this.fallbacks=e}async getPools(e,t,f){for(let n=0;n<this.fallbacks.length;n++){let a=this.fallbacks[n];try{let n=await a.getPools(e,t,f);return n}catch(e){P.info(`Failed to get subgraph pools for V3 from fallback #${n}`)}}throw Error("Failed to get subgraph pools from any providers")}};var tD=f(63433);function _arrayLikeToArray(e,t){(null==t||t>e.length)&&(t=e.length);for(var f=0,n=Array(t);f<t;f++)n[f]=e[f];return n}function ownKeys(e,t){var f=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter(function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable})),f.push.apply(f,n)}return f}function _objectSpread(e){for(var t=1;t<arguments.length;t++){var f=null!=arguments[t]?arguments[t]:{};t%2?ownKeys(Object(f),!0).forEach(function(t){(0,I.Z)(e,t,f[t])}):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(f)):ownKeys(Object(f)).forEach(function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(f,t))})}return e}f(2265),f(67133),f(16206),f(77370),f(76548),f(3897),f(14251),f(45735),f(71209),f(73993),f(54887),f(23116),f(11522),f(47671),f(63895),f(58996),f(74002),f(2336),f(36649),f(75298),f(66493),f(44896),f(41187),f(75163),f(78741),f(81023),f(50625);var tN=Object.values(S.ChainId).filter(function(e){return Number.isInteger(e)}),tL=new WeakMap;function _getQuoteResult(){return(_getQuoteResult=(0,E.Z)(w().mark(function _callee(e,t,f){var n,a,i,r,o,s,d,u,l,p,h,b;return w().wrap(function(m){for(;;)switch(m.prev=m.next){case 0:return n=e.tradeType,a=e.tokenIn,i=e.tokenOut,r=e.amount,o=Object.values(tD.S).includes(a.address),s=Object.values(tD.S).includes(i.address),d=o?(0,tD.n)(a.chainId):new S.Token(a.chainId,a.address,a.decimals,a.symbol),u=s?(0,tD.n)(i.chainId):new S.Token(i.chainId,i.address,i.decimals,i.symbol),l=(0,tD.i)(n)?d:u,p=(0,tD.i)(n)?u:d,h=S.CurrencyAmount.fromRawAmount(l,_().BigInt(null!=r?r:"1")),m.next=10,t.route(h,p,n,void 0,f);case 10:if(b=m.sent,r){m.next=13;break}return m.abrupt("return",{state:tD.Q.INITIALIZED});case 13:if(b){m.next=15;break}return m.abrupt("return",{state:tD.Q.NOT_FOUND});case 15:return m.abrupt("return",function(e){var t,f=e.quote,n=e.quoteGasAdjusted,a=e.route,i=e.routeString,r=e.estimatedGasUsed,o=e.estimatedGasUsedQuoteToken,s=e.estimatedGasUsedUSD,d=e.gasPriceWei,u=e.methodParameters,l=e.blockNumber,p=e.trade,h=p.tradeType,b=p.inputAmount,m=p.outputAmount,y=[],T=function(e,t){var f="undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(!f){if(Array.isArray(e)||(f=function(e,t){if(e){if("string"==typeof e)return _arrayLikeToArray(e,t);var f=Object.prototype.toString.call(e).slice(8,-1);if("Object"===f&&e.constructor&&(f=e.constructor.name),"Map"===f||"Set"===f)return Array.from(e);if("Arguments"===f||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(f))return _arrayLikeToArray(e,t)}}(e))){f&&(e=f);var n=0,F=function(){};return{s:F,n:function(){return n>=e.length?{done:!0}:{done:!1,value:e[n++]}},e:function(e){throw e},f:F}}throw TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var a,i=!0,r=!1;return{s:function(){f=f.call(e)},n:function(){var e=f.next();return i=e.done,e},e:function(e){r=!0,a=e},f:function(){try{i||null==f.return||f.return()}finally{if(r)throw a}}}}(a);try{for(T.s();!(t=T.n()).done;){var g=t.value,v=g.amount,C=g.quote,I=g.tokenPath;if(g.protocol===Q.Protocol.V3){for(var E=g.route.pools,A=[],w=0;w<E.length;w++){var S=E[w],P=I[w],O=I[w+1],k=void 0;0===w&&(k=(0,tD.i)(h)?v.quotient.toString():C.quotient.toString());var R=void 0;w===E.length-1&&(R=(0,tD.i)(h)?C.quotient.toString():v.quotient.toString()),A.push({type:"v3-pool",tokenIn:{chainId:P.chainId,decimals:P.decimals,address:P.address,symbol:P.symbol},tokenOut:{chainId:O.chainId,decimals:O.decimals,address:O.address,symbol:O.symbol},fee:S.fee.toString(),liquidity:S.liquidity.toString(),sqrtRatioX96:S.sqrtRatioX96.toString(),tickCurrent:S.tickCurrent.toString(),amountIn:k,amountOut:R})}y.push(A)}else if(g.protocol===Q.Protocol.V2){for(var M=g.route.pairs,x=[],B=0;B<M.length;B++){var D=M[B],N=I[B],L=I[B+1],U=void 0;0===B&&(U=(0,tD.i)(h)?v.quotient.toString():C.quotient.toString());var G=void 0;B===M.length-1&&(G=(0,tD.i)(h)?C.quotient.toString():v.quotient.toString());var V=D.reserve0,q=D.reserve1;x.push({type:"v2-pool",tokenIn:{chainId:N.chainId,decimals:N.decimals,address:N.address,symbol:N.symbol},tokenOut:{chainId:L.chainId,decimals:L.decimals,address:L.address,symbol:L.symbol},reserve0:{token:{chainId:V.currency.wrapped.chainId,decimals:V.currency.wrapped.decimals,address:V.currency.wrapped.address,symbol:V.currency.wrapped.symbol},quotient:V.quotient.toString()},reserve1:{token:{chainId:q.currency.wrapped.chainId,decimals:q.currency.wrapped.decimals,address:q.currency.wrapped.address,symbol:q.currency.wrapped.symbol},quotient:q.quotient.toString()},amountIn:U,amountOut:G})}y.push(x)}}}catch(e){T.e(e)}finally{T.f()}var H=(0,tD.i)(h)?b:m;return{state:tD.Q.SUCCESS,data:{methodParameters:u,blockNumber:l.toString(),amount:H.quotient.toString(),amountDecimals:H.toExact(),quote:f.quotient.toString(),quoteDecimals:f.toExact(),quoteGasAdjusted:n.quotient.toString(),quoteGasAdjustedDecimals:n.toExact(),gasUseEstimateQuote:o.quotient.toString(),gasUseEstimateQuoteDecimals:o.toExact(),gasUseEstimate:r.toString(),gasUseEstimateUSD:s.toExact(),gasPriceWei:d.toString(),route:y,routeString:i}}}(_objectSpread(_objectSpread({},b),{},{routeString:routeAmountsToString(b.route)})));case 16:case"end":return m.stop()}},_callee)}))).apply(this,arguments)}function getClientSideQuoteResult(e,t){return _getClientSideQuoteResult.apply(this,arguments)}function _getClientSideQuoteResult(){return(_getClientSideQuoteResult=(0,E.Z)(w().mark(function _callee2(e,t){var f,n,a,i,r,o,s,d,u,l,p,h;return w().wrap(function(b){for(;;)switch(b.prev=b.next){case 0:var m;if(f=e.tokenInAddress,n=e.tokenInChainId,a=e.tokenInDecimals,i=e.tokenInSymbol,r=e.tokenOutAddress,o=e.tokenOutChainId,s=e.tokenOutDecimals,d=e.tokenOutSymbol,u=e.amount,l=e.tradeType,p=e.provider,(m=n)&&tN.includes(m)){b.next=3;break}throw Error("Router does not support this token's chain (chainId: ".concat(n,")."));case 3:return h=function(e,t){var f,n,a,i=tL.get(t)||{},r=i[e];if(r)return r;e!==S.ChainId.MAINNET&&(f=new StaticV2SubgraphProvider(e)),[S.ChainId.POLYGON,S.ChainId.POLYGON_MUMBAI].includes(e)&&(a=new UniswapMulticallProvider(e,t,375e3),n=new OnChainQuoteProvider(e,t,a,{retries:2,minTimeout:100,maxTimeout:1e3},{multicallChunk:10,gasLimitPerCall:5e6,quoteMinSuccessRate:.1},{gasLimitOverride:5e6,multicallChunk:5},{gasLimitOverride:625e4,multicallChunk:4}));var o=new AlphaRouter({chainId:e,provider:t,v2SubgraphProvider:f,multicall2Provider:a,onChainQuoteProvider:n});return i[e]=o,tL.set(t,i),o}(n,p),b.abrupt("return",function(e,t,f){return _getQuoteResult.apply(this,arguments)}({tradeType:l,tokenIn:{address:f,chainId:n,decimals:a,symbol:i},tokenOut:{address:r,chainId:o,decimals:s,symbol:d},amount:u},h,t));case 5:case"end":return b.stop()}},_callee2)}))).apply(this,arguments)}},38148:function(e,t,f){var n=f(87793);e.exports=function(e,t){return new Promise(function(f,a){var i,r=t||{};function bail(e){a(e||Error("Aborted"))}function onError(e,t){if(e.bail){bail(e);return}i.retry(e)?r.onRetry&&r.onRetry(e,t):a(i.mainError())}"randomize"in r||(r.randomize=!0),(i=n.operation(r)).attempt(function(t){var n;try{n=e(bail,t)}catch(e){onError(e,t);return}Promise.resolve(n).then(f).catch(function(e){onError(e,t)})})})}},78556:function(e,t,f){let{promiseFinally:n,toError:a}=f(79516);e.exports=class Timeout{static set(e,t){return new Timeout().set(e,t)}static wrap(e,t,f){return new Timeout().wrap(e,t,f)}constructor(){this._id=null,this._delay=null}get id(){return this._id}get delay(){return this._delay}set(e,t=""){return new Promise((f,n)=>{this.clear();let i=t?()=>n(a(t)):f;this._id=setTimeout(i,e),this._delay=e})}wrap(e,t,f=""){let a=n(e,()=>this.clear()),i=this.set(t,f);return Promise.race([a,i])}clear(){this._id&&clearTimeout(this._id)}}},79516:function(e,t){t.promiseFinally=(e,t)=>Promise.resolve(e).then(e=>(t(),e),e=>(t(),Promise.reject(e))),t.toError=e=>"string"==typeof(e="function"==typeof e?e():e)?Error(e):e},29186:function(e,t,f){e.exports=f(91028)},60323:function(e,t,f){"use strict";var n=f(82569),a=f(54420),i=f(87638),r=f(7832),o=f(36738),s=f(66802),d=f(86802),u=f(71195);e.exports=function(e){return new Promise(function(t,f){var l=e.data,p=e.headers,h=e.responseType;n.isFormData(l)&&delete p["Content-Type"];var b=new XMLHttpRequest;if(e.auth){var m=e.auth.username||"",y=e.auth.password?unescape(encodeURIComponent(e.auth.password)):"";p.Authorization="Basic "+btoa(m+":"+y)}var T=o(e.baseURL,e.url);function onloadend(){if(b){var n="getAllResponseHeaders"in b?s(b.getAllResponseHeaders()):null;a(t,f,{data:h&&"text"!==h&&"json"!==h?b.response:b.responseText,status:b.status,statusText:b.statusText,headers:n,config:e,request:b}),b=null}}if(b.open(e.method.toUpperCase(),r(T,e.params,e.paramsSerializer),!0),b.timeout=e.timeout,"onloadend"in b?b.onloadend=onloadend:b.onreadystatechange=function(){b&&4===b.readyState&&(0!==b.status||b.responseURL&&0===b.responseURL.indexOf("file:"))&&setTimeout(onloadend)},b.onabort=function(){b&&(f(u("Request aborted",e,"ECONNABORTED",b)),b=null)},b.onerror=function(){f(u("Network Error",e,null,b)),b=null},b.ontimeout=function(){var t="timeout of "+e.timeout+"ms exceeded";e.timeoutErrorMessage&&(t=e.timeoutErrorMessage),f(u(t,e,e.transitional&&e.transitional.clarifyTimeoutError?"ETIMEDOUT":"ECONNABORTED",b)),b=null},n.isStandardBrowserEnv()){var g=(e.withCredentials||d(T))&&e.xsrfCookieName?i.read(e.xsrfCookieName):void 0;g&&(p[e.xsrfHeaderName]=g)}"setRequestHeader"in b&&n.forEach(p,function(e,t){void 0===l&&"content-type"===t.toLowerCase()?delete p[t]:b.setRequestHeader(t,e)}),n.isUndefined(e.withCredentials)||(b.withCredentials=!!e.withCredentials),h&&"json"!==h&&(b.responseType=e.responseType),"function"==typeof e.onDownloadProgress&&b.addEventListener("progress",e.onDownloadProgress),"function"==typeof e.onUploadProgress&&b.upload&&b.upload.addEventListener("progress",e.onUploadProgress),e.cancelToken&&e.cancelToken.promise.then(function(e){b&&(b.abort(),f(e),b=null)}),l||(l=null),b.send(l)})}},91028:function(e,t,f){"use strict";var n=f(82569),a=f(46875),i=f(71690),r=f(40872);function createInstance(e){var t=new i(e),f=a(i.prototype.request,t);return n.extend(f,i.prototype,t),n.extend(f,t),f}var o=createInstance(f(66043));o.Axios=i,o.create=function(e){return createInstance(r(o.defaults,e))},o.Cancel=f(45134),o.CancelToken=f(23947),o.isCancel=f(13704),o.all=function(e){return Promise.all(e)},o.spread=f(85332),o.isAxiosError=f(92466),e.exports=o,e.exports.default=o},45134:function(e){"use strict";function Cancel(e){this.message=e}Cancel.prototype.toString=function(){return"Cancel"+(this.message?": "+this.message:"")},Cancel.prototype.__CANCEL__=!0,e.exports=Cancel},23947:function(e,t,f){"use strict";var n=f(45134);function CancelToken(e){if("function"!=typeof e)throw TypeError("executor must be a function.");this.promise=new Promise(function(e){t=e});var t,f=this;e(function(e){f.reason||(f.reason=new n(e),t(f.reason))})}CancelToken.prototype.throwIfRequested=function(){if(this.reason)throw this.reason},CancelToken.source=function(){var e;return{token:new CancelToken(function(t){e=t}),cancel:e}},e.exports=CancelToken},13704:function(e){"use strict";e.exports=function(e){return!!(e&&e.__CANCEL__)}},71690:function(e,t,f){"use strict";var n=f(82569),a=f(7832),i=f(32715),r=f(1408),o=f(40872),s=f(76783),d=s.validators;function Axios(e){this.defaults=e,this.interceptors={request:new i,response:new i}}Axios.prototype.request=function(e){"string"==typeof e?(e=arguments[1]||{},e.url=arguments[0]):e=e||{},(e=o(this.defaults,e)).method?e.method=e.method.toLowerCase():this.defaults.method?e.method=this.defaults.method.toLowerCase():e.method="get";var t,f=e.transitional;void 0!==f&&s.assertOptions(f,{silentJSONParsing:d.transitional(d.boolean,"1.0.0"),forcedJSONParsing:d.transitional(d.boolean,"1.0.0"),clarifyTimeoutError:d.transitional(d.boolean,"1.0.0")},!1);var n=[],a=!0;this.interceptors.request.forEach(function(t){("function"!=typeof t.runWhen||!1!==t.runWhen(e))&&(a=a&&t.synchronous,n.unshift(t.fulfilled,t.rejected))});var i=[];if(this.interceptors.response.forEach(function(e){i.push(e.fulfilled,e.rejected)}),!a){var u=[r,void 0];for(Array.prototype.unshift.apply(u,n),u=u.concat(i),t=Promise.resolve(e);u.length;)t=t.then(u.shift(),u.shift());return t}for(var l=e;n.length;){var p=n.shift(),h=n.shift();try{l=p(l)}catch(e){h(e);break}}try{t=r(l)}catch(e){return Promise.reject(e)}for(;i.length;)t=t.then(i.shift(),i.shift());return t},Axios.prototype.getUri=function(e){return a((e=o(this.defaults,e)).url,e.params,e.paramsSerializer).replace(/^\?/,"")},n.forEach(["delete","get","head","options"],function(e){Axios.prototype[e]=function(t,f){return this.request(o(f||{},{method:e,url:t,data:(f||{}).data}))}}),n.forEach(["post","put","patch"],function(e){Axios.prototype[e]=function(t,f,n){return this.request(o(n||{},{method:e,url:t,data:f}))}}),e.exports=Axios},32715:function(e,t,f){"use strict";var n=f(82569);function InterceptorManager(){this.handlers=[]}InterceptorManager.prototype.use=function(e,t,f){return this.handlers.push({fulfilled:e,rejected:t,synchronous:!!f&&f.synchronous,runWhen:f?f.runWhen:null}),this.handlers.length-1},InterceptorManager.prototype.eject=function(e){this.handlers[e]&&(this.handlers[e]=null)},InterceptorManager.prototype.forEach=function(e){n.forEach(this.handlers,function(t){null!==t&&e(t)})},e.exports=InterceptorManager},36738:function(e,t,f){"use strict";var n=f(59842),a=f(62331);e.exports=function(e,t){return e&&!n(t)?a(e,t):t}},71195:function(e,t,f){"use strict";var n=f(81075);e.exports=function(e,t,f,a,i){return n(Error(e),t,f,a,i)}},1408:function(e,t,f){"use strict";var n=f(82569),a=f(28217),i=f(13704),r=f(66043);function throwIfCancellationRequested(e){e.cancelToken&&e.cancelToken.throwIfRequested()}e.exports=function(e){return throwIfCancellationRequested(e),e.headers=e.headers||{},e.data=a.call(e,e.data,e.headers,e.transformRequest),e.headers=n.merge(e.headers.common||{},e.headers[e.method]||{},e.headers),n.forEach(["delete","get","head","post","put","patch","common"],function(t){delete e.headers[t]}),(e.adapter||r.adapter)(e).then(function(t){return throwIfCancellationRequested(e),t.data=a.call(e,t.data,t.headers,e.transformResponse),t},function(t){return!i(t)&&(throwIfCancellationRequested(e),t&&t.response&&(t.response.data=a.call(e,t.response.data,t.response.headers,e.transformResponse))),Promise.reject(t)})}},81075:function(e){"use strict";e.exports=function(e,t,f,n,a){return e.config=t,f&&(e.code=f),e.request=n,e.response=a,e.isAxiosError=!0,e.toJSON=function(){return{message:this.message,name:this.name,description:this.description,number:this.number,fileName:this.fileName,lineNumber:this.lineNumber,columnNumber:this.columnNumber,stack:this.stack,config:this.config,code:this.code}},e}},40872:function(e,t,f){"use strict";var n=f(82569);e.exports=function(e,t){t=t||{};var f={},a=["url","method","data"],i=["headers","auth","proxy","params"],r=["baseURL","transformRequest","transformResponse","paramsSerializer","timeout","timeoutMessage","withCredentials","adapter","responseType","xsrfCookieName","xsrfHeaderName","onUploadProgress","onDownloadProgress","decompress","maxContentLength","maxBodyLength","maxRedirects","transport","httpAgent","httpsAgent","cancelToken","socketPath","responseEncoding"],o=["validateStatus"];function getMergedValue(e,t){return n.isPlainObject(e)&&n.isPlainObject(t)?n.merge(e,t):n.isPlainObject(t)?n.merge({},t):n.isArray(t)?t.slice():t}function mergeDeepProperties(a){n.isUndefined(t[a])?n.isUndefined(e[a])||(f[a]=getMergedValue(void 0,e[a])):f[a]=getMergedValue(e[a],t[a])}n.forEach(a,function(e){n.isUndefined(t[e])||(f[e]=getMergedValue(void 0,t[e]))}),n.forEach(i,mergeDeepProperties),n.forEach(r,function(a){n.isUndefined(t[a])?n.isUndefined(e[a])||(f[a]=getMergedValue(void 0,e[a])):f[a]=getMergedValue(void 0,t[a])}),n.forEach(o,function(n){n in t?f[n]=getMergedValue(e[n],t[n]):n in e&&(f[n]=getMergedValue(void 0,e[n]))});var s=a.concat(i).concat(r).concat(o),d=Object.keys(e).concat(Object.keys(t)).filter(function(e){return -1===s.indexOf(e)});return n.forEach(d,mergeDeepProperties),f}},54420:function(e,t,f){"use strict";var n=f(71195);e.exports=function(e,t,f){var a=f.config.validateStatus;!f.status||!a||a(f.status)?e(f):t(n("Request failed with status code "+f.status,f.config,null,f.request,f))}},28217:function(e,t,f){"use strict";var n=f(82569),a=f(66043);e.exports=function(e,t,f){var i=this||a;return n.forEach(f,function(f){e=f.call(i,e,t)}),e}},66043:function(e,t,f){"use strict";var n,a=f(25566),i=f(82569),r=f(27212),o=f(81075),s={"Content-Type":"application/x-www-form-urlencoded"};function setContentTypeIfUnset(e,t){!i.isUndefined(e)&&i.isUndefined(e["Content-Type"])&&(e["Content-Type"]=t)}var d={transitional:{silentJSONParsing:!0,forcedJSONParsing:!0,clarifyTimeoutError:!1},adapter:("undefined"!=typeof XMLHttpRequest?n=f(60323):void 0!==a&&"[object process]"===Object.prototype.toString.call(a)&&(n=f(60323)),n),transformRequest:[function(e,t){return(r(t,"Accept"),r(t,"Content-Type"),i.isFormData(e)||i.isArrayBuffer(e)||i.isBuffer(e)||i.isStream(e)||i.isFile(e)||i.isBlob(e))?e:i.isArrayBufferView(e)?e.buffer:i.isURLSearchParams(e)?(setContentTypeIfUnset(t,"application/x-www-form-urlencoded;charset=utf-8"),e.toString()):i.isObject(e)||t&&"application/json"===t["Content-Type"]?(setContentTypeIfUnset(t,"application/json"),function(e,t,f){if(i.isString(e))try{return(0,JSON.parse)(e),i.trim(e)}catch(e){if("SyntaxError"!==e.name)throw e}return(0,JSON.stringify)(e)}(e)):e}],transformResponse:[function(e){var t=this.transitional,f=t&&t.silentJSONParsing,n=t&&t.forcedJSONParsing,a=!f&&"json"===this.responseType;if(a||n&&i.isString(e)&&e.length)try{return JSON.parse(e)}catch(e){if(a){if("SyntaxError"===e.name)throw o(e,this,"E_JSON_PARSE");throw e}}return e}],timeout:0,xsrfCookieName:"XSRF-TOKEN",xsrfHeaderName:"X-XSRF-TOKEN",maxContentLength:-1,maxBodyLength:-1,validateStatus:function(e){return e>=200&&e<300}};d.headers={common:{Accept:"application/json, text/plain, */*"}},i.forEach(["delete","get","head"],function(e){d.headers[e]={}}),i.forEach(["post","put","patch"],function(e){d.headers[e]=i.merge(s)}),e.exports=d},46875:function(e){"use strict";e.exports=function(e,t){return function(){for(var f=Array(arguments.length),n=0;n<f.length;n++)f[n]=arguments[n];return e.apply(t,f)}}},7832:function(e,t,f){"use strict";var n=f(82569);function encode(e){return encodeURIComponent(e).replace(/%3A/gi,":").replace(/%24/g,"$").replace(/%2C/gi,",").replace(/%20/g,"+").replace(/%5B/gi,"[").replace(/%5D/gi,"]")}e.exports=function(e,t,f){if(!t)return e;if(f)a=f(t);else if(n.isURLSearchParams(t))a=t.toString();else{var a,i=[];n.forEach(t,function(e,t){null!=e&&(n.isArray(e)?t+="[]":e=[e],n.forEach(e,function(e){n.isDate(e)?e=e.toISOString():n.isObject(e)&&(e=JSON.stringify(e)),i.push(encode(t)+"="+encode(e))}))}),a=i.join("&")}if(a){var r=e.indexOf("#");-1!==r&&(e=e.slice(0,r)),e+=(-1===e.indexOf("?")?"?":"&")+a}return e}},62331:function(e){"use strict";e.exports=function(e,t){return t?e.replace(/\/+$/,"")+"/"+t.replace(/^\/+/,""):e}},87638:function(e,t,f){"use strict";var n=f(82569);e.exports=n.isStandardBrowserEnv()?{write:function(e,t,f,a,i,r){var o=[];o.push(e+"="+encodeURIComponent(t)),n.isNumber(f)&&o.push("expires="+new Date(f).toGMTString()),n.isString(a)&&o.push("path="+a),n.isString(i)&&o.push("domain="+i),!0===r&&o.push("secure"),document.cookie=o.join("; ")},read:function(e){var t=document.cookie.match(RegExp("(^|;\\s*)("+e+")=([^;]*)"));return t?decodeURIComponent(t[3]):null},remove:function(e){this.write(e,"",Date.now()-864e5)}}:{write:function(){},read:function(){return null},remove:function(){}}},59842:function(e){"use strict";e.exports=function(e){return/^([a-z][a-z\d\+\-\.]*:)?\/\//i.test(e)}},92466:function(e){"use strict";e.exports=function(e){return"object"==typeof e&&!0===e.isAxiosError}},86802:function(e,t,f){"use strict";var n=f(82569);e.exports=n.isStandardBrowserEnv()?function(){var e,t=/(msie|trident)/i.test(navigator.userAgent),f=document.createElement("a");function resolveURL(e){var n=e;return t&&(f.setAttribute("href",n),n=f.href),f.setAttribute("href",n),{href:f.href,protocol:f.protocol?f.protocol.replace(/:$/,""):"",host:f.host,search:f.search?f.search.replace(/^\?/,""):"",hash:f.hash?f.hash.replace(/^#/,""):"",hostname:f.hostname,port:f.port,pathname:"/"===f.pathname.charAt(0)?f.pathname:"/"+f.pathname}}return e=resolveURL(window.location.href),function(t){var f=n.isString(t)?resolveURL(t):t;return f.protocol===e.protocol&&f.host===e.host}}():function(){return!0}},27212:function(e,t,f){"use strict";var n=f(82569);e.exports=function(e,t){n.forEach(e,function(f,n){n!==t&&n.toUpperCase()===t.toUpperCase()&&(e[t]=f,delete e[n])})}},66802:function(e,t,f){"use strict";var n=f(82569),a=["age","authorization","content-length","content-type","etag","expires","from","host","if-modified-since","if-unmodified-since","last-modified","location","max-forwards","proxy-authorization","referer","retry-after","user-agent"];e.exports=function(e){var t,f,i,r={};return e&&n.forEach(e.split("\n"),function(e){i=e.indexOf(":"),t=n.trim(e.substr(0,i)).toLowerCase(),f=n.trim(e.substr(i+1)),t&&!(r[t]&&a.indexOf(t)>=0)&&("set-cookie"===t?r[t]=(r[t]?r[t]:[]).concat([f]):r[t]=r[t]?r[t]+", "+f:f)}),r}},85332:function(e){"use strict";e.exports=function(e){return function(t){return e.apply(null,t)}}},76783:function(e,t,f){"use strict";var n=f(23445),a={};["object","boolean","number","function","string","symbol"].forEach(function(e,t){a[e]=function(f){return typeof f===e||"a"+(t<1?"n ":" ")+e}});var i={},r=n.version.split(".");function isOlderVersion(e,t){for(var f=t?t.split("."):r,n=e.split("."),a=0;a<3;a++){if(f[a]>n[a])return!0;if(f[a]<n[a])break}return!1}a.transitional=function(e,t,f){var a=t&&isOlderVersion(t);function formatMessage(e,t){return"[Axios v"+n.version+"] Transitional option '"+e+"'"+t+(f?". "+f:"")}return function(f,n,r){if(!1===e)throw Error(formatMessage(n," has been removed in "+t));return a&&!i[n]&&(i[n]=!0,console.warn(formatMessage(n," has been deprecated since v"+t+" and will be removed in the near future"))),!e||e(f,n,r)}},e.exports={isOlderVersion:isOlderVersion,assertOptions:function(e,t,f){if("object"!=typeof e)throw TypeError("options must be an object");for(var n=Object.keys(e),a=n.length;a-- >0;){var i=n[a],r=t[i];if(r){var o=e[i],s=void 0===o||r(o,i,e);if(!0!==s)throw TypeError("option "+i+" must be "+s);continue}if(!0!==f)throw Error("Unknown option "+i)}},validators:a}},82569:function(e,t,f){"use strict";var n=f(46875),a=Object.prototype.toString;function isArray(e){return"[object Array]"===a.call(e)}function isUndefined(e){return void 0===e}function isObject(e){return null!==e&&"object"==typeof e}function isPlainObject(e){if("[object Object]"!==a.call(e))return!1;var t=Object.getPrototypeOf(e);return null===t||t===Object.prototype}function isFunction(e){return"[object Function]"===a.call(e)}function forEach(e,t){if(null!=e){if("object"!=typeof e&&(e=[e]),isArray(e))for(var f=0,n=e.length;f<n;f++)t.call(null,e[f],f,e);else for(var a in e)Object.prototype.hasOwnProperty.call(e,a)&&t.call(null,e[a],a,e)}}e.exports={isArray:isArray,isArrayBuffer:function(e){return"[object ArrayBuffer]"===a.call(e)},isBuffer:function(e){return null!==e&&!isUndefined(e)&&null!==e.constructor&&!isUndefined(e.constructor)&&"function"==typeof e.constructor.isBuffer&&e.constructor.isBuffer(e)},isFormData:function(e){return"undefined"!=typeof FormData&&e instanceof FormData},isArrayBufferView:function(e){return"undefined"!=typeof ArrayBuffer&&ArrayBuffer.isView?ArrayBuffer.isView(e):e&&e.buffer&&e.buffer instanceof ArrayBuffer},isString:function(e){return"string"==typeof e},isNumber:function(e){return"number"==typeof e},isObject:isObject,isPlainObject:isPlainObject,isUndefined:isUndefined,isDate:function(e){return"[object Date]"===a.call(e)},isFile:function(e){return"[object File]"===a.call(e)},isBlob:function(e){return"[object Blob]"===a.call(e)},isFunction:isFunction,isStream:function(e){return isObject(e)&&isFunction(e.pipe)},isURLSearchParams:function(e){return"undefined"!=typeof URLSearchParams&&e instanceof URLSearchParams},isStandardBrowserEnv:function(){return("undefined"==typeof navigator||"ReactNative"!==navigator.product&&"NativeScript"!==navigator.product&&"NS"!==navigator.product)&&"undefined"!=typeof window&&"undefined"!=typeof document},forEach:forEach,merge:function merge(){var e={};function assignValue(t,f){isPlainObject(e[f])&&isPlainObject(t)?e[f]=merge(e[f],t):isPlainObject(t)?e[f]=merge({},t):isArray(t)?e[f]=t.slice():e[f]=t}for(var t=0,f=arguments.length;t<f;t++)forEach(arguments[t],assignValue);return e},extend:function(e,t,f){return forEach(t,function(t,a){f&&"function"==typeof t?e[a]=n(t,f):e[a]=t}),e},trim:function(e){return e.trim?e.trim():e.replace(/^\s+|\s+$/g,"")},stripBOM:function(e){return 65279===e.charCodeAt(0)&&(e=e.slice(1)),e}}},86839:function(e,t,f){var n=f(40019);e.exports=function(e,t){var f=11,a=0,i=22;"boolean"==typeof t?a=t?0:1:"object"==typeof t&&(f=t.quality||11,a=t.mode||0,i=t.lgwin||22);var r=n._malloc(e.length);n.HEAPU8.set(e,r);var o=n._malloc(e.length+1024),s=n._encode(f,i,a,e.length,r,e.length,o),d=null;return -1!==s&&(d=new Uint8Array(s)).set(n.HEAPU8.subarray(o,o+s)),n._free(r),n._free(o),d}},76316:function(e){var t=new Uint32Array([0,1,3,7,15,31,63,127,255,511,1023,2047,4095,8191,16383,32767,65535,131071,262143,524287,1048575,2097151,4194303,8388607,16777215]);function BrotliBitReader(e){this.buf_=new Uint8Array(8224),this.input_=e,this.reset()}BrotliBitReader.READ_SIZE=4096,BrotliBitReader.IBUF_MASK=8191,BrotliBitReader.prototype.reset=function(){this.buf_ptr_=0,this.val_=0,this.pos_=0,this.bit_pos_=0,this.bit_end_pos_=0,this.eos_=0,this.readMoreInput();for(var e=0;e<4;e++)this.val_|=this.buf_[this.pos_]<<8*e,++this.pos_;return this.bit_end_pos_>0},BrotliBitReader.prototype.readMoreInput=function(){if(!(this.bit_end_pos_>256)){if(this.eos_){if(this.bit_pos_>this.bit_end_pos_)throw Error("Unexpected end of input "+this.bit_pos_+" "+this.bit_end_pos_)}else{var e=this.buf_ptr_,t=this.input_.read(this.buf_,e,4096);if(t<0)throw Error("Unexpected end of input");if(t<4096){this.eos_=1;for(var f=0;f<32;f++)this.buf_[e+t+f]=0}if(0===e){for(var f=0;f<32;f++)this.buf_[8192+f]=this.buf_[f];this.buf_ptr_=4096}else this.buf_ptr_=0;this.bit_end_pos_+=t<<3}}},BrotliBitReader.prototype.fillBitWindow=function(){for(;this.bit_pos_>=8;)this.val_>>>=8,this.val_|=this.buf_[8191&this.pos_]<<24,++this.pos_,this.bit_pos_=this.bit_pos_-8>>>0,this.bit_end_pos_=this.bit_end_pos_-8>>>0},BrotliBitReader.prototype.readBits=function(e){32-this.bit_pos_<e&&this.fillBitWindow();var f=this.val_>>>this.bit_pos_&t[e];return this.bit_pos_+=e,f},e.exports=BrotliBitReader},82497:function(e,t){t.lookup=new Uint8Array([0,0,0,0,0,0,0,0,0,4,4,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,12,16,12,12,20,12,16,24,28,12,12,32,12,36,12,44,44,44,44,44,44,44,44,44,44,32,32,24,40,28,12,12,48,52,52,52,48,52,52,52,48,52,52,52,52,52,48,52,52,52,52,52,48,52,52,52,52,52,24,12,28,12,12,12,56,60,60,60,56,60,60,60,56,60,60,60,60,60,56,60,60,60,60,60,56,60,60,60,60,60,24,12,28,12,0,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,2,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,1,1,1,1,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,7,0,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,56,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,6,6,6,6,7,7,7,7,8,8,8,8,9,9,9,9,10,10,10,10,11,11,11,11,12,12,12,12,13,13,13,13,14,14,14,14,15,15,15,15,16,16,16,16,17,17,17,17,18,18,18,18,19,19,19,19,20,20,20,20,21,21,21,21,22,22,22,22,23,23,23,23,24,24,24,24,25,25,25,25,26,26,26,26,27,27,27,27,28,28,28,28,29,29,29,29,30,30,30,30,31,31,31,31,32,32,32,32,33,33,33,33,34,34,34,34,35,35,35,35,36,36,36,36,37,37,37,37,38,38,38,38,39,39,39,39,40,40,40,40,41,41,41,41,42,42,42,42,43,43,43,43,44,44,44,44,45,45,45,45,46,46,46,46,47,47,47,47,48,48,48,48,49,49,49,49,50,50,50,50,51,51,51,51,52,52,52,52,53,53,53,53,54,54,54,54,55,55,55,55,56,56,56,56,57,57,57,57,58,58,58,58,59,59,59,59,60,60,60,60,61,61,61,61,62,62,62,62,63,63,63,63,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),t.lookupOffsets=new Uint16Array([1024,1536,1280,1536,0,256,768,512])},60948:function(e,t,f){var n=f(11304).g,a=f(11304).j,i=f(76316),r=f(86740),o=f(52874).h,s=f(52874).g,d=f(82497),u=f(70628),l=f(85359),p=new Uint8Array([1,2,3,4,0,5,17,6,16,7,8,9,10,11,12,13,14,15]),h=new Uint8Array([3,2,1,0,3,3,3,3,3,3,2,2,2,2,2,2]),b=new Int8Array([0,0,0,0,-1,1,-2,2,-3,3,-1,1,-2,2,-3,3]),m=new Uint16Array([256,402,436,468,500,534,566,598,630,662,694,726,758,790,822,854,886,920,952,984,1016,1048,1080]);function DecodeWindowBits(e){var t;return 0===e.readBits(1)?16:(t=e.readBits(3))>0?17+t:(t=e.readBits(3))>0?8+t:17}function DecodeVarLenUint8(e){if(e.readBits(1)){var t=e.readBits(3);return 0===t?1:e.readBits(t)+(1<<t)}return 0}function MetaBlockLength(){this.meta_block_length=0,this.input_end=0,this.is_uncompressed=0,this.is_metadata=!1}function DecodeMetaBlockLength(e){var t,f,n,a=new MetaBlockLength;if(a.input_end=e.readBits(1),a.input_end&&e.readBits(1))return a;if(7===(t=e.readBits(2)+4)){if(a.is_metadata=!0,0!==e.readBits(1))throw Error("Invalid reserved bit");if(0===(f=e.readBits(2)))return a;for(n=0;n<f;n++){var i=e.readBits(8);if(n+1===f&&f>1&&0===i)throw Error("Invalid size byte");a.meta_block_length|=i<<8*n}}else for(n=0;n<t;++n){var r=e.readBits(4);if(n+1===t&&t>4&&0===r)throw Error("Invalid size nibble");a.meta_block_length|=r<<4*n}return++a.meta_block_length,a.input_end||a.is_metadata||(a.is_uncompressed=e.readBits(1)),a}function ReadSymbol(e,t,f){var n;return f.fillBitWindow(),t+=f.val_>>>f.bit_pos_&255,(n=e[t].bits-8)>0&&(f.bit_pos_+=8,t+=e[t].value+(f.val_>>>f.bit_pos_&(1<<n)-1)),f.bit_pos_+=e[t].bits,e[t].value}function ReadHuffmanCode(e,t,f,n){var a=0,i=new Uint8Array(e);if(n.readMoreInput(),1===(r=n.readBits(2))){for(var r,d,u=e-1,l=0,h=new Int32Array(4),b=n.readBits(2)+1;u;)u>>=1,++l;for(d=0;d<b;++d)h[d]=n.readBits(l)%e,i[h[d]]=2;switch(i[h[0]]=1,b){case 1:break;case 3:if(h[0]===h[1]||h[0]===h[2]||h[1]===h[2])throw Error("[ReadHuffmanCode] invalid symbols");break;case 2:if(h[0]===h[1])throw Error("[ReadHuffmanCode] invalid symbols");i[h[1]]=1;break;case 4:if(h[0]===h[1]||h[0]===h[2]||h[0]===h[3]||h[1]===h[2]||h[1]===h[3]||h[2]===h[3])throw Error("[ReadHuffmanCode] invalid symbols");n.readBits(1)?(i[h[2]]=3,i[h[3]]=3):i[h[0]]=2}}else{var m=new Uint8Array(18),y=32,T=0,g=[new o(2,0),new o(2,4),new o(2,3),new o(3,2),new o(2,0),new o(2,4),new o(2,3),new o(4,1),new o(2,0),new o(2,4),new o(2,3),new o(3,2),new o(2,0),new o(2,4),new o(2,3),new o(4,5)];for(d=r;d<18&&y>0;++d){var d,v,C=p[d],I=0;n.fillBitWindow(),I+=n.val_>>>n.bit_pos_&15,n.bit_pos_+=g[I].bits,v=g[I].value,m[C]=v,0!==v&&(y-=32>>v,++T)}if(!(1===T||0===y))throw Error("[ReadHuffmanCode] invalid num_codes or space");!function(e,t,f,n){for(var a=0,i=8,r=0,d=0,u=32768,l=[],p=0;p<32;p++)l.push(new o(0,0));for(s(l,0,5,e,18);a<t&&u>0;){var h=0;if(n.readMoreInput(),n.fillBitWindow(),h+=n.val_>>>n.bit_pos_&31,n.bit_pos_+=l[h].bits,(b=255&l[h].value)<16)r=0,f[a++]=b,0!==b&&(i=b,u-=32768>>b);else{var b,m,y,T=b-14,g=0;if(16===b&&(g=i),d!==g&&(r=0,d=g),m=r,r>0&&(r-=2,r<<=T),r+=n.readBits(T)+3,a+(y=r-m)>t)throw Error("[ReadHuffmanCodeLengths] symbol + repeat_delta > num_symbols");for(var v=0;v<y;v++)f[a+v]=d;a+=y,0!==d&&(u-=y<<15-d)}}if(0!==u)throw Error("[ReadHuffmanCodeLengths] space = "+u);for(;a<t;a++)f[a]=0}(m,e,i,n)}if(0===(a=s(t,f,8,i,e)))throw Error("[ReadHuffmanCode] BuildHuffmanTable failed: ");return a}function ReadBlockLength(e,t,f){var n,a;return n=ReadSymbol(e,t,f),a=u.kBlockLengthPrefixCode[n].nbits,u.kBlockLengthPrefixCode[n].offset+f.readBits(a)}function HuffmanTreeGroup(e,t){this.alphabet_size=e,this.num_htrees=t,this.codes=Array(t+t*m[e+31>>>5]),this.htrees=new Uint32Array(t)}function DecodeContextMap(e,t){var f,n,a,i={num_htrees:null,context_map:null},r=0;t.readMoreInput();var s=i.num_htrees=DecodeVarLenUint8(t)+1,d=i.context_map=new Uint8Array(e);if(s<=1)return i;for(t.readBits(1)&&(r=t.readBits(4)+1),f=[],n=0;n<1080;n++)f[n]=new o(0,0);for(ReadHuffmanCode(s+r,f,0,t),n=0;n<e;)if(t.readMoreInput(),0===(a=ReadSymbol(f,0,t)))d[n]=0,++n;else if(a<=r)for(var u=1+(1<<a)+t.readBits(a);--u;){if(n>=e)throw Error("[DecodeContextMap] i >= context_map_size");d[n]=0,++n}else d[n]=a-r,++n;return t.readBits(1)&&function(e,t){var f,n=new Uint8Array(256);for(f=0;f<256;++f)n[f]=f;for(f=0;f<t;++f){var a=e[f];e[f]=n[a],a&&function(e,t){for(var f=e[t],n=t;n;--n)e[n]=e[n-1];e[0]=f}(n,a)}}(d,e),i}function DecodeBlockType(e,t,f,n,a,i,r){var o,s=2*f,d=ReadSymbol(t,1080*f,r);(o=0===d?a[s+(1&i[f])]:1===d?a[s+(i[f]-1&1)]+1:d-2)>=e&&(o-=e),n[f]=o,a[s+(1&i[f])]=o,++i[f]}HuffmanTreeGroup.prototype.decode=function(e){var t,f,n=0;for(t=0;t<this.num_htrees;++t)this.htrees[t]=n,f=ReadHuffmanCode(this.alphabet_size,this.codes,n,e),n+=f},t.BrotliDecompressBuffer=function(e,t){var f,s,p=new n(e);null==t&&(f=new n(e),DecodeWindowBits(s=new i(f)),t=DecodeMetaBlockLength(s).meta_block_length);var m=new Uint8Array(t),y=new a(m);return function(e,t){var f=0,n=0,a=0,s=0,p=[16,15,11,4],m=0,y=0,T=0,g=[new HuffmanTreeGroup(0,0),new HuffmanTreeGroup(0,0),new HuffmanTreeGroup(0,0)],v=128+i.READ_SIZE;W=(1<<(a=DecodeWindowBits(K=new i(e))))-16,_=(j=1<<a)-1,Q=new Uint8Array(j+v+r.maxDictionaryWordLength),Y=[],X=[];for(var C=0;C<3240;C++)Y[C]=new o(0,0),X[C]=new o(0,0);for(;!n;){var I=0,E=[268435456,268435456,268435456],A=[0],w=[1,1,1],S=[0,1,0,1,0,1],P=[0],O=null,k=null,R=null,M=null,x=0,B=null,D=0,N=0,L=0;for(H=0;H<3;++H)g[H].codes=null,g[H].htrees=null;K.readMoreInput();var U=DecodeMetaBlockLength(K);if(f+(I=U.meta_block_length)>t.buffer.length){var G=new Uint8Array(f+I);G.set(t.buffer),t.buffer=G}if(n=U.input_end,z=U.is_uncompressed,U.is_metadata){for(function(e){var t=e.bit_pos_+7&-8;e.readBits(t-e.bit_pos_)}(K);I>0;--I)K.readMoreInput(),K.readBits(8);continue}if(0!==I){if(z){K.bit_pos_=K.bit_pos_+7&-8,function(e,t,f,n,a,r){var o,s=a+1,d=f&a,u=r.pos_&i.IBUF_MASK;if(t<8||r.bit_pos_+(t<<3)<r.bit_end_pos_){for(;t-- >0;)r.readMoreInput(),n[d++]=r.readBits(8),d===s&&(e.write(n,s),d=0);return}if(r.bit_end_pos_<32)throw Error("[CopyUncompressedBlockToOutput] br.bit_end_pos_ < 32");for(;r.bit_pos_<32;)n[d]=r.val_>>>r.bit_pos_,r.bit_pos_+=8,++d,--t;if(u+(o=r.bit_end_pos_-r.bit_pos_>>3)>i.IBUF_MASK){for(var l=i.IBUF_MASK+1-u,p=0;p<l;p++)n[d+p]=r.buf_[u+p];o-=l,d+=l,t-=l,u=0}for(var p=0;p<o;p++)n[d+p]=r.buf_[u+p];if(d+=o,t-=o,d>=s){e.write(n,s),d-=s;for(var p=0;p<d;p++)n[p]=n[s+p]}for(;d+t>=s;){if(o=s-d,r.input_.read(n,d,o)<o)throw Error("[CopyUncompressedBlockToOutput] not enough bytes");e.write(n,s),t-=o,d=0}if(r.input_.read(n,d,t)<t)throw Error("[CopyUncompressedBlockToOutput] not enough bytes");r.reset()}(t,I,f,Q,_,K),f+=I;continue}for(H=0;H<3;++H)w[H]=DecodeVarLenUint8(K)+1,w[H]>=2&&(ReadHuffmanCode(w[H]+2,Y,1080*H,K),ReadHuffmanCode(26,X,1080*H,K),E[H]=ReadBlockLength(X,1080*H,K),P[H]=1);for(K.readMoreInput(),J=K.readBits(2),Z=16+(K.readBits(4)<<J),$=(1<<J)-1,ee=Z+(48<<J),k=new Uint8Array(w[0]),H=0;H<w[0];++H)K.readMoreInput(),k[H]=K.readBits(2)<<1;var V=DecodeContextMap(w[0]<<6,K);et=V.num_htrees,O=V.context_map;var q=DecodeContextMap(w[2]<<2,K);for(H=0,ef=q.num_htrees,R=q.context_map,g[0]=new HuffmanTreeGroup(256,et),g[1]=new HuffmanTreeGroup(704,w[1]),g[2]=new HuffmanTreeGroup(ee,ef);H<3;++H)g[H].decode(K);for(M=0,B=0,en=k[A[0]],N=d.lookupOffsets[en],L=d.lookupOffsets[en+1],ea=g[1].htrees[0];I>0;){for(K.readMoreInput(),0===E[1]&&(DecodeBlockType(w[1],Y,1,A,S,P,K),E[1]=ReadBlockLength(X,1080,K),ea=g[1].htrees[A[1]]),--E[1],(er=(ei=ReadSymbol(g[1].codes,ea,K))>>6)>=2?(er-=2,el=-1):el=0,eo=u.kInsertRangeLut[er]+(ei>>3&7),es=u.kCopyRangeLut[er]+(7&ei),ed=u.kInsertLengthPrefixCode[eo].offset+K.readBits(u.kInsertLengthPrefixCode[eo].nbits),eu=u.kCopyLengthPrefixCode[es].offset+K.readBits(u.kCopyLengthPrefixCode[es].nbits),y=Q[f-1&_],T=Q[f-2&_],ep=0;ep<ed;++ep)K.readMoreInput(),0===E[0]&&(DecodeBlockType(w[0],Y,0,A,S,P,K),E[0]=ReadBlockLength(X,0,K),M=A[0]<<6,en=k[A[0]],N=d.lookupOffsets[en],L=d.lookupOffsets[en+1]),x=O[M+(d.lookup[N+y]|d.lookup[L+T])],--E[0],T=y,y=ReadSymbol(g[0].codes,g[0].htrees[x],K),Q[f&_]=y,(f&_)===_&&t.write(Q,j),++f;if((I-=ed)<=0)break;if(el<0&&(K.readMoreInput(),0===E[2]&&(DecodeBlockType(w[2],Y,2,A,S,P,K),E[2]=ReadBlockLength(X,2160,K),B=A[2]<<2),--E[2],D=R[B+((eu>4?3:eu-2)&255)],(el=ReadSymbol(g[2].codes,g[2].htrees[D],K))>=Z&&(el-=Z,em=el&$,el>>=J,eb=(el>>1)+1,el=Z+((ey=(2+(1&el)<<eb)-4)+K.readBits(eb)<<J)+em)),(ec=function(e,t,f){var n;return e<16?(f+=h[e],f&=3,n=t[f]+b[e]):n=e-16+1,n}(el,p,m))<0)throw Error("[BrotliDecompress] invalid distance");if(s=f<W&&s!==W?f:W,eh=f&_,ec>s){if(eu>=r.minDictionaryWordLength&&eu<=r.maxDictionaryWordLength){var H,W,j,_,Q,Y,X,K,z,J,Z,$,ee,et,ef,en,ea,ei,er,eo,es,ed,eu,el,ec,ep,eh,eb,em,ey=r.offsetsByLength[eu],eT=ec-s-1,eg=r.sizeBitsByLength[eu],ev=eT&(1<<eg)-1,eC=eT>>eg;if(ey+=ev*eu,eC<l.kNumTransforms){var eI=l.transformDictionaryWord(Q,eh,ey,eu,eC);if(eh+=eI,f+=eI,I-=eI,eh>=j){t.write(Q,j);for(var eE=0;eE<eh-j;eE++)Q[eE]=Q[j+eE]}}else throw Error("Invalid backward reference. pos: "+f+" distance: "+ec+" len: "+eu+" bytes left: "+I)}else throw Error("Invalid backward reference. pos: "+f+" distance: "+ec+" len: "+eu+" bytes left: "+I)}else{if(el>0&&(p[3&m]=ec,++m),eu>I)throw Error("Invalid backward reference. pos: "+f+" distance: "+ec+" len: "+eu+" bytes left: "+I);for(ep=0;ep<eu;++ep)Q[f&_]=Q[f-ec&_],(f&_)===_&&t.write(Q,j),++f,--I}y=Q[f-1&_],T=Q[f-2&_]}f&=1073741823}}t.write(Q,f&_)}(p,y),y.pos<y.buffer.length&&(y.buffer=y.buffer.subarray(0,y.pos)),y.buffer},r.init()},55769:function(e,t,f){var n=f(34699);t.init=function(){return(0,f(60948).BrotliDecompressBuffer)(n.toByteArray(f(64384)))}},64384:function(e){e.exports=""},86740:function(e,t,f){var n=f(55769);t.init=function(){t.dictionary=n.init()},t.offsetsByLength=new Uint32Array([0,0,0,0,0,4096,9216,21504,35840,44032,53248,63488,74752,87040,93696,100864,104704,106752,108928,113536,115968,118528,119872,121280,122016]),t.sizeBitsByLength=new Uint8Array([0,0,0,0,10,10,11,11,10,10,10,10,10,9,9,8,7,7,8,7,7,6,6,5,5]),t.minDictionaryWordLength=4,t.maxDictionaryWordLength=24},52874:function(e,t){function HuffmanCode(e,t){this.bits=e,this.value=t}function GetNextKey(e,t){for(var f=1<<t-1;e&f;)f>>=1;return(e&f-1)+f}function ReplicateValue(e,t,f,n,a){do e[t+(n-=f)]=new HuffmanCode(a.bits,a.value);while(n>0)}t.h=HuffmanCode,t.g=function(e,t,f,n,a){var i,r,o,s,d,u,l,p,h,b,m,y=t,T=new Int32Array(16),g=new Int32Array(16);for(o=0,m=new Int32Array(a);o<a;o++)T[n[o]]++;for(r=1,g[1]=0;r<15;r++)g[r+1]=g[r]+T[r];for(o=0;o<a;o++)0!==n[o]&&(m[g[n[o]]++]=o);if(b=h=1<<(p=f),1===g[15]){for(s=0;s<b;++s)e[t+s]=new HuffmanCode(0,65535&m[0]);return b}for(r=1,s=0,o=0,d=2;r<=f;++r,d<<=1)for(;T[r]>0;--T[r])ReplicateValue(e,t+s,d,h,i=new HuffmanCode(255&r,65535&m[o++])),s=GetNextKey(s,r);for(l=b-1,u=-1,r=f+1,d=2;r<=15;++r,d<<=1)for(;T[r]>0;--T[r])(s&l)!==u&&(t+=h,b+=h=1<<(p=function(e,t,f){for(var n=1<<t-f;t<15&&!((n-=e[t])<=0);)++t,n<<=1;return t-f}(T,r,f)),e[y+(u=s&l)]=new HuffmanCode(p+f&255,t-y-u&65535)),i=new HuffmanCode(r-f&255,65535&m[o++]),ReplicateValue(e,t+(s>>f),d,h,i),s=GetNextKey(s,r);return b}},70628:function(e,t){function PrefixCodeRange(e,t){this.offset=e,this.nbits=t}t.kBlockLengthPrefixCode=[new PrefixCodeRange(1,2),new PrefixCodeRange(5,2),new PrefixCodeRange(9,2),new PrefixCodeRange(13,2),new PrefixCodeRange(17,3),new PrefixCodeRange(25,3),new PrefixCodeRange(33,3),new PrefixCodeRange(41,3),new PrefixCodeRange(49,4),new PrefixCodeRange(65,4),new PrefixCodeRange(81,4),new PrefixCodeRange(97,4),new PrefixCodeRange(113,5),new PrefixCodeRange(145,5),new PrefixCodeRange(177,5),new PrefixCodeRange(209,5),new PrefixCodeRange(241,6),new PrefixCodeRange(305,6),new PrefixCodeRange(369,7),new PrefixCodeRange(497,8),new PrefixCodeRange(753,9),new PrefixCodeRange(1265,10),new PrefixCodeRange(2289,11),new PrefixCodeRange(4337,12),new PrefixCodeRange(8433,13),new PrefixCodeRange(16625,24)],t.kInsertLengthPrefixCode=[new PrefixCodeRange(0,0),new PrefixCodeRange(1,0),new PrefixCodeRange(2,0),new PrefixCodeRange(3,0),new PrefixCodeRange(4,0),new PrefixCodeRange(5,0),new PrefixCodeRange(6,1),new PrefixCodeRange(8,1),new PrefixCodeRange(10,2),new PrefixCodeRange(14,2),new PrefixCodeRange(18,3),new PrefixCodeRange(26,3),new PrefixCodeRange(34,4),new PrefixCodeRange(50,4),new PrefixCodeRange(66,5),new PrefixCodeRange(98,5),new PrefixCodeRange(130,6),new PrefixCodeRange(194,7),new PrefixCodeRange(322,8),new PrefixCodeRange(578,9),new PrefixCodeRange(1090,10),new PrefixCodeRange(2114,12),new PrefixCodeRange(6210,14),new PrefixCodeRange(22594,24)],t.kCopyLengthPrefixCode=[new PrefixCodeRange(2,0),new PrefixCodeRange(3,0),new PrefixCodeRange(4,0),new PrefixCodeRange(5,0),new PrefixCodeRange(6,0),new PrefixCodeRange(7,0),new PrefixCodeRange(8,0),new PrefixCodeRange(9,0),new PrefixCodeRange(10,1),new PrefixCodeRange(12,1),new PrefixCodeRange(14,2),new PrefixCodeRange(18,2),new PrefixCodeRange(22,3),new PrefixCodeRange(30,3),new PrefixCodeRange(38,4),new PrefixCodeRange(54,4),new PrefixCodeRange(70,5),new PrefixCodeRange(102,5),new PrefixCodeRange(134,6),new PrefixCodeRange(198,7),new PrefixCodeRange(326,8),new PrefixCodeRange(582,9),new PrefixCodeRange(1094,10),new PrefixCodeRange(2118,24)],t.kInsertRangeLut=[0,0,8,8,0,16,8,16,16],t.kCopyRangeLut=[0,8,0,8,16,0,16,8,16]},11304:function(e,t){function BrotliInput(e){this.buffer=e,this.pos=0}function BrotliOutput(e){this.buffer=e,this.pos=0}BrotliInput.prototype.read=function(e,t,f){this.pos+f>this.buffer.length&&(f=this.buffer.length-this.pos);for(var n=0;n<f;n++)e[t+n]=this.buffer[this.pos+n];return this.pos+=f,f},t.g=BrotliInput,BrotliOutput.prototype.write=function(e,t){if(this.pos+t>this.buffer.length)throw Error("Output buffer is not large enough");return this.buffer.set(e.subarray(0,t),this.pos),this.pos+=t,t},t.j=BrotliOutput},85359:function(e,t,f){var n=f(86740);function Transform(e,t,f){this.prefix=new Uint8Array(e.length),this.transform=t,this.suffix=new Uint8Array(f.length);for(var n=0;n<e.length;n++)this.prefix[n]=e.charCodeAt(n);for(var n=0;n<f.length;n++)this.suffix[n]=f.charCodeAt(n)}var a=[new Transform("",0,""),new Transform("",0," "),new Transform(" ",0," "),new Transform("",12,""),new Transform("",10," "),new Transform("",0," the "),new Transform(" ",0,""),new Transform("s ",0," "),new Transform("",0," of "),new Transform("",10,""),new Transform("",0," and "),new Transform("",13,""),new Transform("",1,""),new Transform(", ",0," "),new Transform("",0,", "),new Transform(" ",10," "),new Transform("",0," in "),new Transform("",0," to "),new Transform("e ",0," "),new Transform("",0,'"'),new Transform("",0,"."),new Transform("",0,'">'),new Transform("",0,"\n"),new Transform("",3,""),new Transform("",0,"]"),new Transform("",0," for "),new Transform("",14,""),new Transform("",2,""),new Transform("",0," a "),new Transform("",0," that "),new Transform(" ",10,""),new Transform("",0,". "),new Transform(".",0,""),new Transform(" ",0,", "),new Transform("",15,""),new Transform("",0," with "),new Transform("",0,"'"),new Transform("",0," from "),new Transform("",0," by "),new Transform("",16,""),new Transform("",17,""),new Transform(" the ",0,""),new Transform("",4,""),new Transform("",0,". The "),new Transform("",11,""),new Transform("",0," on "),new Transform("",0," as "),new Transform("",0," is "),new Transform("",7,""),new Transform("",1,"ing "),new Transform("",0,"\n	"),new Transform("",0,":"),new Transform(" ",0,". "),new Transform("",0,"ed "),new Transform("",20,""),new Transform("",18,""),new Transform("",6,""),new Transform("",0,"("),new Transform("",10,", "),new Transform("",8,""),new Transform("",0," at "),new Transform("",0,"ly "),new Transform(" the ",0," of "),new Transform("",5,""),new Transform("",9,""),new Transform(" ",10,", "),new Transform("",10,'"'),new Transform(".",0,"("),new Transform("",11," "),new Transform("",10,'">'),new Transform("",0,'="'),new Transform(" ",0,"."),new Transform(".com/",0,""),new Transform(" the ",0," of the "),new Transform("",10,"'"),new Transform("",0,". This "),new Transform("",0,","),new Transform(".",0," "),new Transform("",10,"("),new Transform("",10,"."),new Transform("",0," not "),new Transform(" ",0,'="'),new Transform("",0,"er "),new Transform(" ",11," "),new Transform("",0,"al "),new Transform(" ",11,""),new Transform("",0,"='"),new Transform("",11,'"'),new Transform("",10,". "),new Transform(" ",0,"("),new Transform("",0,"ful "),new Transform(" ",10,". "),new Transform("",0,"ive "),new Transform("",0,"less "),new Transform("",11,"'"),new Transform("",0,"est "),new Transform(" ",10,"."),new Transform("",11,'">'),new Transform(" ",0,"='"),new Transform("",10,","),new Transform("",0,"ize "),new Transform("",11,"."),new Transform("\xc2\xa0",0,""),new Transform(" ",0,","),new Transform("",10,'="'),new Transform("",11,'="'),new Transform("",0,"ous "),new Transform("",11,", "),new Transform("",10,"='"),new Transform(" ",10,","),new Transform(" ",11,'="'),new Transform(" ",11,", "),new Transform("",11,","),new Transform("",11,"("),new Transform("",11,". "),new Transform(" ",11,"."),new Transform("",11,"='"),new Transform(" ",11,". "),new Transform(" ",10,'="'),new Transform(" ",11,"='"),new Transform(" ",10,"='")];function ToUpperCase(e,t){return e[t]<192?(e[t]>=97&&e[t]<=122&&(e[t]^=32),1):e[t]<224?(e[t+1]^=32,2):(e[t+2]^=5,3)}t.kTransforms=a,t.kNumTransforms=a.length,t.transformDictionaryWord=function(e,t,f,i,r){var o,s=a[r].prefix,d=a[r].suffix,u=a[r].transform,l=u<12?0:u-11,p=0,h=t;l>i&&(l=i);for(var b=0;b<s.length;)e[t++]=s[b++];for(f+=l,i-=l,u<=9&&(i-=u),p=0;p<i;p++)e[t++]=n.dictionary[f+p];if(o=t-i,10===u)ToUpperCase(e,o);else if(11===u)for(;i>0;){var m=ToUpperCase(e,o);o+=m,i-=m}for(var y=0;y<d.length;)e[t++]=d[y++];return t-h}},60203:function(e,t,f){e.exports=f(60948).BrotliDecompressBuffer},16690:function(e,t,f){t.compress=f(86839),t.decompress=f(60948).BrotliDecompressBuffer},66380:function(e,t,f){var n=f(67133).Buffer,a=function(){"use strict";var e,t,f;function _instanceof(e,t){return null!=t&&e instanceof t}try{e=Map}catch(t){e=function(){}}try{t=Set}catch(e){t=function(){}}try{f=Promise}catch(e){f=function(){}}function clone(a,i,r,o,s){"object"==typeof i&&(r=i.depth,o=i.prototype,s=i.includeNonEnumerable,i=i.circular);var d=[],u=[],l=void 0!==n;return void 0===i&&(i=!0),void 0===r&&(r=1/0),function _clone(a,r){if(null===a)return null;if(0===r||"object"!=typeof a)return a;if(_instanceof(a,e))p=new e;else if(_instanceof(a,t))p=new t;else if(_instanceof(a,f))p=new f(function(e,t){a.then(function(t){e(_clone(t,r-1))},function(e){t(_clone(e,r-1))})});else if(clone.__isArray(a))p=[];else if(clone.__isRegExp(a))p=new RegExp(a.source,__getRegExpFlags(a)),a.lastIndex&&(p.lastIndex=a.lastIndex);else if(clone.__isDate(a))p=new Date(a.getTime());else{if(l&&n.isBuffer(a))return p=n.allocUnsafe?n.allocUnsafe(a.length):new n(a.length),a.copy(p),p;_instanceof(a,Error)?p=Object.create(a):void 0===o?p=Object.create(h=Object.getPrototypeOf(a)):(p=Object.create(o),h=o)}if(i){var p,h,b,m=d.indexOf(a);if(-1!=m)return u[m];d.push(a),u.push(p)}for(var y in _instanceof(a,e)&&a.forEach(function(e,t){var f=_clone(t,r-1),n=_clone(e,r-1);p.set(f,n)}),_instanceof(a,t)&&a.forEach(function(e){var t=_clone(e,r-1);p.add(t)}),a)h&&(b=Object.getOwnPropertyDescriptor(h,y)),b&&null==b.set||(p[y]=_clone(a[y],r-1));if(Object.getOwnPropertySymbols)for(var T=Object.getOwnPropertySymbols(a),y=0;y<T.length;y++){var g=T[y],v=Object.getOwnPropertyDescriptor(a,g);(!v||v.enumerable||s)&&(p[g]=_clone(a[g],r-1),v.enumerable||Object.defineProperty(p,g,{enumerable:!1}))}if(s)for(var C=Object.getOwnPropertyNames(a),y=0;y<C.length;y++){var I=C[y],v=Object.getOwnPropertyDescriptor(a,I);v&&v.enumerable||(p[I]=_clone(a[I],r-1),Object.defineProperty(p,I,{enumerable:!1}))}return p}(a,r)}function __objToStr(e){return Object.prototype.toString.call(e)}function __getRegExpFlags(e){var t="";return e.global&&(t+="g"),e.ignoreCase&&(t+="i"),e.multiline&&(t+="m"),t}return clone.clonePrototype=function(e){if(null===e)return null;var c=function(){};return c.prototype=e,new c},clone.__objToStr=__objToStr,clone.__isDate=function(e){return"object"==typeof e&&"[object Date]"===__objToStr(e)},clone.__isArray=function(e){return"object"==typeof e&&"[object Array]"===__objToStr(e)},clone.__isRegExp=function(e){return"object"==typeof e&&"[object RegExp]"===__objToStr(e)},clone.__getRegExpFlags=__getRegExpFlags,clone}();e.exports&&(e.exports=a)},68375:function(e){"use strict";e.exports=function(e){var t=e.uri,f=e.name,n=e.type;this.uri=t,this.name=f,this.type=n}},3436:function(e,t,f){"use strict";var n=f(43670);e.exports=function extractFiles(e,t,f){void 0===t&&(t=""),void 0===f&&(f=n);var a,i=new Map;function addFile(e,t){var f=i.get(t);f?f.push.apply(f,e):i.set(t,e)}if(f(e))a=null,addFile([t],e);else{var r=t?t+".":"";if("undefined"!=typeof FileList&&e instanceof FileList)a=Array.prototype.map.call(e,function(e,t){return addFile([""+r+t],e),null});else if(Array.isArray(e))a=e.map(function(e,t){var n=extractFiles(e,""+r+t,f);return n.files.forEach(addFile),n.clone});else if(e&&e.constructor===Object)for(var o in a={},e){var s=extractFiles(e[o],""+r+o,f);s.files.forEach(addFile),a[o]=s.clone}else a=e}return{clone:a,files:i}}},96345:function(e,t,f){"use strict";t.ReactNativeFile=f(68375),t.extractFiles=f(3436),t.isExtractableFile=f(43670)},43670:function(e,t,f){"use strict";var n=f(68375);e.exports=function(e){return"undefined"!=typeof File&&e instanceof File||"undefined"!=typeof Blob&&e instanceof Blob||e instanceof n}},71324:function(e,t,f){"use strict";var n=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});var a=f(96345),i=n(f(7396)),isExtractableFileEnhanced=function(e){return a.isExtractableFile(e)||null!==e&&"object"==typeof e&&"function"==typeof e.pipe};t.default=function(e,t,f){var n=a.extractFiles({query:e,variables:t,operationName:f},"",isExtractableFileEnhanced),r=n.clone,o=n.files;if(0===o.size){if(!Array.isArray(e))return JSON.stringify(r);if(void 0!==t&&!Array.isArray(t))throw Error("Cannot create request body with given variable type, array expected");return JSON.stringify(e.reduce(function(e,f,n){return e.push({query:f,variables:t?t[n]:void 0}),e},[]))}var s=new("undefined"==typeof FormData?i.default:FormData);s.append("operations",JSON.stringify(r));var d={},u=0;return o.forEach(function(e){d[++u]=e}),s.append("map",JSON.stringify(d)),u=0,o.forEach(function(e,t){s.append(""+ ++u,t)}),s}},10056:function(e,t,f){"use strict";var n=this&&this.__assign||function(){return(n=Object.assign||function(e){for(var t,f=1,n=arguments.length;f<n;f++)for(var a in t=arguments[f])Object.prototype.hasOwnProperty.call(t,a)&&(e[a]=t[a]);return e}).apply(this,arguments)},a=this&&this.__createBinding||(Object.create?function(e,t,f,n){void 0===n&&(n=f),Object.defineProperty(e,n,{enumerable:!0,get:function(){return t[f]}})}:function(e,t,f,n){void 0===n&&(n=f),e[n]=t[f]}),i=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),r=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var f in e)"default"!==f&&Object.prototype.hasOwnProperty.call(e,f)&&a(t,e,f);return i(t,e),t},o=this&&this.__awaiter||function(e,t,f,n){return new(f||(f=Promise))(function(a,i){function fulfilled(e){try{step(n.next(e))}catch(e){i(e)}}function rejected(e){try{step(n.throw(e))}catch(e){i(e)}}function step(e){var t;e.done?a(e.value):((t=e.value)instanceof f?t:new f(function(e){e(t)})).then(fulfilled,rejected)}step((n=n.apply(e,t||[])).next())})},s=this&&this.__generator||function(e,t){var f,n,a,i,r={label:0,sent:function(){if(1&a[0])throw a[1];return a[1]},trys:[],ops:[]};return i={next:verb(0),throw:verb(1),return:verb(2)},"function"==typeof Symbol&&(i[Symbol.iterator]=function(){return this}),i;function verb(i){return function(o){return function(i){if(f)throw TypeError("Generator is already executing.");for(;r;)try{if(f=1,n&&(a=2&i[0]?n.return:i[0]?n.throw||((a=n.return)&&a.call(n),0):n.next)&&!(a=a.call(n,i[1])).done)return a;switch(n=0,a&&(i=[2&i[0],a.value]),i[0]){case 0:case 1:a=i;break;case 4:return r.label++,{value:i[1],done:!1};case 5:r.label++,n=i[1],i=[0];continue;case 7:i=r.ops.pop(),r.trys.pop();continue;default:if(!(a=(a=r.trys).length>0&&a[a.length-1])&&(6===i[0]||2===i[0])){r=0;continue}if(3===i[0]&&(!a||i[1]>a[0]&&i[1]<a[3])){r.label=i[1];break}if(6===i[0]&&r.label<a[1]){r.label=a[1],a=i;break}if(a&&r.label<a[2]){r.label=a[2],r.ops.push(i);break}a[2]&&r.ops.pop(),r.trys.pop();continue}i=t.call(e,r)}catch(e){i=[6,e],n=0}finally{f=a=0}if(5&i[0])throw i[1];return{value:i[0]?i[1]:void 0,done:!0}}([i,o])}}},d=this&&this.__rest||function(e,t){var f={};for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&0>t.indexOf(n)&&(f[n]=e[n]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols)for(var a=0,n=Object.getOwnPropertySymbols(e);a<n.length;a++)0>t.indexOf(n[a])&&Object.prototype.propertyIsEnumerable.call(e,n[a])&&(f[n[a]]=e[n[a]]);return f},u=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.gql=t.batchRequests=t.request=t.rawRequest=t.GraphQLClient=t.ClientError=void 0;var l=r(f(94625)),p=f(8782),h=u(f(71324)),b=f(46761);Object.defineProperty(t,"ClientError",{enumerable:!0,get:function(){return b.ClientError}});var resolveHeaders=function(e){var t,f={};return e&&("undefined"!=typeof Headers&&e instanceof Headers||e instanceof l.Headers?(t={},e.forEach(function(e,f){t[f]=e}),f=t):Array.isArray(e)?e.forEach(function(e){var t=e[0],n=e[1];f[t]=n}):f=e),f},queryCleanner=function(e){return e.replace(/([\s,]|#[^\n\r]+)+/g," ").trim()},buildGetQueryParams=function(e){var t=e.query,f=e.variables,n=e.operationName;if(!Array.isArray(t)){var a=["query="+encodeURIComponent(queryCleanner(t))];return f&&a.push("variables="+encodeURIComponent(JSON.stringify(f))),n&&a.push("operationName="+encodeURIComponent(n)),a.join("&")}if(void 0!==f&&!Array.isArray(f))throw Error("Cannot create query with given variable type, array expected");return"query="+encodeURIComponent(JSON.stringify(t.reduce(function(e,t,n){return e.push({query:queryCleanner(t),variables:f?JSON.stringify(f[n]):void 0}),e},[])))},post=function(e){var t=e.url,f=e.query,a=e.variables,i=e.operationName,r=e.headers,d=e.fetch,u=e.fetchOptions;return o(void 0,void 0,void 0,function(){var e;return s(this,function(o){switch(o.label){case 0:return e=h.default(f,a,i),[4,d(t,n({method:"POST",headers:n(n({},"string"==typeof e?{"Content-Type":"application/json"}:{}),r),body:e},u))];case 1:return[2,o.sent()]}})})},get=function(e){var t=e.url,f=e.query,a=e.variables,i=e.operationName,r=e.headers,d=e.fetch,u=e.fetchOptions;return o(void 0,void 0,void 0,function(){return s(this,function(e){switch(e.label){case 0:return[4,d(t+"?"+buildGetQueryParams({query:f,variables:a,operationName:i}),n({method:"GET",headers:r},u))];case 1:return[2,e.sent()]}})})},m=function(){function GraphQLClient(e,t){this.url=e,this.options=t||{}}return GraphQLClient.prototype.rawRequest=function(e,t,f){var a=this.options,i=a.headers,r=a.fetch,o=void 0===r?l.default:r,s=a.method,u=d(a,["headers","fetch","method"]);return makeRequest({url:this.url,query:e,variables:t,headers:n(n({},resolveHeaders(i)),resolveHeaders(f)),operationName:void 0,fetch:o,method:void 0===s?"POST":s,fetchOptions:u})},GraphQLClient.prototype.request=function(e,t,f){return o(this,void 0,void 0,function(){var a,i,r,o,u,p,h,b,m,y,T;return s(this,function(s){switch(s.label){case 0:return i=(a=this.options).headers,o=void 0===(r=a.fetch)?l.default:r,p=void 0===(u=a.method)?"POST":u,h=d(a,["headers","fetch","method"]),b=this.url,y=(m=resolveRequestDocument(e)).query,T=m.operationName,[4,makeRequest({url:b,query:y,variables:t,headers:n(n({},resolveHeaders(i)),resolveHeaders(f)),operationName:T,fetch:o,method:p,fetchOptions:h})];case 1:return[2,s.sent().data]}})})},GraphQLClient.prototype.batchRequests=function(e,t){return o(this,void 0,void 0,function(){var f,a,i,r,o,u,p;return s(this,function(s){switch(s.label){case 0:return a=(f=this.options).headers,r=void 0===(i=f.fetch)?l.default:i,u=void 0===(o=f.method)?"POST":o,p=d(f,["headers","fetch","method"]),[4,makeRequest({url:this.url,query:e.map(function(e){return resolveRequestDocument(e.document).query}),variables:e.map(function(e){return e.variables}),headers:n(n({},resolveHeaders(a)),resolveHeaders(t)),operationName:void 0,fetch:r,method:u,fetchOptions:p})];case 1:return[2,s.sent().data]}})})},GraphQLClient.prototype.setHeaders=function(e){return this.options.headers=e,this},GraphQLClient.prototype.setHeader=function(e,t){var f,n=this.options.headers;return n?n[e]=t:this.options.headers=((f={})[e]=t,f),this},GraphQLClient.prototype.setEndpoint=function(e){return this.url=e,this},GraphQLClient}();function makeRequest(e){var t=e.url,f=e.query,a=e.variables,i=e.headers,r=e.operationName,d=e.fetch,u=e.method,l=void 0===u?"POST":u,p=e.fetchOptions;return o(this,void 0,void 0,function(){var e,o,u,h,m,y,T,g;return s(this,function(s){switch(s.label){case 0:return e="POST"===l.toUpperCase()?post:get,o=Array.isArray(f),[4,e({url:t,query:f,variables:a,operationName:r,headers:i,fetch:d,fetchOptions:p})];case 1:var v,C;return[4,(C=(v=u=s.sent()).headers.get("Content-Type"))&&C.startsWith("application/json")?v.json():v.text()];case 2:if(h=s.sent(),m=o&&Array.isArray(h)?!h.some(function(e){return!e.data}):!!h.data,u.ok&&!h.errors&&m)return y=u.headers,T=u.status,[2,n(n({},o?{data:h}:h),{headers:y,status:T})];throw g="string"==typeof h?{error:h}:h,new b.ClientError(n(n({},g),{status:u.status,headers:u.headers}),{query:f,variables:a})}})})}function request(e,t,f,n){return o(this,void 0,void 0,function(){return s(this,function(a){return[2,new m(e).request(t,f,n)]})})}function resolveRequestDocument(e){if("string"==typeof e)return{query:e};var t,f=void 0,n=e.definitions.filter(function(e){return"OperationDefinition"===e.kind});return 1===n.length&&(f=null===(t=n[0].name)||void 0===t?void 0:t.value),{query:p.print(e),operationName:f}}t.GraphQLClient=m,t.rawRequest=function(e,t,f,n){return o(this,void 0,void 0,function(){return s(this,function(a){return[2,new m(e).rawRequest(t,f,n)]})})},t.request=request,t.batchRequests=function(e,t,f){return o(this,void 0,void 0,function(){return s(this,function(n){return[2,new m(e).batchRequests(t,f)]})})},t.default=request,t.gql=function(e){for(var t=[],f=1;f<arguments.length;f++)t[f-1]=arguments[f];return e.reduce(function(e,f,n){return""+e+f+(n in t?t[n]:"")},"")}},46761:function(e,t){"use strict";var f,n=this&&this.__extends||(f=function(e,t){return(f=Object.setPrototypeOf||({__proto__:[]})instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var f in t)Object.prototype.hasOwnProperty.call(t,f)&&(e[f]=t[f])})(e,t)},function(e,t){if("function"!=typeof t&&null!==t)throw TypeError("Class extends value "+String(t)+" is not a constructor or null");function __(){this.constructor=e}f(e,t),e.prototype=null===t?Object.create(t):(__.prototype=t.prototype,new __)});Object.defineProperty(t,"__esModule",{value:!0}),t.ClientError=void 0;var a=function(e){function ClientError(t,f){var n=this,a=ClientError.extractMessage(t)+": "+JSON.stringify({response:t,request:f});return Object.setPrototypeOf(n=e.call(this,a)||this,ClientError.prototype),n.response=t,n.request=f,"function"==typeof Error.captureStackTrace&&Error.captureStackTrace(n,ClientError),n}return n(ClientError,e),ClientError.extractMessage=function(e){try{return e.errors[0].message}catch(t){return"GraphQL Error (Code: "+e.status+")"}},ClientError}(Error);t.ClientError=a},94625:function(e,t){var f="undefined"!=typeof self?self:this,n=function(){function F(){this.fetch=!1,this.DOMException=f.DOMException}return F.prototype=f,new F}();(function(e){var t={searchParams:"URLSearchParams"in n,iterable:"Symbol"in n&&"iterator"in Symbol,blob:"FileReader"in n&&"Blob"in n&&function(){try{return new Blob,!0}catch(e){return!1}}(),formData:"FormData"in n,arrayBuffer:"ArrayBuffer"in n};if(t.arrayBuffer)var f=["[object Int8Array]","[object Uint8Array]","[object Uint8ClampedArray]","[object Int16Array]","[object Uint16Array]","[object Int32Array]","[object Uint32Array]","[object Float32Array]","[object Float64Array]"],a=ArrayBuffer.isView||function(e){return e&&f.indexOf(Object.prototype.toString.call(e))>-1};function normalizeName(e){if("string"!=typeof e&&(e=String(e)),/[^a-z0-9\-#$%&'*+.^_`|~]/i.test(e))throw TypeError("Invalid character in header field name");return e.toLowerCase()}function normalizeValue(e){return"string"!=typeof e&&(e=String(e)),e}function iteratorFor(e){var f={next:function(){var t=e.shift();return{done:void 0===t,value:t}}};return t.iterable&&(f[Symbol.iterator]=function(){return f}),f}function Headers(e){this.map={},e instanceof Headers?e.forEach(function(e,t){this.append(t,e)},this):Array.isArray(e)?e.forEach(function(e){this.append(e[0],e[1])},this):e&&Object.getOwnPropertyNames(e).forEach(function(t){this.append(t,e[t])},this)}function consumed(e){if(e.bodyUsed)return Promise.reject(TypeError("Already read"));e.bodyUsed=!0}function fileReaderReady(e){return new Promise(function(t,f){e.onload=function(){t(e.result)},e.onerror=function(){f(e.error)}})}function readBlobAsArrayBuffer(e){var t=new FileReader,f=fileReaderReady(t);return t.readAsArrayBuffer(e),f}function bufferClone(e){if(e.slice)return e.slice(0);var t=new Uint8Array(e.byteLength);return t.set(new Uint8Array(e)),t.buffer}function Body(){return this.bodyUsed=!1,this._initBody=function(e){if(this._bodyInit=e,e){if("string"==typeof e)this._bodyText=e;else if(t.blob&&Blob.prototype.isPrototypeOf(e))this._bodyBlob=e;else if(t.formData&&FormData.prototype.isPrototypeOf(e))this._bodyFormData=e;else if(t.searchParams&&URLSearchParams.prototype.isPrototypeOf(e))this._bodyText=e.toString();else{var f;t.arrayBuffer&&t.blob&&(f=e)&&DataView.prototype.isPrototypeOf(f)?(this._bodyArrayBuffer=bufferClone(e.buffer),this._bodyInit=new Blob([this._bodyArrayBuffer])):t.arrayBuffer&&(ArrayBuffer.prototype.isPrototypeOf(e)||a(e))?this._bodyArrayBuffer=bufferClone(e):this._bodyText=e=Object.prototype.toString.call(e)}}else this._bodyText="";!this.headers.get("content-type")&&("string"==typeof e?this.headers.set("content-type","text/plain;charset=UTF-8"):this._bodyBlob&&this._bodyBlob.type?this.headers.set("content-type",this._bodyBlob.type):t.searchParams&&URLSearchParams.prototype.isPrototypeOf(e)&&this.headers.set("content-type","application/x-www-form-urlencoded;charset=UTF-8"))},t.blob&&(this.blob=function(){var e=consumed(this);if(e)return e;if(this._bodyBlob)return Promise.resolve(this._bodyBlob);if(this._bodyArrayBuffer)return Promise.resolve(new Blob([this._bodyArrayBuffer]));if(!this._bodyFormData)return Promise.resolve(new Blob([this._bodyText]));throw Error("could not read FormData body as blob")},this.arrayBuffer=function(){return this._bodyArrayBuffer?consumed(this)||Promise.resolve(this._bodyArrayBuffer):this.blob().then(readBlobAsArrayBuffer)}),this.text=function(){var e,t,f,n=consumed(this);if(n)return n;if(this._bodyBlob)return e=this._bodyBlob,f=fileReaderReady(t=new FileReader),t.readAsText(e),f;if(this._bodyArrayBuffer)return Promise.resolve(function(e){for(var t=new Uint8Array(e),f=Array(t.length),n=0;n<t.length;n++)f[n]=String.fromCharCode(t[n]);return f.join("")}(this._bodyArrayBuffer));if(!this._bodyFormData)return Promise.resolve(this._bodyText);throw Error("could not read FormData body as text")},t.formData&&(this.formData=function(){return this.text().then(decode)}),this.json=function(){return this.text().then(JSON.parse)},this}Headers.prototype.append=function(e,t){e=normalizeName(e),t=normalizeValue(t);var f=this.map[e];this.map[e]=f?f+", "+t:t},Headers.prototype.delete=function(e){delete this.map[normalizeName(e)]},Headers.prototype.get=function(e){return e=normalizeName(e),this.has(e)?this.map[e]:null},Headers.prototype.has=function(e){return this.map.hasOwnProperty(normalizeName(e))},Headers.prototype.set=function(e,t){this.map[normalizeName(e)]=normalizeValue(t)},Headers.prototype.forEach=function(e,t){for(var f in this.map)this.map.hasOwnProperty(f)&&e.call(t,this.map[f],f,this)},Headers.prototype.keys=function(){var e=[];return this.forEach(function(t,f){e.push(f)}),iteratorFor(e)},Headers.prototype.values=function(){var e=[];return this.forEach(function(t){e.push(t)}),iteratorFor(e)},Headers.prototype.entries=function(){var e=[];return this.forEach(function(t,f){e.push([f,t])}),iteratorFor(e)},t.iterable&&(Headers.prototype[Symbol.iterator]=Headers.prototype.entries);var i=["DELETE","GET","HEAD","OPTIONS","POST","PUT"];function Request(e,t){var f,n,a=(t=t||{}).body;if(e instanceof Request){if(e.bodyUsed)throw TypeError("Already read");this.url=e.url,this.credentials=e.credentials,t.headers||(this.headers=new Headers(e.headers)),this.method=e.method,this.mode=e.mode,this.signal=e.signal,a||null==e._bodyInit||(a=e._bodyInit,e.bodyUsed=!0)}else this.url=String(e);if(this.credentials=t.credentials||this.credentials||"same-origin",(t.headers||!this.headers)&&(this.headers=new Headers(t.headers)),this.method=(n=(f=t.method||this.method||"GET").toUpperCase(),i.indexOf(n)>-1?n:f),this.mode=t.mode||this.mode||null,this.signal=t.signal||this.signal,this.referrer=null,("GET"===this.method||"HEAD"===this.method)&&a)throw TypeError("Body not allowed for GET or HEAD requests");this._initBody(a)}function decode(e){var t=new FormData;return e.trim().split("&").forEach(function(e){if(e){var f=e.split("="),n=f.shift().replace(/\+/g," "),a=f.join("=").replace(/\+/g," ");t.append(decodeURIComponent(n),decodeURIComponent(a))}}),t}function Response(e,t){t||(t={}),this.type="default",this.status=void 0===t.status?200:t.status,this.ok=this.status>=200&&this.status<300,this.statusText="statusText"in t?t.statusText:"OK",this.headers=new Headers(t.headers),this.url=t.url||"",this._initBody(e)}Request.prototype.clone=function(){return new Request(this,{body:this._bodyInit})},Body.call(Request.prototype),Body.call(Response.prototype),Response.prototype.clone=function(){return new Response(this._bodyInit,{status:this.status,statusText:this.statusText,headers:new Headers(this.headers),url:this.url})},Response.error=function(){var e=new Response(null,{status:0,statusText:""});return e.type="error",e};var r=[301,302,303,307,308];Response.redirect=function(e,t){if(-1===r.indexOf(t))throw RangeError("Invalid status code");return new Response(null,{status:t,headers:{location:e}})},e.DOMException=n.DOMException;try{new e.DOMException}catch(t){e.DOMException=function(e,t){this.message=e,this.name=t;var f=Error(e);this.stack=f.stack},e.DOMException.prototype=Object.create(Error.prototype),e.DOMException.prototype.constructor=e.DOMException}function fetch(f,n){return new Promise(function(a,i){var r=new Request(f,n);if(r.signal&&r.signal.aborted)return i(new e.DOMException("Aborted","AbortError"));var o=new XMLHttpRequest;function abortXhr(){o.abort()}o.onload=function(){var e,t,f={status:o.status,statusText:o.statusText,headers:(e=o.getAllResponseHeaders()||"",t=new Headers,e.replace(/\r?\n[\t ]+/g," ").split(/\r?\n/).forEach(function(e){var f=e.split(":"),n=f.shift().trim();if(n){var a=f.join(":").trim();t.append(n,a)}}),t)};f.url="responseURL"in o?o.responseURL:f.headers.get("X-Request-URL");var n="response"in o?o.response:o.responseText;a(new Response(n,f))},o.onerror=function(){i(TypeError("Network request failed"))},o.ontimeout=function(){i(TypeError("Network request failed"))},o.onabort=function(){i(new e.DOMException("Aborted","AbortError"))},o.open(r.method,r.url,!0),"include"===r.credentials?o.withCredentials=!0:"omit"===r.credentials&&(o.withCredentials=!1),"responseType"in o&&t.blob&&(o.responseType="blob"),r.headers.forEach(function(e,t){o.setRequestHeader(t,e)}),r.signal&&(r.signal.addEventListener("abort",abortXhr),o.onreadystatechange=function(){4===o.readyState&&r.signal.removeEventListener("abort",abortXhr)}),o.send(void 0===r._bodyInit?null:r._bodyInit)})}fetch.polyfill=!0,n.fetch||(n.fetch=fetch,n.Headers=Headers,n.Request=Request,n.Response=Response),e.Headers=Headers,e.Request=Request,e.Response=Response,e.fetch=fetch,Object.defineProperty(e,"__esModule",{value:!0})})({}),n.fetch.ponyfill=!0,delete n.fetch.polyfill,(t=n.fetch).default=n.fetch,t.fetch=n.fetch,t.Headers=n.Headers,t.Request=n.Request,t.Response=n.Response,e.exports=t},7396:function(e){e.exports="object"==typeof self?self.FormData:window.FormData},68145:function(e){e.exports=function(e){return!isNaN(parseFloat(e))&&isFinite(e)}},88178:function(e,t,f){var n=f(9445),a=f(54048),i=n.DEFAULT_COMPARATOR,r=n.reverseComparator;function consume(e,t,f,n){for(var i,r,o=n,s=new e(n);o>0;)i=f[--o],0!==o&&(r=f[0],f[0]=i,function(e,t,f,n){for(var i,r=n,o=t[n],s=2*n+1;s<f;)(i=s+1)<f&&e(t[s],t[i])>=0&&(s=i),t[n]=t[s],s=2*(n=s)+1;t[n]=o,a.siftDown(e,t,r,n)}(t,f,--n,0),i=r),s[o]=i;return s}function FixedReverseHeap(e,t,f){if(2==arguments.length&&(f=t,t=null),this.ArrayClass=e,this.capacity=f,this.items=new e(f),this.clear(),this.comparator=t||i,"number"!=typeof f&&f<=0)throw Error("mnemonist/FixedReverseHeap.constructor: capacity should be a number > 0.");if("function"!=typeof this.comparator)throw Error("mnemonist/FixedReverseHeap.constructor: given comparator should be a function.");this.comparator=r(this.comparator)}FixedReverseHeap.prototype.clear=function(){this.size=0},FixedReverseHeap.prototype.push=function(e){return this.size<this.capacity?(this.items[this.size]=e,a.siftDown(this.comparator,this.items,0,this.size),this.size++):this.comparator(e,this.items[0])>0&&a.replace(this.comparator,this.items,e),this.size},FixedReverseHeap.prototype.peek=function(){return this.items[0]},FixedReverseHeap.prototype.consume=function(){var e=consume(this.ArrayClass,this.comparator,this.items,this.size);return this.size=0,e},FixedReverseHeap.prototype.toArray=function(){return consume(this.ArrayClass,this.comparator,this.items.slice(0,this.size),this.size)},FixedReverseHeap.prototype.inspect=function(){var e=this.toArray();return Object.defineProperty(e,"constructor",{value:FixedReverseHeap,enumerable:!1}),e},"undefined"!=typeof Symbol&&(FixedReverseHeap.prototype[Symbol.for("nodejs.util.inspect.custom")]=FixedReverseHeap.prototype.inspect),e.exports=FixedReverseHeap},54048:function(e,t,f){var n=f(58297),a=f(9445),i=f(73154),r=a.DEFAULT_COMPARATOR,o=a.reverseComparator;function siftDown(e,t,f,n){for(var a,i,r=t[n];n>f;){if(0>e(r,i=t[a=n-1>>1])){t[n]=i,n=a;continue}break}t[n]=r}function siftUp(e,t,f){for(var n,a=t.length,i=f,r=t[f],o=2*f+1;o<a;)(n=o+1)<a&&e(t[o],t[n])>=0&&(o=n),t[f]=t[o],o=2*(f=o)+1;t[f]=r,siftDown(e,t,i,f)}function push(e,t,f){t.push(f),siftDown(e,t,0,t.length-1)}function pop(e,t){var f=t.pop();if(0!==t.length){var n=t[0];return t[0]=f,siftUp(e,t,0),n}return f}function replace(e,t,f){if(0===t.length)throw Error("mnemonist/heap.replace: cannot pop an empty heap.");var n=t[0];return t[0]=f,siftUp(e,t,0),n}function pushpop(e,t,f){var n;return 0!==t.length&&0>e(t[0],f)&&(n=t[0],t[0]=f,f=n,siftUp(e,t,0)),f}function heapify(e,t){for(var f=t.length>>1;--f>=0;)siftUp(e,t,f)}function consume(e,t){for(var f=t.length,n=0,a=Array(f);n<f;)a[n++]=pop(e,t);return a}function Heap(e){if(this.clear(),this.comparator=e||r,"function"!=typeof this.comparator)throw Error("mnemonist/Heap.constructor: given comparator should be a function.")}function MaxHeap(e){if(this.clear(),this.comparator=e||r,"function"!=typeof this.comparator)throw Error("mnemonist/MaxHeap.constructor: given comparator should be a function.");this.comparator=o(this.comparator)}Heap.prototype.clear=function(){this.items=[],this.size=0},Heap.prototype.push=function(e){return push(this.comparator,this.items,e),++this.size},Heap.prototype.peek=function(){return this.items[0]},Heap.prototype.pop=function(){return 0!==this.size&&this.size--,pop(this.comparator,this.items)},Heap.prototype.replace=function(e){return replace(this.comparator,this.items,e)},Heap.prototype.pushpop=function(e){return pushpop(this.comparator,this.items,e)},Heap.prototype.consume=function(){return this.size=0,consume(this.comparator,this.items)},Heap.prototype.toArray=function(){return consume(this.comparator,this.items.slice())},Heap.prototype.inspect=function(){var e=this.toArray();return Object.defineProperty(e,"constructor",{value:Heap,enumerable:!1}),e},"undefined"!=typeof Symbol&&(Heap.prototype[Symbol.for("nodejs.util.inspect.custom")]=Heap.prototype.inspect),MaxHeap.prototype=Heap.prototype,Heap.from=function(e,t){var f,n=new Heap(t);return f=i.isArrayLike(e)?e.slice():i.toArray(e),heapify(n.comparator,f),n.items=f,n.size=f.length,n},MaxHeap.from=function(e,t){var f,n=new MaxHeap(t);return f=i.isArrayLike(e)?e.slice():i.toArray(e),heapify(n.comparator,f),n.items=f,n.size=f.length,n},Heap.siftUp=siftUp,Heap.siftDown=siftDown,Heap.push=push,Heap.pop=pop,Heap.replace=replace,Heap.pushpop=pushpop,Heap.heapify=heapify,Heap.consume=consume,Heap.nsmallest=function(e,t,f){2==arguments.length&&(f=t,t=e,e=r);var a,s,d,u,l=o(e),p=1/0;if(1===t){if(i.isArrayLike(f)){for(a=0,s=f.length;a<s;a++)d=f[a],(p===1/0||0>e(d,p))&&(p=d);return(u=new f.constructor(1))[0]=p,u}return n(f,function(t){(p===1/0||0>e(t,p))&&(p=t)}),[p]}if(i.isArrayLike(f)){if(t>=f.length)return f.slice().sort(e);for(heapify(l,u=f.slice(0,t)),a=t,s=f.length;a<s;a++)l(f[a],u[0])>0&&replace(l,u,f[a]);return u.sort(e)}var h=i.guessLength(f);return null!==h&&h<t&&(t=h),u=Array(t),a=0,n(f,function(e){a<t?u[a]=e:(a===t&&heapify(l,u),l(e,u[0])>0&&replace(l,u,e)),a++}),u.length>a&&(u.length=a),u.sort(e)},Heap.nlargest=function(e,t,f){2==arguments.length&&(f=t,t=e,e=r);var a,s,d,u,l=o(e),p=-1/0;if(1===t){if(i.isArrayLike(f)){for(a=0,s=f.length;a<s;a++)d=f[a],(p===-1/0||e(d,p)>0)&&(p=d);return(u=new f.constructor(1))[0]=p,u}return n(f,function(t){(p===-1/0||e(t,p)>0)&&(p=t)}),[p]}if(i.isArrayLike(f)){if(t>=f.length)return f.slice().sort(l);for(u=f.slice(0,t),heapify(e,u),a=t,s=f.length;a<s;a++)e(f[a],u[0])>0&&replace(e,u,f[a]);return u.sort(l)}var h=i.guessLength(f);return null!==h&&h<t&&(t=h),u=Array(t),a=0,n(f,function(f){a<t?u[a]=f:(a===t&&heapify(e,u),e(f,u[0])>0&&replace(e,u,f)),a++}),u.length>a&&(u.length=a),u.sort(l)},Heap.MinHeap=Heap,Heap.MaxHeap=MaxHeap,e.exports=Heap},64116:function(e,t,f){var n=f(3643),a=f(58297);function Queue(){this.clear()}Queue.prototype.clear=function(){this.items=[],this.offset=0,this.size=0},Queue.prototype.enqueue=function(e){return this.items.push(e),++this.size},Queue.prototype.dequeue=function(){if(this.size){var e=this.items[this.offset];return 2*++this.offset>=this.items.length&&(this.items=this.items.slice(this.offset),this.offset=0),this.size--,e}},Queue.prototype.peek=function(){if(this.size)return this.items[this.offset]},Queue.prototype.forEach=function(e,t){t=arguments.length>1?t:this;for(var f=this.offset,n=0,a=this.items.length;f<a;f++,n++)e.call(t,this.items[f],n,this)},Queue.prototype.toArray=function(){return this.items.slice(this.offset)},Queue.prototype.values=function(){var e=this.items,t=this.offset;return new n(function(){if(t>=e.length)return{done:!0};var f=e[t];return t++,{value:f,done:!1}})},Queue.prototype.entries=function(){var e=this.items,t=this.offset,f=0;return new n(function(){if(t>=e.length)return{done:!0};var n=e[t];return t++,{value:[f++,n],done:!1}})},"undefined"!=typeof Symbol&&(Queue.prototype[Symbol.iterator]=Queue.prototype.values),Queue.prototype.toString=function(){return this.toArray().join(",")},Queue.prototype.toJSON=function(){return this.toArray()},Queue.prototype.inspect=function(){var e=this.toArray();return Object.defineProperty(e,"constructor",{value:Queue,enumerable:!1}),e},"undefined"!=typeof Symbol&&(Queue.prototype[Symbol.for("nodejs.util.inspect.custom")]=Queue.prototype.inspect),Queue.from=function(e){var t=new Queue;return a(e,function(e){t.enqueue(e)}),t},Queue.of=function(){return Queue.from(arguments)},e.exports=Queue},9445:function(e,t){t.DEFAULT_COMPARATOR=function(e,t){return e<t?-1:e>t?1:0},t.DEFAULT_REVERSE_COMPARATOR=function(e,t){return e<t?1:e>t?-1:0},t.reverseComparator=function(e){return function(t,f){return e(f,t)}},t.createTupleComparator=function(e){return 2===e?function(e,t){return e[0]<t[0]?-1:e[0]>t[0]?1:e[1]<t[1]?-1:e[1]>t[1]?1:0}:function(t,f){for(var n=0;n<e;){if(t[n]<f[n])return -1;if(t[n]>f[n])return 1;n++}return 0}}},73154:function(e,t,f){var n=f(58297),a=f(45176);function guessLength(e){return"number"==typeof e.length?e.length:"number"==typeof e.size?e.size:void 0}t.isArrayLike=function(e){return Array.isArray(e)||a.isTypedArray(e)},t.guessLength=guessLength,t.toArray=function(e){var t=guessLength(e),f="number"==typeof t?Array(t):[],a=0;return n(e,function(e){f[a++]=e}),f},t.toArrayWithIndices=function(e){var t=guessLength(e),f="number"==typeof t?a.getPointerArray(t):Array,i="number"==typeof t?Array(t):[],r="number"==typeof t?new f(t):[],o=0;return n(e,function(e){i[o]=e,r[o]=o++}),[i,r]}},45176:function(e,t){t.getPointerArray=function(e){var t=e-1;if(t<=255)return Uint8Array;if(t<=65535)return Uint16Array;if(t<=4294967295)return Uint32Array;throw Error("mnemonist: Pointer Array of size > 4294967295 is not supported.")},t.getSignedPointerArray=function(e){var t=e-1;return t<=127?Int8Array:t<=32767?Int16Array:t<=2147483647?Int32Array:Float64Array},t.getNumberType=function(e){return e===(0|e)?-1===Math.sign(e)?e<=127&&e>=-128?Int8Array:e<=32767&&e>=-32768?Int16Array:Int32Array:e<=255?Uint8Array:e<=65535?Uint16Array:Uint32Array:Float64Array};var f={Uint8Array:1,Int8Array:2,Uint16Array:3,Int16Array:4,Uint32Array:5,Int32Array:6,Float32Array:7,Float64Array:8};t.getMinimalRepresentation=function(e,n){var a,i,r,o,s,d=null,u=0;for(o=0,s=e.length;o<s;o++)r=n?n(e[o]):e[o],(a=f[(i=t.getNumberType(r)).name])>u&&(u=a,d=i);return d},t.isTypedArray=function(e){return"undefined"!=typeof ArrayBuffer&&ArrayBuffer.isView(e)},t.concat=function(){var e,t,f,n=0;for(e=0,f=arguments.length;e<f;e++)n+=arguments[e].length;var a=new arguments[0].constructor(n);for(e=0,t=0;e<f;e++)a.set(arguments[e],t),t+=arguments[e].length;return a},t.indices=function(e){for(var f=new(t.getPointerArray(e))(e),n=0;n<e;n++)f[n]=n;return f}},29743:function(e){!function(){"use strict";var t={114:function(e){function assertPath(e){if("string"!=typeof e)throw TypeError("Path must be a string. Received "+JSON.stringify(e))}function normalizeStringPosix(e,t){for(var f,n="",a=0,i=-1,r=0,o=0;o<=e.length;++o){if(o<e.length)f=e.charCodeAt(o);else if(47===f)break;else f=47;if(47===f){if(i===o-1||1===r);else if(i!==o-1&&2===r){if(n.length<2||2!==a||46!==n.charCodeAt(n.length-1)||46!==n.charCodeAt(n.length-2)){if(n.length>2){var s=n.lastIndexOf("/");if(s!==n.length-1){-1===s?(n="",a=0):a=(n=n.slice(0,s)).length-1-n.lastIndexOf("/"),i=o,r=0;continue}}else if(2===n.length||1===n.length){n="",a=0,i=o,r=0;continue}}t&&(n.length>0?n+="/..":n="..",a=2)}else n.length>0?n+="/"+e.slice(i+1,o):n=e.slice(i+1,o),a=o-i-1;i=o,r=0}else 46===f&&-1!==r?++r:r=-1}return n}var t={resolve:function(){for(var e,t,f="",n=!1,a=arguments.length-1;a>=-1&&!n;a--)a>=0?t=arguments[a]:(void 0===e&&(e=""),t=e),assertPath(t),0!==t.length&&(f=t+"/"+f,n=47===t.charCodeAt(0));return(f=normalizeStringPosix(f,!n),n)?f.length>0?"/"+f:"/":f.length>0?f:"."},normalize:function(e){if(assertPath(e),0===e.length)return".";var t=47===e.charCodeAt(0),f=47===e.charCodeAt(e.length-1);return(0!==(e=normalizeStringPosix(e,!t)).length||t||(e="."),e.length>0&&f&&(e+="/"),t)?"/"+e:e},isAbsolute:function(e){return assertPath(e),e.length>0&&47===e.charCodeAt(0)},join:function(){if(0==arguments.length)return".";for(var e,f=0;f<arguments.length;++f){var n=arguments[f];assertPath(n),n.length>0&&(void 0===e?e=n:e+="/"+n)}return void 0===e?".":t.normalize(e)},relative:function(e,f){if(assertPath(e),assertPath(f),e===f||(e=t.resolve(e))===(f=t.resolve(f)))return"";for(var n=1;n<e.length&&47===e.charCodeAt(n);++n);for(var a=e.length,i=a-n,r=1;r<f.length&&47===f.charCodeAt(r);++r);for(var o=f.length-r,s=i<o?i:o,d=-1,u=0;u<=s;++u){if(u===s){if(o>s){if(47===f.charCodeAt(r+u))return f.slice(r+u+1);if(0===u)return f.slice(r+u)}else i>s&&(47===e.charCodeAt(n+u)?d=u:0===u&&(d=0));break}var l=e.charCodeAt(n+u);if(l!==f.charCodeAt(r+u))break;47===l&&(d=u)}var p="";for(u=n+d+1;u<=a;++u)(u===a||47===e.charCodeAt(u))&&(0===p.length?p+="..":p+="/..");return p.length>0?p+f.slice(r+d):(r+=d,47===f.charCodeAt(r)&&++r,f.slice(r))},_makeLong:function(e){return e},dirname:function(e){if(assertPath(e),0===e.length)return".";for(var t=e.charCodeAt(0),f=47===t,n=-1,a=!0,i=e.length-1;i>=1;--i)if(47===(t=e.charCodeAt(i))){if(!a){n=i;break}}else a=!1;return -1===n?f?"/":".":f&&1===n?"//":e.slice(0,n)},basename:function(e,t){if(void 0!==t&&"string"!=typeof t)throw TypeError('"ext" argument must be a string');assertPath(e);var f,n=0,a=-1,i=!0;if(void 0!==t&&t.length>0&&t.length<=e.length){if(t.length===e.length&&t===e)return"";var r=t.length-1,o=-1;for(f=e.length-1;f>=0;--f){var s=e.charCodeAt(f);if(47===s){if(!i){n=f+1;break}}else -1===o&&(i=!1,o=f+1),r>=0&&(s===t.charCodeAt(r)?-1==--r&&(a=f):(r=-1,a=o))}return n===a?a=o:-1===a&&(a=e.length),e.slice(n,a)}for(f=e.length-1;f>=0;--f)if(47===e.charCodeAt(f)){if(!i){n=f+1;break}}else -1===a&&(i=!1,a=f+1);return -1===a?"":e.slice(n,a)},extname:function(e){assertPath(e);for(var t=-1,f=0,n=-1,a=!0,i=0,r=e.length-1;r>=0;--r){var o=e.charCodeAt(r);if(47===o){if(!a){f=r+1;break}continue}-1===n&&(a=!1,n=r+1),46===o?-1===t?t=r:1!==i&&(i=1):-1!==t&&(i=-1)}return -1===t||-1===n||0===i||1===i&&t===n-1&&t===f+1?"":e.slice(t,n)},format:function(e){var t,f;if(null===e||"object"!=typeof e)throw TypeError('The "pathObject" argument must be of type Object. Received type '+typeof e);return t=e.dir||e.root,f=e.base||(e.name||"")+(e.ext||""),t?t===e.root?t+f:t+"/"+f:f},parse:function(e){assertPath(e);var t,f={root:"",dir:"",base:"",ext:"",name:""};if(0===e.length)return f;var n=e.charCodeAt(0),a=47===n;a?(f.root="/",t=1):t=0;for(var i=-1,r=0,o=-1,s=!0,d=e.length-1,u=0;d>=t;--d){if(47===(n=e.charCodeAt(d))){if(!s){r=d+1;break}continue}-1===o&&(s=!1,o=d+1),46===n?-1===i?i=d:1!==u&&(u=1):-1!==i&&(u=-1)}return -1===i||-1===o||0===u||1===u&&i===o-1&&i===r+1?-1!==o&&(0===r&&a?f.base=f.name=e.slice(1,o):f.base=f.name=e.slice(r,o)):(0===r&&a?(f.name=e.slice(1,i),f.base=e.slice(1,o)):(f.name=e.slice(r,i),f.base=e.slice(r,o)),f.ext=e.slice(i,o)),r>0?f.dir=e.slice(0,r-1):a&&(f.dir="/"),f},sep:"/",delimiter:":",win32:null,posix:null};t.posix=t,e.exports=t}},f={};function __nccwpck_require__(e){var n=f[e];if(void 0!==n)return n.exports;var a=f[e]={exports:{}},i=!0;try{t[e](a,a.exports,__nccwpck_require__),i=!1}finally{i&&delete f[e]}return a.exports}__nccwpck_require__.ab="//";var n=__nccwpck_require__(114);e.exports=n}()},31199:function(e,t,f){(function(){(e.exports=f(14321)).version="5.1.2"}).call(this)},14321:function(e,t,f){var n=f(67133).Buffer;(function(){var t,a,i=[].splice,boundMethodCheck=function(e,t){if(!(e instanceof t))throw Error("Bound instance method accessed before binding")},r=[].indexOf;a=f(66380),t=f(512).EventEmitter,e.exports=(function(){let NodeCache=class NodeCache extends t{constructor(e={}){super(),this.get=this.get.bind(this),this.mget=this.mget.bind(this),this.set=this.set.bind(this),this.mset=this.mset.bind(this),this.del=this.del.bind(this),this.take=this.take.bind(this),this.ttl=this.ttl.bind(this),this.getTtl=this.getTtl.bind(this),this.keys=this.keys.bind(this),this.has=this.has.bind(this),this.getStats=this.getStats.bind(this),this.flushAll=this.flushAll.bind(this),this.flushStats=this.flushStats.bind(this),this.close=this.close.bind(this),this._checkData=this._checkData.bind(this),this._check=this._check.bind(this),this._isInvalidKey=this._isInvalidKey.bind(this),this._wrap=this._wrap.bind(this),this._getValLength=this._getValLength.bind(this),this._error=this._error.bind(this),this._initErrors=this._initErrors.bind(this),this.options=e,this._initErrors(),this.data={},this.options=Object.assign({forceString:!1,objectValueSize:80,promiseValueSize:80,arrayValueSize:40,stdTTL:0,checkperiod:600,useClones:!0,deleteOnExpire:!0,enableLegacyCallbacks:!1,maxKeys:-1},this.options),this.options.enableLegacyCallbacks&&(console.warn("WARNING! node-cache legacy callback support will drop in v6.x"),["get","mget","set","del","ttl","getTtl","keys","has"].forEach(e=>{var t;t=this[e],this[e]=function(...e){var f,n,a;if(n=e,[...e]=n,[f]=i.call(e,-1),"function"!=typeof f)return t(...e,f);try{a=t(...e),f(null,a)}catch(e){f(e)}}})),this.stats={hits:0,misses:0,keys:0,ksize:0,vsize:0},this.validKeyTypes=["string","number"],this._checkData();return}get(e){var t;if(boundMethodCheck(this,NodeCache),null!=(t=this._isInvalidKey(e)))throw t;if(null!=this.data[e]&&this._check(e,this.data[e]))return this.stats.hits++,this._unwrap(this.data[e]);this.stats.misses++}mget(e){var t,f,n,a,i;if(boundMethodCheck(this,NodeCache),!Array.isArray(e))throw this._error("EKEYSTYPE");for(f=0,i={},a=e.length;f<a;f++){if(n=e[f],null!=(t=this._isInvalidKey(n)))throw t;null!=this.data[n]&&this._check(n,this.data[n])?(this.stats.hits++,i[n]=this._unwrap(this.data[n])):this.stats.misses++}return i}set(e,t,f){var n,a;if(boundMethodCheck(this,NodeCache),this.options.maxKeys>-1&&this.stats.keys>=this.options.maxKeys)throw this._error("ECACHEFULL");if(this.options.forceString,null==f&&(f=this.options.stdTTL),null!=(n=this._isInvalidKey(e)))throw n;return a=!1,this.data[e]&&(a=!0,this.stats.vsize-=this._getValLength(this._unwrap(this.data[e],!1))),this.data[e]=this._wrap(t,f),this.stats.vsize+=this._getValLength(t),!a&&(this.stats.ksize+=this._getKeyLength(e),this.stats.keys++),this.emit("set",e,t),!0}mset(e){var t,f,n,a,i,r,o,s,d;if(boundMethodCheck(this,NodeCache),this.options.maxKeys>-1&&this.stats.keys+e.length>=this.options.maxKeys)throw this._error("ECACHEFULL");for(f=0,r=e.length;f<r;f++){if(i=e[f],{key:a,val:d,ttl:s}=i,s&&"number"!=typeof s)throw this._error("ETTLTYPE");if(null!=(t=this._isInvalidKey(a)))throw t}for(n=0,o=e.length;n<o;n++)i=e[n],({key:a,val:d,ttl:s}=i),this.set(a,d,s);return!0}del(e){var t,f,n,a,i,r;for(boundMethodCheck(this,NodeCache),Array.isArray(e)||(e=[e]),t=0,n=0,i=e.length;n<i;n++){if(a=e[n],null!=(f=this._isInvalidKey(a)))throw f;null!=this.data[a]&&(this.stats.vsize-=this._getValLength(this._unwrap(this.data[a],!1)),this.stats.ksize-=this._getKeyLength(a),this.stats.keys--,t++,r=this.data[a],delete this.data[a],this.emit("del",a,r.v))}return t}take(e){var t;return boundMethodCheck(this,NodeCache),null!=(t=this.get(e))&&this.del(e),t}ttl(e,t){var f;if(boundMethodCheck(this,NodeCache),t||(t=this.options.stdTTL),!e)return!1;if(null!=(f=this._isInvalidKey(e)))throw f;return!!(null!=this.data[e]&&this._check(e,this.data[e]))&&(t>=0?this.data[e]=this._wrap(this.data[e].v,t,!1):this.del(e),!0)}getTtl(e){var t;if(boundMethodCheck(this,NodeCache),e){if(null!=(t=this._isInvalidKey(e)))throw t;return null!=this.data[e]&&this._check(e,this.data[e])?this.data[e].t:void 0}}keys(){return boundMethodCheck(this,NodeCache),Object.keys(this.data)}has(e){return boundMethodCheck(this,NodeCache),null!=this.data[e]&&this._check(e,this.data[e])}getStats(){return boundMethodCheck(this,NodeCache),this.stats}flushAll(e=!0){boundMethodCheck(this,NodeCache),this.data={},this.stats={hits:0,misses:0,keys:0,ksize:0,vsize:0},this._killCheckPeriod(),this._checkData(e),this.emit("flush")}flushStats(){boundMethodCheck(this,NodeCache),this.stats={hits:0,misses:0,keys:0,ksize:0,vsize:0},this.emit("flush_stats")}close(){boundMethodCheck(this,NodeCache),this._killCheckPeriod()}_checkData(e=!0){var t,f,n;for(t in boundMethodCheck(this,NodeCache),f=this.data)n=f[t],this._check(t,n);e&&this.options.checkperiod>0&&(this.checkTimeout=setTimeout(this._checkData,1e3*this.options.checkperiod,e),null!=this.checkTimeout&&null!=this.checkTimeout.unref&&this.checkTimeout.unref())}_killCheckPeriod(){if(null!=this.checkTimeout)return clearTimeout(this.checkTimeout)}_check(e,t){var f;return boundMethodCheck(this,NodeCache),f=!0,0!==t.t&&t.t<Date.now()&&(this.options.deleteOnExpire&&(f=!1,this.del(e)),this.emit("expired",e,this._unwrap(t))),f}_isInvalidKey(e){if(boundMethodCheck(this,NodeCache),0>r.call(this.validKeyTypes,typeof e))return this._error("EKEYTYPE",{type:typeof e})}_wrap(e,t,f=!0){var n;return boundMethodCheck(this,NodeCache),this.options.useClones||(f=!1),n=Date.now(),{t:0===t?0:t?n+1e3*t:0===this.options.stdTTL?this.options.stdTTL:n+1e3*this.options.stdTTL,v:f?a(e):e}}_unwrap(e,t=!0){return(this.options.useClones||(t=!1),null!=e.v)?t?a(e.v):e.v:null}_getKeyLength(e){return e.toString().length}_getValLength(e){if(boundMethodCheck(this,NodeCache),"string"==typeof e)return e.length;if(this.options.forceString)return JSON.stringify(e).length;if(Array.isArray(e))return this.options.arrayValueSize*e.length;if("number"==typeof e)return 8;if("function"==typeof(null!=e?e.then:void 0))return this.options.promiseValueSize;if(null!=n?n.isBuffer(e):void 0)return e.length;if(null!=e&&"object"==typeof e)return this.options.objectValueSize*Object.keys(e).length;else if("boolean"==typeof e)return 8;else return 0}_error(e,t={}){var f;return boundMethodCheck(this,NodeCache),(f=Error()).name=e,f.errorcode=e,f.message=null!=this.ERRORS[e]?this.ERRORS[e](t):"-",f.data=t,f}_initErrors(){var e,t,f;for(t in boundMethodCheck(this,NodeCache),this.ERRORS={},f=this._ERRORS)e=f[t],this.ERRORS[t]=this.createErrorMessage(e)}createErrorMessage(e){return function(t){return e.replace("__key",t.type)}}};return NodeCache.prototype._ERRORS={ENOTFOUND:"Key `__key` not found",ECACHEFULL:"Cache max keys amount exceeded",EKEYTYPE:"The key argument has to be of type `string` or `number`. Found: `__key`",EKEYSTYPE:"The keys argument has to be an array.",ETTLTYPE:"The ttl argument has to be a number."},NodeCache}).call(this)}).call(this)},58297:function(e,t,f){var n=f(88132),a=n.ARRAY_BUFFER_SUPPORT,i=n.SYMBOL_SUPPORT;e.exports=function(e,t){var f,n,r,o,s;if(!e)throw Error("obliterator/forEach: invalid iterable.");if("function"!=typeof t)throw Error("obliterator/forEach: expecting a callback.");if(Array.isArray(e)||a&&ArrayBuffer.isView(e)||"string"==typeof e||"[object Arguments]"===e.toString()){for(r=0,o=e.length;r<o;r++)t(e[r],r);return}if("function"==typeof e.forEach){e.forEach(t);return}if(i&&Symbol.iterator in e&&"function"!=typeof e.next&&(e=e[Symbol.iterator]()),"function"==typeof e.next){for(f=e,r=0;!0!==(s=f.next()).done;)t(s.value,r),r++;return}for(n in e)e.hasOwnProperty(n)&&t(e[n],n)}},3643:function(e){function Iterator(e){if("function"!=typeof e)throw Error("obliterator/iterator: expecting a function!");this.next=e}"undefined"!=typeof Symbol&&(Iterator.prototype[Symbol.iterator]=function(){return this}),Iterator.of=function(){var e=arguments,t=e.length,f=0;return new Iterator(function(){return f>=t?{done:!0}:{done:!1,value:e[f++]}})},Iterator.empty=function(){return new Iterator(function(){return{done:!0}})},Iterator.fromSequence=function(e){var t=0,f=e.length;return new Iterator(function(){return t>=f?{done:!0}:{done:!1,value:e[t++]}})},Iterator.is=function(e){return e instanceof Iterator||"object"==typeof e&&null!==e&&"function"==typeof e.next},e.exports=Iterator},88132:function(e,t){t.ARRAY_BUFFER_SUPPORT="undefined"!=typeof ArrayBuffer,t.SYMBOL_SUPPORT="undefined"!=typeof Symbol},87793:function(e,t,f){e.exports=f(24060)},24060:function(e,t,f){var n=f(56461);t.operation=function(e){var f=t.timeouts(e);return new n(f,{forever:e&&(e.forever||e.retries===1/0),unref:e&&e.unref,maxRetryTime:e&&e.maxRetryTime})},t.timeouts=function(e){if(e instanceof Array)return[].concat(e);var t={retries:10,factor:2,minTimeout:1e3,maxTimeout:1/0,randomize:!1};for(var f in e)t[f]=e[f];if(t.minTimeout>t.maxTimeout)throw Error("minTimeout is greater than maxTimeout");for(var n=[],a=0;a<t.retries;a++)n.push(this.createTimeout(a,t));return e&&e.forever&&!n.length&&n.push(this.createTimeout(a,t)),n.sort(function(e,t){return e-t}),n},t.createTimeout=function(e,t){return Math.min(Math.round((t.randomize?Math.random()+1:1)*Math.max(t.minTimeout,1)*Math.pow(t.factor,e)),t.maxTimeout)},t.wrap=function(e,f,n){if(f instanceof Array&&(n=f,f=null),!n)for(var a in n=[],e)"function"==typeof e[a]&&n.push(a);for(var i=0;i<n.length;i++){var r=n[i],o=e[r];e[r]=(function(n){var a=t.operation(f),i=Array.prototype.slice.call(arguments,1),r=i.pop();i.push(function(e){a.retry(e)||(e&&(arguments[0]=a.mainError()),r.apply(this,arguments))}),a.attempt(function(){n.apply(e,i)})}).bind(e,o),e[r].options=f}}},56461:function(e){function RetryOperation(e,t){"boolean"==typeof t&&(t={forever:t}),this._originalTimeouts=JSON.parse(JSON.stringify(e)),this._timeouts=e,this._options=t||{},this._maxRetryTime=t&&t.maxRetryTime||1/0,this._fn=null,this._errors=[],this._attempts=1,this._operationTimeout=null,this._operationTimeoutCb=null,this._timeout=null,this._operationStart=null,this._timer=null,this._options.forever&&(this._cachedTimeouts=this._timeouts.slice(0))}e.exports=RetryOperation,RetryOperation.prototype.reset=function(){this._attempts=1,this._timeouts=this._originalTimeouts.slice(0)},RetryOperation.prototype.stop=function(){this._timeout&&clearTimeout(this._timeout),this._timer&&clearTimeout(this._timer),this._timeouts=[],this._cachedTimeouts=null},RetryOperation.prototype.retry=function(e){if(this._timeout&&clearTimeout(this._timeout),!e)return!1;var t=new Date().getTime();if(e&&t-this._operationStart>=this._maxRetryTime)return this._errors.push(e),this._errors.unshift(Error("RetryOperation timeout occurred")),!1;this._errors.push(e);var f=this._timeouts.shift();if(void 0===f){if(!this._cachedTimeouts)return!1;this._errors.splice(0,this._errors.length-1),f=this._cachedTimeouts.slice(-1)}var n=this;return this._timer=setTimeout(function(){n._attempts++,n._operationTimeoutCb&&(n._timeout=setTimeout(function(){n._operationTimeoutCb(n._attempts)},n._operationTimeout),n._options.unref&&n._timeout.unref()),n._fn(n._attempts)},f),this._options.unref&&this._timer.unref(),!0},RetryOperation.prototype.attempt=function(e,t){this._fn=e,t&&(t.timeout&&(this._operationTimeout=t.timeout),t.cb&&(this._operationTimeoutCb=t.cb));var f=this;this._operationTimeoutCb&&(this._timeout=setTimeout(function(){f._operationTimeoutCb()},f._operationTimeout)),this._operationStart=new Date().getTime(),this._fn(this._attempts)},RetryOperation.prototype.try=function(e){console.log("Using RetryOperation.try() is deprecated"),this.attempt(e)},RetryOperation.prototype.start=function(e){console.log("Using RetryOperation.start() is deprecated"),this.attempt(e)},RetryOperation.prototype.start=RetryOperation.prototype.try,RetryOperation.prototype.errors=function(){return this._errors},RetryOperation.prototype.attempts=function(){return this._attempts},RetryOperation.prototype.mainError=function(){if(0===this._errors.length)return null;for(var e={},t=null,f=0,n=0;n<this._errors.length;n++){var a=this._errors[n],i=a.message,r=(e[i]||0)+1;e[i]=r,r>=f&&(t=a,f=r)}return t}},69222:function(e,t,f){"use strict";e.exports.numbers=numbers,e.exports.sum=sum,e.exports.mean=mean,e.exports.median=function(e){if(0===(e=numbers(e)).length)return NaN;var t=e.length/2|0;return(e=nsort(e)).length%2?e[t]:(e[t-1]+e[t])/2},e.exports.mode=function(e){if(0===(e=numbers(e)).length)return NaN;for(var t=NaN,f={},n=0;n<e.length;n++){var a=e[n],i=f[a]||0;i++,f[a]=i}var r=numbers(Object.keys(f).sort(function(e,t){return f[t]-f[e]}));if(t=r[0],f[r[1]]==f[t]){if(r.length==e.length)return e;for(var o=new Set([t]),s=f[t],n=1;n<r.length;n++)if(f[r[n]]==s)o.add(r[n]);else break;return o}return t},e.exports.variance=populationVariance,e.exports.sampleVariance=sampleVariance,e.exports.populationVariance=populationVariance,e.exports.stdev=populationStdev,e.exports.sampleStdev=function(e){return Math.sqrt(sampleVariance(e))},e.exports.populationStdev=populationStdev,e.exports.percentile=function(e,t){if(0===(e=numbers(e)).length||null==t||t<0)return NaN;t>1&&(t=1);var f=(e=nsort(e)).length*t-.5;if((0|f)===f)return e[f];var n=0|f,a=f-n;return(1-a)*e[n]+a*e[Math.min(n+1,e.length-1)]},e.exports.histogram=function(e,t){if(null==e||0===(e=nsort(numbers(e))).length)return null;null==t&&(t=Math.sqrt(e.length)),(t=Math.round(t))<1&&(t=1);var f=e[0],n=e[e.length-1];f===n&&(f-=.5,n+=.5);var a=n-f,i=(a+.05*a)/t,r=(f+n)/2,o=r-i*Math.floor(t/2);if(t%2!=0)var o=r-i/2-i*Math.floor(t/2);for(var s={values:Array(t).fill(0),bins:t,binWidth:i,binLimits:[o,o+i*t]},d=0,u=0;u<e.length;u++){for(;e[u]>(d+1)*i+o;)d++;s.values[d]++}return s};var n=f(68145);function numbers(e){var t=[];if(null==e)return t;for(var f=0;f<e.length;f++)n(e[f])&&t.push(+e[f]);return t}function nsort(e){return e.sort(function(e,t){return e-t})}function sum(e){e=numbers(e);for(var t=0,f=0;f<e.length;f++)t+=e[f];return t}function mean(e){return 0===(e=numbers(e)).length?NaN:sum(e)/e.length}function valuesMinusMeanSquared(e){for(var t=mean(e=numbers(e)),f=[],n=0;n<e.length;n++)f.push(Math.pow(e[n]-t,2));return f}function populationVariance(e){return mean(valuesMinusMeanSquared(e))}function sampleVariance(e){var t=valuesMinusMeanSquared(e);return t.length<=1?NaN:sum(t)/(t.length-1)}function populationStdev(e){return Math.sqrt(populationVariance(e))}},8782:function(e,t,f){"use strict";f.r(t),f.d(t,{print:function(){return print}});var n="function"==typeof Symbol&&"function"==typeof Symbol.for?Symbol.for("nodejs.util.inspect.custom"):void 0;function _typeof(e){return(_typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function defineInspect(e){var t=e.prototype.toJSON;"function"==typeof t||function(e,t){throw Error(null!=t?t:"Unexpected invariant triggered.")}(0),e.prototype.inspect=t,n&&(e.prototype[n]=t)}function isNode(e){return null!=e&&"string"==typeof e.kind}defineInspect(function(){function Location(e,t,f){this.start=e.start,this.end=t.end,this.startToken=e,this.endToken=t,this.source=f}return Location.prototype.toJSON=function(){return{start:this.start,end:this.end}},Location}()),defineInspect(function(){function Token(e,t,f,n,a,i,r){this.kind=e,this.start=t,this.end=f,this.line=n,this.column=a,this.value=r,this.prev=i,this.next=null}return Token.prototype.toJSON=function(){return{kind:this.kind,value:this.value,line:this.line,column:this.column}},Token}());var a={Name:[],Document:["definitions"],OperationDefinition:["name","variableDefinitions","directives","selectionSet"],VariableDefinition:["variable","type","defaultValue","directives"],Variable:["name"],SelectionSet:["selections"],Field:["alias","name","arguments","directives","selectionSet"],Argument:["name","value"],FragmentSpread:["name","directives"],InlineFragment:["typeCondition","directives","selectionSet"],FragmentDefinition:["name","variableDefinitions","typeCondition","directives","selectionSet"],IntValue:[],FloatValue:[],StringValue:[],BooleanValue:[],NullValue:[],EnumValue:[],ListValue:["values"],ObjectValue:["fields"],ObjectField:["name","value"],Directive:["name","arguments"],NamedType:["name"],ListType:["type"],NonNullType:["type"],SchemaDefinition:["description","directives","operationTypes"],OperationTypeDefinition:["type"],ScalarTypeDefinition:["description","name","directives"],ObjectTypeDefinition:["description","name","interfaces","directives","fields"],FieldDefinition:["description","name","arguments","type","directives"],InputValueDefinition:["description","name","type","defaultValue","directives"],InterfaceTypeDefinition:["description","name","interfaces","directives","fields"],UnionTypeDefinition:["description","name","directives","types"],EnumTypeDefinition:["description","name","directives","values"],EnumValueDefinition:["description","name","directives"],InputObjectTypeDefinition:["description","name","directives","fields"],DirectiveDefinition:["description","name","arguments","locations"],SchemaExtension:["directives","operationTypes"],ScalarTypeExtension:["name","directives"],ObjectTypeExtension:["name","interfaces","directives","fields"],InterfaceTypeExtension:["name","interfaces","directives","fields"],UnionTypeExtension:["name","directives","types"],EnumTypeExtension:["name","directives","values"],InputObjectTypeExtension:["name","directives","fields"]},i=Object.freeze({});function print(e){return function(e,t){var f=arguments.length>2&&void 0!==arguments[2]?arguments[2]:a,r=void 0,o=Array.isArray(e),s=[e],d=-1,u=[],l=void 0,p=void 0,h=void 0,b=[],m=[],y=e;do{var T,g=++d===s.length,v=g&&0!==u.length;if(g){if(p=0===m.length?void 0:b[b.length-1],l=h,h=m.pop(),v){if(o)l=l.slice();else{for(var C={},I=0,E=Object.keys(l);I<E.length;I++){var A=E[I];C[A]=l[A]}l=C}for(var w=0,S=0;S<u.length;S++){var P=u[S][0],O=u[S][1];o&&(P-=w),o&&null===O?(l.splice(P,1),w++):l[P]=O}}d=r.index,s=r.keys,u=r.edits,o=r.inArray,r=r.prev}else{if(p=h?o?d:s[d]:void 0,null==(l=h?h[p]:y))continue;h&&b.push(p)}var k=void 0;if(!Array.isArray(l)){if(!isNode(l))throw Error("Invalid AST Node: ".concat(function formatValue(e,t){switch(_typeof(e)){case"string":return JSON.stringify(e);case"function":return e.name?"[function ".concat(e.name,"]"):"[function]";case"object":if(null===e)return"null";return function(e,t){if(-1!==t.indexOf(e))return"[Circular]";var f,a,i=[].concat(t,[e]),r="function"==typeof(f=e[String(n)])?f:"function"==typeof e.inspect?e.inspect:void 0;if(void 0!==r){var o=r.call(e);if(o!==e)return"string"==typeof o?o:formatValue(o,i)}else if(Array.isArray(e))return function(e,t){if(0===e.length)return"[]";if(t.length>2)return"[Array]";for(var f=Math.min(10,e.length),n=e.length-f,a=[],i=0;i<f;++i)a.push(formatValue(e[i],t));return 1===n?a.push("... 1 more item"):n>1&&a.push("... ".concat(n," more items")),"["+a.join(", ")+"]"}(e,i);return 0===(a=Object.keys(e)).length?"{}":i.length>2?"["+function(e){var t=Object.prototype.toString.call(e).replace(/^\[object /,"").replace(/]$/,"");if("Object"===t&&"function"==typeof e.constructor){var f=e.constructor.name;if("string"==typeof f&&""!==f)return f}return t}(e)+"]":"{ "+a.map(function(t){var f=formatValue(e[t],i);return t+": "+f}).join(", ")+" }"}(e,t);default:return String(e)}}(l,[]),"."));var R=function(e,t,f){var n=e[t];if(n){if(!f&&"function"==typeof n)return n;var a=f?n.leave:n.enter;if("function"==typeof a)return a}else{var i=f?e.leave:e.enter;if(i){if("function"==typeof i)return i;var r=i[t];if("function"==typeof r)return r}}}(t,l.kind,g);if(R){if((k=R.call(t,l,p,h,b,m))===i)break;if(!1===k){if(!g){b.pop();continue}}else if(void 0!==k&&(u.push([p,k]),!g)){if(isNode(k))l=k;else{b.pop();continue}}}}void 0===k&&v&&u.push([p,l]),g?b.pop():(r={inArray:o,index:d,keys:s,edits:u,prev:r},s=(o=Array.isArray(l))?l:null!==(T=f[l.kind])&&void 0!==T?T:[],d=-1,u=[],h&&m.push(h),h=l)}while(void 0!==r);return 0!==u.length&&(y=u[u.length-1][1]),y}(e,{leave:r})}var r={Name:function(e){return e.value},Variable:function(e){return"$"+e.name},Document:function(e){return join(e.definitions,"\n\n")+"\n"},OperationDefinition:function(e){var t=e.operation,f=e.name,n=wrap("(",join(e.variableDefinitions,", "),")"),a=join(e.directives," "),i=e.selectionSet;return f||a||n||"query"!==t?join([t,join([f,n]),a,i]," "):i},VariableDefinition:function(e){var t=e.variable,f=e.type,n=e.defaultValue,a=e.directives;return t+": "+f+wrap(" = ",n)+wrap(" ",join(a," "))},SelectionSet:function(e){return block(e.selections)},Field:function(e){var t=e.alias,f=e.name,n=e.arguments,a=e.directives,i=e.selectionSet,r=wrap("",t,": ")+f,o=r+wrap("(",join(n,", "),")");return o.length>80&&(o=r+wrap("(\n",indent(join(n,"\n")),"\n)")),join([o,join(a," "),i]," ")},Argument:function(e){return e.name+": "+e.value},FragmentSpread:function(e){return"..."+e.name+wrap(" ",join(e.directives," "))},InlineFragment:function(e){var t=e.typeCondition,f=e.directives,n=e.selectionSet;return join(["...",wrap("on ",t),join(f," "),n]," ")},FragmentDefinition:function(e){var t=e.name,f=e.typeCondition,n=e.variableDefinitions,a=e.directives,i=e.selectionSet;return"fragment ".concat(t).concat(wrap("(",join(n,", "),")")," ")+"on ".concat(f," ").concat(wrap("",join(a," ")," "))+i},IntValue:function(e){return e.value},FloatValue:function(e){return e.value},StringValue:function(e,t){var f=e.value;return e.block?function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"",f=arguments.length>2&&void 0!==arguments[2]&&arguments[2],n=-1===e.indexOf("\n"),a=" "===e[0]||"	"===e[0],i='"'===e[e.length-1],r="\\"===e[e.length-1],o=!n||i||r||f,s="";return o&&!(n&&a)&&(s+="\n"+t),s+=t?e.replace(/\n/g,"\n"+t):e,o&&(s+="\n"),'"""'+s.replace(/"""/g,'\\"""')+'"""'}(f,"description"===t?"":"  "):JSON.stringify(f)},BooleanValue:function(e){return e.value?"true":"false"},NullValue:function(){return"null"},EnumValue:function(e){return e.value},ListValue:function(e){return"["+join(e.values,", ")+"]"},ObjectValue:function(e){return"{"+join(e.fields,", ")+"}"},ObjectField:function(e){return e.name+": "+e.value},Directive:function(e){return"@"+e.name+wrap("(",join(e.arguments,", "),")")},NamedType:function(e){return e.name},ListType:function(e){return"["+e.type+"]"},NonNullType:function(e){return e.type+"!"},SchemaDefinition:addDescription(function(e){var t=e.directives,f=e.operationTypes;return join(["schema",join(t," "),block(f)]," ")}),OperationTypeDefinition:function(e){return e.operation+": "+e.type},ScalarTypeDefinition:addDescription(function(e){return join(["scalar",e.name,join(e.directives," ")]," ")}),ObjectTypeDefinition:addDescription(function(e){var t=e.name,f=e.interfaces,n=e.directives,a=e.fields;return join(["type",t,wrap("implements ",join(f," & ")),join(n," "),block(a)]," ")}),FieldDefinition:addDescription(function(e){var t=e.name,f=e.arguments,n=e.type,a=e.directives;return t+(hasMultilineItems(f)?wrap("(\n",indent(join(f,"\n")),"\n)"):wrap("(",join(f,", "),")"))+": "+n+wrap(" ",join(a," "))}),InputValueDefinition:addDescription(function(e){var t=e.name,f=e.type,n=e.defaultValue,a=e.directives;return join([t+": "+f,wrap("= ",n),join(a," ")]," ")}),InterfaceTypeDefinition:addDescription(function(e){var t=e.name,f=e.interfaces,n=e.directives,a=e.fields;return join(["interface",t,wrap("implements ",join(f," & ")),join(n," "),block(a)]," ")}),UnionTypeDefinition:addDescription(function(e){var t=e.name,f=e.directives,n=e.types;return join(["union",t,join(f," "),n&&0!==n.length?"= "+join(n," | "):""]," ")}),EnumTypeDefinition:addDescription(function(e){var t=e.name,f=e.directives,n=e.values;return join(["enum",t,join(f," "),block(n)]," ")}),EnumValueDefinition:addDescription(function(e){return join([e.name,join(e.directives," ")]," ")}),InputObjectTypeDefinition:addDescription(function(e){var t=e.name,f=e.directives,n=e.fields;return join(["input",t,join(f," "),block(n)]," ")}),DirectiveDefinition:addDescription(function(e){var t=e.name,f=e.arguments,n=e.repeatable,a=e.locations;return"directive @"+t+(hasMultilineItems(f)?wrap("(\n",indent(join(f,"\n")),"\n)"):wrap("(",join(f,", "),")"))+(n?" repeatable":"")+" on "+join(a," | ")}),SchemaExtension:function(e){var t=e.directives,f=e.operationTypes;return join(["extend schema",join(t," "),block(f)]," ")},ScalarTypeExtension:function(e){return join(["extend scalar",e.name,join(e.directives," ")]," ")},ObjectTypeExtension:function(e){var t=e.name,f=e.interfaces,n=e.directives,a=e.fields;return join(["extend type",t,wrap("implements ",join(f," & ")),join(n," "),block(a)]," ")},InterfaceTypeExtension:function(e){var t=e.name,f=e.interfaces,n=e.directives,a=e.fields;return join(["extend interface",t,wrap("implements ",join(f," & ")),join(n," "),block(a)]," ")},UnionTypeExtension:function(e){var t=e.name,f=e.directives,n=e.types;return join(["extend union",t,join(f," "),n&&0!==n.length?"= "+join(n," | "):""]," ")},EnumTypeExtension:function(e){var t=e.name,f=e.directives,n=e.values;return join(["extend enum",t,join(f," "),block(n)]," ")},InputObjectTypeExtension:function(e){var t=e.name,f=e.directives,n=e.fields;return join(["extend input",t,join(f," "),block(n)]," ")}};function addDescription(e){return function(t){return join([t.description,e(t)],"\n")}}function join(e){var t,f=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"";return null!==(t=null==e?void 0:e.filter(function(e){return e}).join(f))&&void 0!==t?t:""}function block(e){return wrap("{\n",indent(join(e,"\n")),"\n}")}function wrap(e,t){var f=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"";return null!=t&&""!==t?e+t+f:""}function indent(e){return wrap("  ",e.replace(/\n/g,"\n  "))}function isMultiline(e){return -1!==e.indexOf("\n")}function hasMultilineItems(e){return null!=e&&e.some(isMultiline)}},23445:function(e){"use strict";e.exports=JSON.parse('{"name":"axios","version":"0.21.4","description":"Promise based HTTP client for the browser and node.js","main":"index.js","scripts":{"test":"grunt test","start":"node ./sandbox/server.js","build":"NODE_ENV=production grunt build","preversion":"npm test","version":"npm run build && grunt version && git add -A dist && git add CHANGELOG.md bower.json package.json","postversion":"git push && git push --tags","examples":"node ./examples/server.js","coveralls":"cat coverage/lcov.info | ./node_modules/coveralls/bin/coveralls.js","fix":"eslint --fix lib/**/*.js"},"repository":{"type":"git","url":"https://github.com/axios/axios.git"},"keywords":["xhr","http","ajax","promise","node"],"author":"Matt Zabriskie","license":"MIT","bugs":{"url":"https://github.com/axios/axios/issues"},"homepage":"https://axios-http.com","devDependencies":{"coveralls":"^3.0.0","es6-promise":"^4.2.4","grunt":"^1.3.0","grunt-banner":"^0.6.0","grunt-cli":"^1.2.0","grunt-contrib-clean":"^1.1.0","grunt-contrib-watch":"^1.0.0","grunt-eslint":"^23.0.0","grunt-karma":"^4.0.0","grunt-mocha-test":"^0.13.3","grunt-ts":"^6.0.0-beta.19","grunt-webpack":"^4.0.2","istanbul-instrumenter-loader":"^1.0.0","jasmine-core":"^2.4.1","karma":"^6.3.2","karma-chrome-launcher":"^3.1.0","karma-firefox-launcher":"^2.1.0","karma-jasmine":"^1.1.1","karma-jasmine-ajax":"^0.1.13","karma-safari-launcher":"^1.0.0","karma-sauce-launcher":"^4.3.6","karma-sinon":"^1.0.5","karma-sourcemap-loader":"^0.3.8","karma-webpack":"^4.0.2","load-grunt-tasks":"^3.5.2","minimist":"^1.2.0","mocha":"^8.2.1","sinon":"^4.5.0","terser-webpack-plugin":"^4.2.3","typescript":"^4.0.5","url-search-params":"^0.10.0","webpack":"^4.44.2","webpack-dev-server":"^3.11.0"},"browser":{"./lib/adapters/http.js":"./lib/adapters/xhr.js"},"jsdelivr":"dist/axios.min.js","unpkg":"dist/axios.min.js","typings":"./index.d.ts","dependencies":{"follow-redirects":"^1.14.0"},"bundlesize":[{"path":"./dist/axios.min.js","threshold":"5kB"}]}')}}]);